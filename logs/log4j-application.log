2020-02-03 14:21:56 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-02-03 14:21:56 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-02-03 14:21:56 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-02-03 14:21:56 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-02-03 14:21:56 INFO  Version:46 - HHH000412: Hibernate Core {5.4.10.Final}
2020-02-03 14:21:56 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-02-03 14:21:56 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-02-03 14:21:56 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-02-03 14:21:56 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-02-03 14:21:56 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-02-03 14:21:56 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-02-03 14:21:56 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-02-03 14:21:56 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@7cf6a5f9
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@7cf6a5f9
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7cf6a5f9
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@79351f41
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5023bb8b
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@53bd8fca
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@614df0a4
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@614df0a4
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@614df0a4
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@68be8808
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@68be8808
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@68be8808
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@49d3c823
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@49d3c823
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@49d3c823
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@550a1967
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@550a1967
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@550a1967
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@f80945f
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@f80945f
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@f80945f
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@77b14724
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@77b14724
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@77b14724
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7b84fcf8
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7b84fcf8
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7b84fcf8
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2cc44ad
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2cc44ad
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@33b1c5c5
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@33b1c5c5
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@4535b6d5
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4535b6d5
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4b41e4dd
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@40844aab
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@6d23017e
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6d23017e
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@10ded6a9
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@10ded6a9
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@31d0e481
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@31d0e481
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3bcbb589
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3bcbb589
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5aac4250
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5aac4250
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@67c2e933
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@67c2e933
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6ebf0f36
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6ebf0f36
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5f6722d3
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5f6722d3
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@31000e60
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@31000e60
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@4af0df05
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4af0df05
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@2072acb2
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2072acb2
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@299321e2
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@299321e2
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@299321e2
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@25a6944c
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@4fce136b
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4fce136b
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4fce136b
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@12bd8a64
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@3a393455
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3a393455
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@8692d67
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@8692d67
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@44e3a2b2
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@44e3a2b2
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@42f8285e
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@42f8285e
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@340da44c
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@340da44c
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7a560583
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@7e5d9a50
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@7e5d9a50
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@7e5d9a50
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@784c3487
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@784c3487
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@784c3487
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@61c9c3fd
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@302a07d
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@4cf8b2dc
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@4cf8b2dc
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@4cf8b2dc
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@c2db68f
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@c2db68f
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@c2db68f
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@3668d4
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@4c2cc639
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@710b18a6
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@710b18a6
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@25e2ab5a
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@3ecd267f
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3ecd267f
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@3bd418e4
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3bd418e4
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3569fc08
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@54a67a45
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@58fb7731
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@315f43d5
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@315f43d5
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@640f11a1
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5c10f1c3
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7ac2e39b
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@78365cfa
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@64a8c844
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3f6db3fb
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@52de51b6
2020-02-03 14:21:57 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@18c5069b
2020-02-03 14:21:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-02-03 14:21:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-02-03 14:21:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-02-03 14:21:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-02-03 14:21:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-02-03 14:21:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-02-03 14:21:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-02-03 14:21:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-02-03 14:21:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-02-03 14:21:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-02-03 14:21:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-02-03 14:21:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-02-03 14:21:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-02-03 14:21:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-02-03 14:21:57 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-02-03 14:21:57 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC]
2020-02-03 14:21:57 INFO  pooling:121 - HHH10001001: Connection properties: {password=roman, user=root}
2020-02-03 14:21:57 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-02-03 14:21:57 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-02-03 14:21:57 INFO  DriverManagerConnectionProviderImpl:249 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-02-03 14:21:58 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
2020-02-03 14:21:58 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.19 (Revision: a0ca826f5cdf51a98356fdfb1bf251eb042f80bf)
      major : 8
      minor : 0
2020-02-03 14:21:58 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-02-03 14:21:58 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-02-03 14:21:58 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-02-03 14:21:58 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-02-03 14:21:58 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-02-03 14:21:58 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@57bd802b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5cbb84b1]
2020-02-03 14:21:58 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.Movie
2020-02-03 14:21:58 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-02-03 14:21:58 DEBUG EntityBinder:430 - Import with entity name Movie
2020-02-03 14:21:58 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.Movie on table Movie
2020-02-03 14:21:58 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-02-03 14:21:58 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-02-03 14:21:58 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:id]
2020-02-03 14:21:58 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-02-03 14:21:58 DEBUG PropertyBinder:266 - Building property id
2020-02-03 14:21:58 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-02-03 14:21:58 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-02-03 14:21:58 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-02-03 14:21:58 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:description]
2020-02-03 14:21:58 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-02-03 14:21:58 DEBUG PropertyBinder:266 - Building property description
2020-02-03 14:21:58 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Movie), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-02-03 14:21:58 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-02-03 14:21:58 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:title]
2020-02-03 14:21:58 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-02-03 14:21:58 DEBUG PropertyBinder:266 - Building property title
2020-02-03 14:21:58 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-02-03 14:21:58 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-02-03 14:21:58 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-02-03 14:21:58 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-02-03 14:21:58 DEBUG SessionFactoryImpl:207 - Building session factory
2020-02-03 14:21:58 DEBUG Settings:68 - SessionFactory name : null
2020-02-03 14:21:58 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-02-03 14:21:58 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-02-03 14:21:58 DEBUG Settings:72 - Statistics: disabled
2020-02-03 14:21:58 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-02-03 14:21:58 DEBUG Settings:75 - Default entity-mode: pojo
2020-02-03 14:21:58 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-02-03 14:21:58 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-02-03 14:21:58 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2020-02-03 14:21:58 DEBUG Settings:80 - Default batch fetch size: -1
2020-02-03 14:21:58 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-02-03 14:21:58 DEBUG Settings:82 - Default null ordering: NONE
2020-02-03 14:21:58 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-02-03 14:21:58 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-02-03 14:21:58 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-02-03 14:21:58 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-02-03 14:21:58 DEBUG Settings:90 - Query language substitutions: {}
2020-02-03 14:21:58 DEBUG Settings:91 - Named query checking : enabled
2020-02-03 14:21:58 DEBUG Settings:93 - Second-level cache: disabled
2020-02-03 14:21:58 DEBUG Settings:94 - Second-level query cache: disabled
2020-02-03 14:21:58 DEBUG Settings:95 - Second-level query cache factory: null
2020-02-03 14:21:58 DEBUG Settings:96 - Second-level cache region prefix: null
2020-02-03 14:21:58 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-02-03 14:21:58 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-02-03 14:21:58 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-02-03 14:21:58 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-02-03 14:21:58 DEBUG Settings:102 - JDBC batch size: 15
2020-02-03 14:21:58 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-02-03 14:21:58 DEBUG Settings:104 - Scrollable result sets: enabled
2020-02-03 14:21:58 DEBUG Settings:105 - Wrap result sets: disabled
2020-02-03 14:21:58 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-02-03 14:21:58 DEBUG Settings:107 - JDBC result set fetch size: null
2020-02-03 14:21:58 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-02-03 14:21:58 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-02-03 14:21:58 DEBUG Settings:111 - JPA compliance - query : disabled
2020-02-03 14:21:58 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2020-02-03 14:21:58 DEBUG Settings:113 - JPA compliance - lists : disabled
2020-02-03 14:21:58 DEBUG Settings:114 - JPA compliance - transactions : disabled
2020-02-03 14:21:58 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-02-03 14:21:58 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, dialect=org.hibernate.dialect.MySQL5Dialect, java.specification.version=11, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\admin\Desktop\HW_Mate_from_Shop\cinema_project\target\classes;C:\Users\admin\.m2\repository\org\hibernate\hibernate-core\5.4.10.Final\hibernate-core-5.4.10.Final.jar;C:\Users\admin\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\admin\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\admin\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\admin\.m2\repository\net\bytebuddy\byte-buddy\1.10.2\byte-buddy-1.10.2.jar;C:\Users\admin\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\admin\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\admin\.m2\repository\org\jboss\jandex\2.1.1.Final\jandex-2.1.1.Final.jar;C:\Users\admin\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\admin\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\admin\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\admin\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\admin\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\admin\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\admin\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\admin\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\admin\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\admin\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\admin\.m2\repository\org\hibernate\hibernate-java8\5.4.10.Final\hibernate-java8-5.4.10.Final.jar;C:\Users\admin\.m2\repository\mysql\mysql-connector-java\8.0.19\mysql-connector-java-8.0.19.jar;C:\Users\admin\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\admin\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=JetBrains s.r.o, sun.arch.data.model=64, hbm2ddl.auto=create-drop, user.variant=, java.vendor.url=https://www.jetbrains.com/, user.timezone=Europe/Helsinki, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=D:\IntelliJ IDEA 2019.3.1\jbr\bin, sun.java.command=com.dev.cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\admin, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2019-10-15, java.home=D:\IntelliJ IDEA 2019.3.1\jbr, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, user.script=, connection.password=roman, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.5+10-b520.17, user.name=admin, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://youtrack.jetbrains.com, java.io.tmpdir=C:\Users\admin\AppData\Local\Temp\, java.version=11.0.5, user.dir=C:\Users\admin\Desktop\HW_Mate_from_Shop\cinema_project, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6d2dc9d2, java.library.path=D:\IntelliJ IDEA 2019.3.1\jbr\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\admin\AppData\Local\Microsoft\WindowsApps;;D:\IntelliJ IDEA 2019.3.1\bin;;., java.vendor=JetBrains s.r.o, java.vm.info=mixed mode, sharing, java.vm.version=11.0.5+10-b520.17, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, java.class.version=55.0}
2020-02-03 14:21:58 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-02-03 14:21:58 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-02-03 14:21:58 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@57bd802b] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@431f1eaf]
2020-02-03 14:21:58 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-02-03 14:21:58 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-02-03 14:21:58 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-02-03 14:21:58 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-02-03 14:21:58 DEBUG AbstractEntityPersister:3847 - Static SQL for entity: com.dev.cinema.model.Movie
2020-02-03 14:21:58 DEBUG AbstractEntityPersister:3852 -  Version select: select id from Movie where id =?
2020-02-03 14:21:58 DEBUG AbstractEntityPersister:3855 -  Snapshot select: select movie_.id, movie_.description as descript2_0_, movie_.title as title3_0_ from Movie movie_ where movie_.id=?
2020-02-03 14:21:58 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Movie (description, title, id) values (?, ?, ?)
2020-02-03 14:21:58 DEBUG AbstractEntityPersister:394 -  Update 0: update Movie set description=?, title=? where id=?
2020-02-03 14:21:58 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Movie where id=?
2020-02-03 14:21:58 DEBUG AbstractEntityPersister:3863 -  Identity insert: insert into Movie (description, title) values (?, ?)
2020-02-03 14:21:58 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e26af6]
2020-02-03 14:21:58 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-02-03 14:21:58 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-02-03 14:21:58 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-02-03 14:21:58 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-02-03 14:21:58 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-02-03 14:21:58 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [NONE]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from Movie movie0_ where movie0_.id=?
2020-02-03 14:21:58 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@625a4ff]
2020-02-03 14:21:58 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-02-03 14:21:58 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-02-03 14:21:58 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-02-03 14:21:58 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-02-03 14:21:58 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-02-03 14:21:58 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [READ]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from Movie movie0_ where movie0_.id=?
2020-02-03 14:21:58 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from Movie movie0_ where movie0_.id=?
2020-02-03 14:21:58 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from Movie movie0_ where movie0_.id=?
2020-02-03 14:21:58 DEBUG SQL:127 - drop table if exists Movie
2020-02-03 14:21:58 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7426a448] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-02-03 14:21:58 DEBUG SQL:127 - create table Movie (id bigint not null auto_increment, description varchar(255), title varchar(255), primary key (id)) engine=MyISAM
2020-02-03 14:21:58 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7301eebe] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-02-03 14:21:58 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-02-03 14:21:58 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-02-03 14:21:58 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-03 14:21:58 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-03 14:21:58 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-02-03 14:21:58 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-02-03 14:21:58 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@c386958
2020-02-03 14:21:58 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 55f8ae6c-b806-4c34-946c-e7154de23de1 (<unnamed>)
2020-02-03 14:21:58 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-02-03 14:52:44 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-02-03 14:52:44 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-02-03 14:52:44 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-02-03 14:52:44 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-02-03 14:52:45 INFO  Version:46 - HHH000412: Hibernate Core {5.4.10.Final}
2020-02-03 14:52:45 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-02-03 14:52:45 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-02-03 14:52:45 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-02-03 14:52:45 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-02-03 14:52:45 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-02-03 14:52:45 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-02-03 14:52:45 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-02-03 14:52:45 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@623e088f
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@623e088f
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@623e088f
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1c32386d
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5d5f10b2
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@7642df8f
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@1fdf1c5
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@1fdf1c5
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1fdf1c5
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@32193bea
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@32193bea
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@32193bea
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@436bc36
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@436bc36
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@436bc36
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@2a640157
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@2a640157
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2a640157
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@ff684e1
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@ff684e1
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@ff684e1
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@5d9b7a8a
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@5d9b7a8a
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5d9b7a8a
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@30b19518
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@30b19518
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@30b19518
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@44b3606b
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@44b3606b
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5b202a3a
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5b202a3a
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@1ecee32c
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1ecee32c
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@22ffa91a
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1f6c9cd8
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@54dcfa5a
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@54dcfa5a
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@c5dc4a2
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@c5dc4a2
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@3243b914
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3243b914
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3b00856b
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3b00856b
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1338fb5
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1338fb5
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@41dd05a
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@41dd05a
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@18920cc
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@18920cc
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2c532cd8
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2c532cd8
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1d470d0
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1d470d0
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@57ea113a
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@57ea113a
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@50ecde95
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@50ecde95
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@23fb172e
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@23fb172e
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@23fb172e
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5e1fa5b1
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@4aa83f4f
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4aa83f4f
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4aa83f4f
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@61e94def
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@13518f37
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@13518f37
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@78f5c518
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@78f5c518
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@101639ae
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@101639ae
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@26bab2f1
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@26bab2f1
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@424ebba3
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@424ebba3
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4d722ac9
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@60957c0f
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@60957c0f
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@60957c0f
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@53142455
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@53142455
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@53142455
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@3b0c9195
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@5cdd09b1
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@708400f6
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@708400f6
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@708400f6
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3cc41abc
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3cc41abc
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3cc41abc
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@1c3b9394
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@ccb4b1b
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@119020fb
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@119020fb
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35e5d0e5
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@58ffcbd7
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@58ffcbd7
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@544820b7
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@544820b7
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@20b12f8a
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7d42c224
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@13e547a9
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@68fa0ba8
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@68fa0ba8
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5c10f1c3
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7ac2e39b
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@78365cfa
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@64a8c844
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3f6db3fb
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@52de51b6
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@18c5069b
2020-02-03 14:52:45 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3a0d172f
2020-02-03 14:52:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-02-03 14:52:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-02-03 14:52:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-02-03 14:52:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-02-03 14:52:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-02-03 14:52:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-02-03 14:52:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-02-03 14:52:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-02-03 14:52:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-02-03 14:52:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-02-03 14:52:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-02-03 14:52:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-02-03 14:52:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-02-03 14:52:45 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-02-03 14:52:45 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-02-03 14:52:45 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC]
2020-02-03 14:52:45 INFO  pooling:121 - HHH10001001: Connection properties: {password=roman, user=root}
2020-02-03 14:52:45 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-02-03 14:52:45 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-02-03 14:52:45 INFO  DriverManagerConnectionProviderImpl:249 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-02-03 14:52:46 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
2020-02-03 14:52:46 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.19 (Revision: a0ca826f5cdf51a98356fdfb1bf251eb042f80bf)
      major : 8
      minor : 0
2020-02-03 14:52:46 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-02-03 14:52:46 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-02-03 14:52:46 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-02-03 14:52:46 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-02-03 14:52:46 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-02-03 14:52:46 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5cbb84b1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2c779e5]
2020-02-03 14:52:46 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.Movie
2020-02-03 14:52:46 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-02-03 14:52:46 DEBUG EntityBinder:430 - Import with entity name Movie
2020-02-03 14:52:46 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.Movie on table Movie
2020-02-03 14:52:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-02-03 14:52:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-02-03 14:52:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:id]
2020-02-03 14:52:46 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-02-03 14:52:46 DEBUG PropertyBinder:266 - Building property id
2020-02-03 14:52:46 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-02-03 14:52:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-02-03 14:52:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-02-03 14:52:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:description]
2020-02-03 14:52:46 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-02-03 14:52:46 DEBUG PropertyBinder:266 - Building property description
2020-02-03 14:52:46 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Movie), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-02-03 14:52:46 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-02-03 14:52:46 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:title]
2020-02-03 14:52:46 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-02-03 14:52:46 DEBUG PropertyBinder:266 - Building property title
2020-02-03 14:52:46 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-02-03 14:52:46 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-02-03 14:52:46 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-02-03 14:52:46 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-02-03 14:52:46 DEBUG SessionFactoryImpl:207 - Building session factory
2020-02-03 14:52:46 DEBUG Settings:68 - SessionFactory name : null
2020-02-03 14:52:46 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-02-03 14:52:46 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-02-03 14:52:46 DEBUG Settings:72 - Statistics: disabled
2020-02-03 14:52:46 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-02-03 14:52:46 DEBUG Settings:75 - Default entity-mode: pojo
2020-02-03 14:52:46 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-02-03 14:52:46 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-02-03 14:52:46 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2020-02-03 14:52:46 DEBUG Settings:80 - Default batch fetch size: -1
2020-02-03 14:52:46 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-02-03 14:52:46 DEBUG Settings:82 - Default null ordering: NONE
2020-02-03 14:52:46 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-02-03 14:52:46 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-02-03 14:52:46 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-02-03 14:52:46 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-02-03 14:52:46 DEBUG Settings:90 - Query language substitutions: {}
2020-02-03 14:52:46 DEBUG Settings:91 - Named query checking : enabled
2020-02-03 14:52:46 DEBUG Settings:93 - Second-level cache: disabled
2020-02-03 14:52:46 DEBUG Settings:94 - Second-level query cache: disabled
2020-02-03 14:52:46 DEBUG Settings:95 - Second-level query cache factory: null
2020-02-03 14:52:46 DEBUG Settings:96 - Second-level cache region prefix: null
2020-02-03 14:52:46 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-02-03 14:52:46 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-02-03 14:52:46 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-02-03 14:52:46 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-02-03 14:52:46 DEBUG Settings:102 - JDBC batch size: 15
2020-02-03 14:52:46 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-02-03 14:52:46 DEBUG Settings:104 - Scrollable result sets: enabled
2020-02-03 14:52:46 DEBUG Settings:105 - Wrap result sets: disabled
2020-02-03 14:52:46 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-02-03 14:52:46 DEBUG Settings:107 - JDBC result set fetch size: null
2020-02-03 14:52:46 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-02-03 14:52:46 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-02-03 14:52:46 DEBUG Settings:111 - JPA compliance - query : disabled
2020-02-03 14:52:46 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2020-02-03 14:52:46 DEBUG Settings:113 - JPA compliance - lists : disabled
2020-02-03 14:52:46 DEBUG Settings:114 - JPA compliance - transactions : disabled
2020-02-03 14:52:46 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-02-03 14:52:46 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, dialect=org.hibernate.dialect.MySQL5Dialect, java.specification.version=11, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\admin\Desktop\HW_Mate_from_Shop\cinema_project\target\classes;C:\Users\admin\.m2\repository\org\hibernate\hibernate-core\5.4.10.Final\hibernate-core-5.4.10.Final.jar;C:\Users\admin\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\admin\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\admin\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\admin\.m2\repository\net\bytebuddy\byte-buddy\1.10.2\byte-buddy-1.10.2.jar;C:\Users\admin\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\admin\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\admin\.m2\repository\org\jboss\jandex\2.1.1.Final\jandex-2.1.1.Final.jar;C:\Users\admin\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\admin\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\admin\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\admin\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\admin\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\admin\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\admin\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\admin\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\admin\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\admin\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\admin\.m2\repository\org\hibernate\hibernate-java8\5.4.10.Final\hibernate-java8-5.4.10.Final.jar;C:\Users\admin\.m2\repository\mysql\mysql-connector-java\8.0.19\mysql-connector-java-8.0.19.jar;C:\Users\admin\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\admin\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=JetBrains s.r.o, sun.arch.data.model=64, hbm2ddl.auto=create-drop, user.variant=, java.vendor.url=https://www.jetbrains.com/, user.timezone=Europe/Helsinki, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=D:\IntelliJ IDEA 2019.3.1\jbr\bin, sun.java.command=com.dev.cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\admin, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2019-10-15, java.home=D:\IntelliJ IDEA 2019.3.1\jbr, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, user.script=, connection.password=roman, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.5+10-b520.17, user.name=admin, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://youtrack.jetbrains.com, java.io.tmpdir=C:\Users\admin\AppData\Local\Temp\, java.version=11.0.5, user.dir=C:\Users\admin\Desktop\HW_Mate_from_Shop\cinema_project, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1da4b6b3, java.library.path=D:\IntelliJ IDEA 2019.3.1\jbr\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\admin\AppData\Local\Microsoft\WindowsApps;;D:\IntelliJ IDEA 2019.3.1\bin;;., java.vendor=JetBrains s.r.o, java.vm.info=mixed mode, sharing, java.vm.version=11.0.5+10-b520.17, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, java.class.version=55.0}
2020-02-03 14:52:46 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-02-03 14:52:46 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-02-03 14:52:46 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5cbb84b1] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@cb03411]
2020-02-03 14:52:46 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-02-03 14:52:46 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-02-03 14:52:46 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-02-03 14:52:46 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-02-03 14:52:47 DEBUG AbstractEntityPersister:3847 - Static SQL for entity: com.dev.cinema.model.Movie
2020-02-03 14:52:47 DEBUG AbstractEntityPersister:3852 -  Version select: select id from Movie where id =?
2020-02-03 14:52:47 DEBUG AbstractEntityPersister:3855 -  Snapshot select: select movie_.id, movie_.description as descript2_0_, movie_.title as title3_0_ from Movie movie_ where movie_.id=?
2020-02-03 14:52:47 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Movie (description, title, id) values (?, ?, ?)
2020-02-03 14:52:47 DEBUG AbstractEntityPersister:394 -  Update 0: update Movie set description=?, title=? where id=?
2020-02-03 14:52:47 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Movie where id=?
2020-02-03 14:52:47 DEBUG AbstractEntityPersister:3863 -  Identity insert: insert into Movie (description, title) values (?, ?)
2020-02-03 14:52:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44065156]
2020-02-03 14:52:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-02-03 14:52:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-02-03 14:52:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-02-03 14:52:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-02-03 14:52:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-02-03 14:52:47 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [NONE]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from Movie movie0_ where movie0_.id=?
2020-02-03 14:52:47 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41dc0598]
2020-02-03 14:52:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-02-03 14:52:47 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-02-03 14:52:47 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-02-03 14:52:47 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-02-03 14:52:47 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-02-03 14:52:47 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [READ]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from Movie movie0_ where movie0_.id=?
2020-02-03 14:52:47 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from Movie movie0_ where movie0_.id=?
2020-02-03 14:52:47 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from Movie movie0_ where movie0_.id=?
2020-02-03 14:52:47 DEBUG SQL:127 - drop table if exists Movie
2020-02-03 14:52:47 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@516462cc] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-02-03 14:52:47 DEBUG SQL:127 - create table Movie (id bigint not null auto_increment, description varchar(255), title varchar(255), primary key (id)) engine=MyISAM
2020-02-03 14:52:47 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@6342ff7f] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-02-03 14:52:47 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-02-03 14:52:47 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-02-03 14:52:47 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-03 14:52:47 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-03 14:52:47 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-02-03 14:52:47 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-02-03 14:52:47 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4d1ff6b1
2020-02-03 14:52:47 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 15504c98-e641-49c9-b0e3-acd181ca6e49 (<unnamed>)
2020-02-03 14:52:47 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-02-03 14:52:47 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-02-03 14:52:47 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-02-03 14:52:47 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-02-03 14:52:47 DEBUG SQL:127 - insert into Movie (description, title) values (?, ?)
2020-02-03 14:52:47 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-02-03 14:52:47 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-02-03 14:52:47 DEBUG TransactionImpl:131 - rollback() called on an inactive transaction
2020-02-03 14:57:22 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-02-03 14:57:22 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-02-03 14:57:22 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-02-03 14:57:22 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-02-03 14:57:22 INFO  Version:46 - HHH000412: Hibernate Core {5.4.10.Final}
2020-02-03 14:57:22 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-02-03 14:57:23 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-02-03 14:57:23 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-02-03 14:57:23 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-02-03 14:57:23 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-02-03 14:57:23 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-02-03 14:57:23 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-02-03 14:57:23 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@29ef6856
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@29ef6856
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@29ef6856
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7e985ce9
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@d5ae57e
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@592e843a
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@2a1edad4
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@2a1edad4
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2a1edad4
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@2c1b9e4b
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@2c1b9e4b
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2c1b9e4b
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4eed46ee
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4eed46ee
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4eed46ee
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@77192705
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@77192705
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@77192705
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@5dbe30be
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@5dbe30be
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5dbe30be
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7fd4acee
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7fd4acee
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7fd4acee
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@76c7beb3
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@76c7beb3
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@76c7beb3
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5f2f577
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5f2f577
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@117e0fe5
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@117e0fe5
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@452ba1db
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@452ba1db
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@f9d87b
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@70dd7e15
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@191ae03f
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@191ae03f
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@5bda80bf
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5bda80bf
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@65e61854
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@65e61854
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5f4d427e
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5f4d427e
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1d9bec4d
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1d9bec4d
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5fb97279
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5fb97279
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@40dd3977
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@40dd3977
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@591e58fa
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@591e58fa
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@61078690
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@61078690
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@285d851a
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@285d851a
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@71104a4
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@71104a4
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5217f3d0
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5217f3d0
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5217f3d0
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6fa590ba
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@47874b25
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@47874b25
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@47874b25
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@18e7143f
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@8a589a2
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@8a589a2
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@5cc69cfe
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5cc69cfe
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@11acdc30
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@11acdc30
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@644c78d4
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@644c78d4
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4089713
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4089713
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b6166aa
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@319dead1
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@319dead1
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@319dead1
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2f08c4b
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2f08c4b
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2f08c4b
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@4c36250e
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@5471388b
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@142eef62
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@142eef62
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@142eef62
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@12cd9150
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@12cd9150
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@12cd9150
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@724f138e
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@64da2a7
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@70fab835
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@70fab835
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@26be6ca7
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@2fd1731c
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2fd1731c
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@770d0ea6
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@770d0ea6
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@476aac9
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1eba372c
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@5e77f0f4
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@7eb01b12
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7eb01b12
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@e6516e
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6de54b40
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@43ed0ff3
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@388ffbc2
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@a50b09c
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4da855dd
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6691490c
2020-02-03 14:57:23 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2187fff7
2020-02-03 14:57:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-02-03 14:57:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-02-03 14:57:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-02-03 14:57:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-02-03 14:57:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-02-03 14:57:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-02-03 14:57:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-02-03 14:57:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-02-03 14:57:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-02-03 14:57:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-02-03 14:57:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-02-03 14:57:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-02-03 14:57:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-02-03 14:57:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-02-03 14:57:23 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-02-03 14:57:23 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC]
2020-02-03 14:57:23 INFO  pooling:121 - HHH10001001: Connection properties: {password=roman, user=root}
2020-02-03 14:57:23 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-02-03 14:57:23 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-02-03 14:57:23 INFO  DriverManagerConnectionProviderImpl:249 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-02-03 14:57:24 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
2020-02-03 14:57:24 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.19 (Revision: a0ca826f5cdf51a98356fdfb1bf251eb042f80bf)
      major : 8
      minor : 0
2020-02-03 14:57:24 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-02-03 14:57:24 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-02-03 14:57:24 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-02-03 14:57:24 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-02-03 14:57:24 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-02-03 14:57:24 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@47fbc56] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@151ef57f]
2020-02-03 14:57:24 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.Movie
2020-02-03 14:57:24 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-02-03 14:57:24 DEBUG EntityBinder:430 - Import with entity name Movie
2020-02-03 14:57:24 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.Movie on table Movie
2020-02-03 14:57:24 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-02-03 14:57:24 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-02-03 14:57:24 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:id]
2020-02-03 14:57:24 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-02-03 14:57:24 DEBUG PropertyBinder:266 - Building property id
2020-02-03 14:57:24 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-02-03 14:57:24 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-02-03 14:57:24 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-02-03 14:57:24 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:description]
2020-02-03 14:57:24 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-02-03 14:57:24 DEBUG PropertyBinder:266 - Building property description
2020-02-03 14:57:24 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Movie), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-02-03 14:57:24 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-02-03 14:57:24 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:title]
2020-02-03 14:57:24 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-02-03 14:57:24 DEBUG PropertyBinder:266 - Building property title
2020-02-03 14:57:24 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-02-03 14:57:24 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-02-03 14:57:24 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-02-03 14:57:24 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-02-03 14:57:24 DEBUG SessionFactoryImpl:207 - Building session factory
2020-02-03 14:57:24 DEBUG Settings:68 - SessionFactory name : null
2020-02-03 14:57:24 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-02-03 14:57:24 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-02-03 14:57:24 DEBUG Settings:72 - Statistics: disabled
2020-02-03 14:57:24 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-02-03 14:57:24 DEBUG Settings:75 - Default entity-mode: pojo
2020-02-03 14:57:24 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-02-03 14:57:24 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-02-03 14:57:24 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2020-02-03 14:57:24 DEBUG Settings:80 - Default batch fetch size: -1
2020-02-03 14:57:24 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-02-03 14:57:24 DEBUG Settings:82 - Default null ordering: NONE
2020-02-03 14:57:24 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-02-03 14:57:24 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-02-03 14:57:24 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-02-03 14:57:24 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-02-03 14:57:24 DEBUG Settings:90 - Query language substitutions: {}
2020-02-03 14:57:24 DEBUG Settings:91 - Named query checking : enabled
2020-02-03 14:57:24 DEBUG Settings:93 - Second-level cache: disabled
2020-02-03 14:57:24 DEBUG Settings:94 - Second-level query cache: disabled
2020-02-03 14:57:24 DEBUG Settings:95 - Second-level query cache factory: null
2020-02-03 14:57:24 DEBUG Settings:96 - Second-level cache region prefix: null
2020-02-03 14:57:24 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-02-03 14:57:24 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-02-03 14:57:24 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-02-03 14:57:24 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-02-03 14:57:24 DEBUG Settings:102 - JDBC batch size: 15
2020-02-03 14:57:24 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-02-03 14:57:24 DEBUG Settings:104 - Scrollable result sets: enabled
2020-02-03 14:57:24 DEBUG Settings:105 - Wrap result sets: disabled
2020-02-03 14:57:24 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-02-03 14:57:24 DEBUG Settings:107 - JDBC result set fetch size: null
2020-02-03 14:57:24 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-02-03 14:57:24 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-02-03 14:57:24 DEBUG Settings:111 - JPA compliance - query : disabled
2020-02-03 14:57:24 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2020-02-03 14:57:24 DEBUG Settings:113 - JPA compliance - lists : disabled
2020-02-03 14:57:24 DEBUG Settings:114 - JPA compliance - transactions : disabled
2020-02-03 14:57:24 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-02-03 14:57:24 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, dialect=org.hibernate.dialect.MySQL5Dialect, java.specification.version=11, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\admin\Desktop\HW_Mate_from_Shop\cinema_project\target\classes;C:\Users\admin\.m2\repository\org\hibernate\hibernate-core\5.4.10.Final\hibernate-core-5.4.10.Final.jar;C:\Users\admin\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\admin\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\admin\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\admin\.m2\repository\net\bytebuddy\byte-buddy\1.10.2\byte-buddy-1.10.2.jar;C:\Users\admin\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\admin\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\admin\.m2\repository\org\jboss\jandex\2.1.1.Final\jandex-2.1.1.Final.jar;C:\Users\admin\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\admin\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\admin\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\admin\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\admin\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\admin\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\admin\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\admin\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\admin\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\admin\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\admin\.m2\repository\org\hibernate\hibernate-java8\5.4.10.Final\hibernate-java8-5.4.10.Final.jar;C:\Users\admin\.m2\repository\mysql\mysql-connector-java\8.0.19\mysql-connector-java-8.0.19.jar;C:\Users\admin\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\admin\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\IntelliJ IDEA 2019.3.1\lib\idea_rt.jar, java.vm.vendor=JetBrains s.r.o, sun.arch.data.model=64, hbm2ddl.auto=create-drop, user.variant=, java.vendor.url=https://www.jetbrains.com/, user.timezone=Europe/Helsinki, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=D:\IntelliJ IDEA 2019.3.1\jbr\bin, sun.java.command=com.dev.cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\admin, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2019-10-15, java.home=D:\IntelliJ IDEA 2019.3.1\jbr, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, intellij.debug.agent=true, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, user.script=, connection.password=roman, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.5+10-b520.17, user.name=admin, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://youtrack.jetbrains.com, java.io.tmpdir=C:\Users\admin\AppData\Local\Temp\, java.version=11.0.5, jboss.modules.system.pkgs=com.intellij.rt, user.dir=C:\Users\admin\Desktop\HW_Mate_from_Shop\cinema_project, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2dd0f797, java.library.path=D:\IntelliJ IDEA 2019.3.1\jbr\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\admin\AppData\Local\Microsoft\WindowsApps;;D:\IntelliJ IDEA 2019.3.1\bin;;., java.vendor=JetBrains s.r.o, java.vm.info=mixed mode, sharing, java.vm.version=11.0.5+10-b520.17, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, java.class.version=55.0}
2020-02-03 14:57:24 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-02-03 14:57:24 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-02-03 14:57:24 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@47fbc56] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@862f408]
2020-02-03 14:57:24 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-02-03 14:57:24 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-02-03 14:57:24 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-02-03 14:57:24 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-02-03 14:57:25 DEBUG AbstractEntityPersister:3847 - Static SQL for entity: com.dev.cinema.model.Movie
2020-02-03 14:57:25 DEBUG AbstractEntityPersister:3852 -  Version select: select id from Movie where id =?
2020-02-03 14:57:25 DEBUG AbstractEntityPersister:3855 -  Snapshot select: select movie_.id, movie_.description as descript2_0_, movie_.title as title3_0_ from Movie movie_ where movie_.id=?
2020-02-03 14:57:25 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Movie (description, title, id) values (?, ?, ?)
2020-02-03 14:57:25 DEBUG AbstractEntityPersister:394 -  Update 0: update Movie set description=?, title=? where id=?
2020-02-03 14:57:25 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Movie where id=?
2020-02-03 14:57:25 DEBUG AbstractEntityPersister:3863 -  Identity insert: insert into Movie (description, title) values (?, ?)
2020-02-03 14:57:25 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@479ac2cb]
2020-02-03 14:57:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-02-03 14:57:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-02-03 14:57:25 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-02-03 14:57:25 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-02-03 14:57:25 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-02-03 14:57:25 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [NONE]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from Movie movie0_ where movie0_.id=?
2020-02-03 14:57:25 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16132f21]
2020-02-03 14:57:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-02-03 14:57:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-02-03 14:57:25 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-02-03 14:57:25 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-02-03 14:57:25 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-02-03 14:57:25 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [READ]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from Movie movie0_ where movie0_.id=?
2020-02-03 14:57:25 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from Movie movie0_ where movie0_.id=?
2020-02-03 14:57:25 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from Movie movie0_ where movie0_.id=?
2020-02-03 14:57:25 DEBUG SQL:127 - drop table if exists Movie
2020-02-03 14:57:25 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@77f4c040] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-02-03 14:57:25 DEBUG SQL:127 - create table Movie (id bigint not null auto_increment, description varchar(255), title varchar(255), primary key (id)) engine=MyISAM
2020-02-03 14:57:25 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7364eed1] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-02-03 14:57:25 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-02-03 14:57:25 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-02-03 14:57:25 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-03 14:57:25 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-03 14:57:25 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-02-03 14:57:25 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-02-03 14:57:25 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@38f981b6
2020-02-03 14:57:25 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 49570e1c-b1e3-4539-8122-15719283a740 (<unnamed>)
2020-02-03 14:57:25 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-02-03 14:57:25 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-02-03 14:57:30 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-02-03 14:57:35 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-02-03 14:57:35 DEBUG SQL:127 - insert into Movie (description, title) values (?, ?)
2020-02-03 14:57:35 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-02-03 14:57:35 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-02-03 14:58:21 DEBUG TransactionImpl:131 - rollback() called on an inactive transaction
2020-02-03 14:58:21 DEBUG DriverManagerConnectionProviderImpl:259 - Connection pool now considered primed; min-size will be maintained
2020-02-03 15:03:51 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-02-03 15:03:51 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-02-03 15:03:51 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-02-03 15:03:51 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-02-03 15:03:51 INFO  Version:46 - HHH000412: Hibernate Core {5.4.10.Final}
2020-02-03 15:03:51 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-02-03 15:03:51 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-02-03 15:03:51 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-02-03 15:03:51 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-02-03 15:03:51 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-02-03 15:03:51 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-02-03 15:03:51 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-02-03 15:03:51 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@623e088f
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@623e088f
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@623e088f
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1c32386d
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5d5f10b2
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@7642df8f
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@1fdf1c5
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@1fdf1c5
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1fdf1c5
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@32193bea
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@32193bea
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@32193bea
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@436bc36
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@436bc36
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@436bc36
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@2a640157
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@2a640157
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2a640157
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@ff684e1
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@ff684e1
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@ff684e1
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@5d9b7a8a
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@5d9b7a8a
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5d9b7a8a
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@30b19518
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@30b19518
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@30b19518
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@44b3606b
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@44b3606b
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5b202a3a
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5b202a3a
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@1ecee32c
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1ecee32c
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@22ffa91a
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1f6c9cd8
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@54dcfa5a
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@54dcfa5a
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@c5dc4a2
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@c5dc4a2
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@3243b914
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3243b914
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3b00856b
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3b00856b
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1338fb5
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1338fb5
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@41dd05a
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@41dd05a
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@18920cc
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@18920cc
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2c532cd8
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2c532cd8
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1d470d0
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1d470d0
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@57ea113a
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@57ea113a
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@50ecde95
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@50ecde95
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@23fb172e
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@23fb172e
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@23fb172e
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5e1fa5b1
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@4aa83f4f
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4aa83f4f
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4aa83f4f
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@61e94def
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@13518f37
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@13518f37
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@78f5c518
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@78f5c518
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@101639ae
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@101639ae
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@26bab2f1
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@26bab2f1
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@424ebba3
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@424ebba3
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4d722ac9
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@60957c0f
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@60957c0f
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@60957c0f
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@53142455
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@53142455
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@53142455
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@3b0c9195
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@5cdd09b1
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@708400f6
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@708400f6
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@708400f6
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3cc41abc
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3cc41abc
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3cc41abc
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@1c3b9394
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@ccb4b1b
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@119020fb
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@119020fb
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35e5d0e5
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@58ffcbd7
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@58ffcbd7
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@544820b7
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@544820b7
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@20b12f8a
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7d42c224
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@13e547a9
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@68fa0ba8
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@68fa0ba8
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5c10f1c3
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7ac2e39b
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@78365cfa
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@64a8c844
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3f6db3fb
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@52de51b6
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@18c5069b
2020-02-03 15:03:52 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3a0d172f
2020-02-03 15:03:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-02-03 15:03:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-02-03 15:03:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-02-03 15:03:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-02-03 15:03:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-02-03 15:03:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-02-03 15:03:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-02-03 15:03:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-02-03 15:03:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-02-03 15:03:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-02-03 15:03:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-02-03 15:03:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-02-03 15:03:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-02-03 15:03:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-02-03 15:03:52 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-02-03 15:03:52 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC]
2020-02-03 15:03:52 INFO  pooling:121 - HHH10001001: Connection properties: {password=roman, user=root}
2020-02-03 15:03:52 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-02-03 15:03:52 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-02-03 15:03:52 INFO  DriverManagerConnectionProviderImpl:249 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-02-03 15:03:52 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
2020-02-03 15:03:52 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.19 (Revision: a0ca826f5cdf51a98356fdfb1bf251eb042f80bf)
      major : 8
      minor : 0
2020-02-03 15:03:52 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-02-03 15:03:52 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-02-03 15:03:52 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-02-03 15:03:52 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-02-03 15:03:52 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-02-03 15:03:52 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5cbb84b1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2c779e5]
2020-02-03 15:03:52 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.Movie
2020-02-03 15:03:52 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-02-03 15:03:52 DEBUG EntityBinder:430 - Import with entity name Movie
2020-02-03 15:03:52 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.Movie on table Movie
2020-02-03 15:03:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-02-03 15:03:52 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-02-03 15:03:52 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:id]
2020-02-03 15:03:52 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-02-03 15:03:52 DEBUG PropertyBinder:266 - Building property id
2020-02-03 15:03:53 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-02-03 15:03:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-02-03 15:03:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-02-03 15:03:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:description]
2020-02-03 15:03:53 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-02-03 15:03:53 DEBUG PropertyBinder:266 - Building property description
2020-02-03 15:03:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Movie), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-02-03 15:03:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-02-03 15:03:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:title]
2020-02-03 15:03:53 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-02-03 15:03:53 DEBUG PropertyBinder:266 - Building property title
2020-02-03 15:03:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-02-03 15:03:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-02-03 15:03:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-02-03 15:03:53 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-02-03 15:03:53 DEBUG SessionFactoryImpl:207 - Building session factory
2020-02-03 15:03:53 DEBUG Settings:68 - SessionFactory name : null
2020-02-03 15:03:53 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-02-03 15:03:53 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-02-03 15:03:53 DEBUG Settings:72 - Statistics: disabled
2020-02-03 15:03:53 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-02-03 15:03:53 DEBUG Settings:75 - Default entity-mode: pojo
2020-02-03 15:03:53 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-02-03 15:03:53 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-02-03 15:03:53 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2020-02-03 15:03:53 DEBUG Settings:80 - Default batch fetch size: -1
2020-02-03 15:03:53 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-02-03 15:03:53 DEBUG Settings:82 - Default null ordering: NONE
2020-02-03 15:03:53 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-02-03 15:03:53 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-02-03 15:03:53 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-02-03 15:03:53 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-02-03 15:03:53 DEBUG Settings:90 - Query language substitutions: {}
2020-02-03 15:03:53 DEBUG Settings:91 - Named query checking : enabled
2020-02-03 15:03:53 DEBUG Settings:93 - Second-level cache: disabled
2020-02-03 15:03:53 DEBUG Settings:94 - Second-level query cache: disabled
2020-02-03 15:03:53 DEBUG Settings:95 - Second-level query cache factory: null
2020-02-03 15:03:53 DEBUG Settings:96 - Second-level cache region prefix: null
2020-02-03 15:03:53 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-02-03 15:03:53 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-02-03 15:03:53 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-02-03 15:03:53 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-02-03 15:03:53 DEBUG Settings:102 - JDBC batch size: 15
2020-02-03 15:03:53 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-02-03 15:03:53 DEBUG Settings:104 - Scrollable result sets: enabled
2020-02-03 15:03:53 DEBUG Settings:105 - Wrap result sets: disabled
2020-02-03 15:03:53 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-02-03 15:03:53 DEBUG Settings:107 - JDBC result set fetch size: null
2020-02-03 15:03:53 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-02-03 15:03:53 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-02-03 15:03:53 DEBUG Settings:111 - JPA compliance - query : disabled
2020-02-03 15:03:53 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2020-02-03 15:03:53 DEBUG Settings:113 - JPA compliance - lists : disabled
2020-02-03 15:03:53 DEBUG Settings:114 - JPA compliance - transactions : disabled
2020-02-03 15:03:53 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-02-03 15:03:53 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, dialect=org.hibernate.dialect.MySQL5Dialect, java.specification.version=11, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\admin\Desktop\HW_Mate_from_Shop\cinema_project\target\classes;C:\Users\admin\.m2\repository\org\hibernate\hibernate-core\5.4.10.Final\hibernate-core-5.4.10.Final.jar;C:\Users\admin\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\admin\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\admin\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\admin\.m2\repository\net\bytebuddy\byte-buddy\1.10.2\byte-buddy-1.10.2.jar;C:\Users\admin\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\admin\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\admin\.m2\repository\org\jboss\jandex\2.1.1.Final\jandex-2.1.1.Final.jar;C:\Users\admin\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\admin\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\admin\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\admin\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\admin\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\admin\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\admin\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\admin\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\admin\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\admin\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\admin\.m2\repository\org\hibernate\hibernate-java8\5.4.10.Final\hibernate-java8-5.4.10.Final.jar;C:\Users\admin\.m2\repository\mysql\mysql-connector-java\8.0.19\mysql-connector-java-8.0.19.jar;C:\Users\admin\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\admin\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=JetBrains s.r.o, sun.arch.data.model=64, hbm2ddl.auto=create-drop, user.variant=, java.vendor.url=https://www.jetbrains.com/, user.timezone=Europe/Helsinki, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=D:\IntelliJ IDEA 2019.3.1\jbr\bin, sun.java.command=com.dev.cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\admin, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2019-10-15, java.home=D:\IntelliJ IDEA 2019.3.1\jbr, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, user.script=, connection.password=roman, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.5+10-b520.17, user.name=admin, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://youtrack.jetbrains.com, java.io.tmpdir=C:\Users\admin\AppData\Local\Temp\, java.version=11.0.5, user.dir=C:\Users\admin\Desktop\HW_Mate_from_Shop\cinema_project, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1da4b6b3, java.library.path=D:\IntelliJ IDEA 2019.3.1\jbr\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\admin\AppData\Local\Microsoft\WindowsApps;;D:\IntelliJ IDEA 2019.3.1\bin;;., java.vendor=JetBrains s.r.o, java.vm.info=mixed mode, sharing, java.vm.version=11.0.5+10-b520.17, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, java.class.version=55.0}
2020-02-03 15:03:53 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-02-03 15:03:53 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-02-03 15:03:53 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5cbb84b1] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@cb03411]
2020-02-03 15:03:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-02-03 15:03:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-02-03 15:03:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-02-03 15:03:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-02-03 15:03:53 DEBUG AbstractEntityPersister:3847 - Static SQL for entity: com.dev.cinema.model.Movie
2020-02-03 15:03:53 DEBUG AbstractEntityPersister:3852 -  Version select: select id from Movie where id =?
2020-02-03 15:03:53 DEBUG AbstractEntityPersister:3855 -  Snapshot select: select movie_.id, movie_.description as descript2_0_, movie_.title as title3_0_ from Movie movie_ where movie_.id=?
2020-02-03 15:03:53 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Movie (description, title, id) values (?, ?, ?)
2020-02-03 15:03:53 DEBUG AbstractEntityPersister:394 -  Update 0: update Movie set description=?, title=? where id=?
2020-02-03 15:03:53 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Movie where id=?
2020-02-03 15:03:53 DEBUG AbstractEntityPersister:3863 -  Identity insert: insert into Movie (description, title) values (?, ?)
2020-02-03 15:03:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44065156]
2020-02-03 15:03:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-02-03 15:03:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-02-03 15:03:53 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-02-03 15:03:53 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-02-03 15:03:53 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-02-03 15:03:53 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [NONE]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from Movie movie0_ where movie0_.id=?
2020-02-03 15:03:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41dc0598]
2020-02-03 15:03:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-02-03 15:03:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-02-03 15:03:53 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-02-03 15:03:53 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-02-03 15:03:53 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-02-03 15:03:53 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [READ]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from Movie movie0_ where movie0_.id=?
2020-02-03 15:03:53 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from Movie movie0_ where movie0_.id=?
2020-02-03 15:03:53 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from Movie movie0_ where movie0_.id=?
2020-02-03 15:03:53 DEBUG SQL:127 - drop table if exists Movie
2020-02-03 15:03:53 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@516462cc] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-02-03 15:03:53 DEBUG SQL:127 - create table Movie (id bigint not null auto_increment, description varchar(255), title varchar(255), primary key (id)) engine=MyISAM
2020-02-03 15:03:53 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@6342ff7f] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-02-03 15:03:53 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-02-03 15:03:53 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-02-03 15:03:53 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-03 15:03:53 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-03 15:03:53 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-02-03 15:03:53 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-02-03 15:03:53 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4d1ff6b1
2020-02-03 15:03:53 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 1a4e534a-c873-4878-98c3-9013ea1db6c9 (<unnamed>)
2020-02-03 15:03:53 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-02-03 15:03:53 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-02-03 15:03:53 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-02-03 15:03:53 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-02-03 15:03:53 DEBUG SQL:127 - insert into Movie (description, title) values (?, ?)
2020-02-03 15:03:53 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-02-03 15:03:53 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-02-03 15:03:53 DEBUG TransactionImpl:131 - rollback() called on an inactive transaction
2020-02-03 15:06:10 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-02-03 15:06:10 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-02-03 15:06:10 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-02-03 15:06:10 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-02-03 15:06:10 INFO  Version:46 - HHH000412: Hibernate Core {5.4.10.Final}
2020-02-03 15:06:10 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-02-03 15:06:10 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-02-03 15:06:11 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-02-03 15:06:11 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-02-03 15:06:11 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-02-03 15:06:11 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-02-03 15:06:11 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-02-03 15:06:11 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@623e088f
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@623e088f
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@623e088f
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1c32386d
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5d5f10b2
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@7642df8f
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@1fdf1c5
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@1fdf1c5
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1fdf1c5
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@32193bea
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@32193bea
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@32193bea
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@436bc36
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@436bc36
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@436bc36
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@2a640157
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@2a640157
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2a640157
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@ff684e1
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@ff684e1
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@ff684e1
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@5d9b7a8a
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@5d9b7a8a
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5d9b7a8a
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@30b19518
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@30b19518
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@30b19518
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@44b3606b
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@44b3606b
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5b202a3a
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5b202a3a
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@1ecee32c
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1ecee32c
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@22ffa91a
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1f6c9cd8
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@54dcfa5a
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@54dcfa5a
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@c5dc4a2
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@c5dc4a2
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@3243b914
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3243b914
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3b00856b
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3b00856b
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1338fb5
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1338fb5
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@41dd05a
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@41dd05a
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@18920cc
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@18920cc
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2c532cd8
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2c532cd8
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1d470d0
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1d470d0
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@57ea113a
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@57ea113a
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@50ecde95
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@50ecde95
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@23fb172e
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@23fb172e
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@23fb172e
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5e1fa5b1
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@4aa83f4f
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4aa83f4f
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4aa83f4f
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@61e94def
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@13518f37
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@13518f37
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@78f5c518
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@78f5c518
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@101639ae
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@101639ae
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@26bab2f1
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@26bab2f1
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@424ebba3
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@424ebba3
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4d722ac9
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@60957c0f
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@60957c0f
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@60957c0f
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@53142455
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@53142455
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@53142455
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@3b0c9195
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@5cdd09b1
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@708400f6
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@708400f6
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@708400f6
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3cc41abc
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3cc41abc
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3cc41abc
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@1c3b9394
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@ccb4b1b
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@119020fb
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@119020fb
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35e5d0e5
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@58ffcbd7
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@58ffcbd7
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@544820b7
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@544820b7
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@20b12f8a
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7d42c224
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@13e547a9
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@68fa0ba8
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@68fa0ba8
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5c10f1c3
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7ac2e39b
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@78365cfa
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@64a8c844
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3f6db3fb
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@52de51b6
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@18c5069b
2020-02-03 15:06:11 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3a0d172f
2020-02-03 15:06:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-02-03 15:06:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-02-03 15:06:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-02-03 15:06:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-02-03 15:06:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-02-03 15:06:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-02-03 15:06:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-02-03 15:06:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-02-03 15:06:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-02-03 15:06:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-02-03 15:06:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-02-03 15:06:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-02-03 15:06:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-02-03 15:06:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-02-03 15:06:11 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-02-03 15:06:11 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC]
2020-02-03 15:06:11 INFO  pooling:121 - HHH10001001: Connection properties: {password=roman, user=root}
2020-02-03 15:06:11 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-02-03 15:06:11 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-02-03 15:06:11 INFO  DriverManagerConnectionProviderImpl:249 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-02-03 15:06:12 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
2020-02-03 15:06:12 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.19 (Revision: a0ca826f5cdf51a98356fdfb1bf251eb042f80bf)
      major : 8
      minor : 0
2020-02-03 15:06:12 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-02-03 15:06:12 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-02-03 15:06:12 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-02-03 15:06:12 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-02-03 15:06:12 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-02-03 15:06:12 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5cbb84b1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2c779e5]
2020-02-03 15:06:12 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.Movie
2020-02-03 15:06:12 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-02-03 15:06:12 DEBUG EntityBinder:430 - Import with entity name Movie
2020-02-03 15:06:12 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.Movie on table Movie
2020-02-03 15:06:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-02-03 15:06:12 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-02-03 15:06:12 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:id]
2020-02-03 15:06:12 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-02-03 15:06:12 DEBUG PropertyBinder:266 - Building property id
2020-02-03 15:06:12 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-02-03 15:06:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-02-03 15:06:12 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-02-03 15:06:12 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:description]
2020-02-03 15:06:12 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-02-03 15:06:12 DEBUG PropertyBinder:266 - Building property description
2020-02-03 15:06:12 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Movie), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-02-03 15:06:12 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-02-03 15:06:12 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:title]
2020-02-03 15:06:12 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-02-03 15:06:12 DEBUG PropertyBinder:266 - Building property title
2020-02-03 15:06:12 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-02-03 15:06:12 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-02-03 15:06:12 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-02-03 15:06:12 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-02-03 15:06:12 DEBUG SessionFactoryImpl:207 - Building session factory
2020-02-03 15:06:12 DEBUG Settings:68 - SessionFactory name : null
2020-02-03 15:06:12 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-02-03 15:06:12 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-02-03 15:06:12 DEBUG Settings:72 - Statistics: disabled
2020-02-03 15:06:12 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-02-03 15:06:12 DEBUG Settings:75 - Default entity-mode: pojo
2020-02-03 15:06:12 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-02-03 15:06:12 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-02-03 15:06:12 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2020-02-03 15:06:12 DEBUG Settings:80 - Default batch fetch size: -1
2020-02-03 15:06:12 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-02-03 15:06:12 DEBUG Settings:82 - Default null ordering: NONE
2020-02-03 15:06:12 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-02-03 15:06:12 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-02-03 15:06:12 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-02-03 15:06:12 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-02-03 15:06:12 DEBUG Settings:90 - Query language substitutions: {}
2020-02-03 15:06:12 DEBUG Settings:91 - Named query checking : enabled
2020-02-03 15:06:12 DEBUG Settings:93 - Second-level cache: disabled
2020-02-03 15:06:12 DEBUG Settings:94 - Second-level query cache: disabled
2020-02-03 15:06:12 DEBUG Settings:95 - Second-level query cache factory: null
2020-02-03 15:06:12 DEBUG Settings:96 - Second-level cache region prefix: null
2020-02-03 15:06:12 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-02-03 15:06:12 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-02-03 15:06:12 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-02-03 15:06:12 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-02-03 15:06:12 DEBUG Settings:102 - JDBC batch size: 15
2020-02-03 15:06:12 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-02-03 15:06:12 DEBUG Settings:104 - Scrollable result sets: enabled
2020-02-03 15:06:12 DEBUG Settings:105 - Wrap result sets: disabled
2020-02-03 15:06:12 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-02-03 15:06:12 DEBUG Settings:107 - JDBC result set fetch size: null
2020-02-03 15:06:12 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-02-03 15:06:12 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-02-03 15:06:12 DEBUG Settings:111 - JPA compliance - query : disabled
2020-02-03 15:06:12 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2020-02-03 15:06:12 DEBUG Settings:113 - JPA compliance - lists : disabled
2020-02-03 15:06:12 DEBUG Settings:114 - JPA compliance - transactions : disabled
2020-02-03 15:06:12 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-02-03 15:06:12 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, dialect=org.hibernate.dialect.MySQL5Dialect, java.specification.version=11, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\admin\Desktop\HW_Mate_from_Shop\cinema_project\target\classes;C:\Users\admin\.m2\repository\org\hibernate\hibernate-core\5.4.10.Final\hibernate-core-5.4.10.Final.jar;C:\Users\admin\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\admin\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\admin\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\admin\.m2\repository\net\bytebuddy\byte-buddy\1.10.2\byte-buddy-1.10.2.jar;C:\Users\admin\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\admin\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\admin\.m2\repository\org\jboss\jandex\2.1.1.Final\jandex-2.1.1.Final.jar;C:\Users\admin\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\admin\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\admin\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\admin\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\admin\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\admin\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\admin\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\admin\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\admin\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\admin\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\admin\.m2\repository\org\hibernate\hibernate-java8\5.4.10.Final\hibernate-java8-5.4.10.Final.jar;C:\Users\admin\.m2\repository\mysql\mysql-connector-java\8.0.19\mysql-connector-java-8.0.19.jar;C:\Users\admin\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\admin\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=JetBrains s.r.o, sun.arch.data.model=64, hbm2ddl.auto=create-drop, user.variant=, java.vendor.url=https://www.jetbrains.com/, user.timezone=Europe/Helsinki, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=D:\IntelliJ IDEA 2019.3.1\jbr\bin, sun.java.command=com.dev.cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\admin, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2019-10-15, java.home=D:\IntelliJ IDEA 2019.3.1\jbr, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, user.script=, connection.password=roman, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.5+10-b520.17, user.name=admin, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://youtrack.jetbrains.com, java.io.tmpdir=C:\Users\admin\AppData\Local\Temp\, java.version=11.0.5, user.dir=C:\Users\admin\Desktop\HW_Mate_from_Shop\cinema_project, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1da4b6b3, java.library.path=D:\IntelliJ IDEA 2019.3.1\jbr\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\admin\AppData\Local\Microsoft\WindowsApps;;D:\IntelliJ IDEA 2019.3.1\bin;;., java.vendor=JetBrains s.r.o, java.vm.info=mixed mode, sharing, java.vm.version=11.0.5+10-b520.17, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, java.class.version=55.0}
2020-02-03 15:06:12 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-02-03 15:06:12 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-02-03 15:06:12 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5cbb84b1] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@cb03411]
2020-02-03 15:06:12 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-02-03 15:06:12 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-02-03 15:06:12 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-02-03 15:06:12 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-02-03 15:06:13 DEBUG AbstractEntityPersister:3847 - Static SQL for entity: com.dev.cinema.model.Movie
2020-02-03 15:06:13 DEBUG AbstractEntityPersister:3852 -  Version select: select id from Movie where id =?
2020-02-03 15:06:13 DEBUG AbstractEntityPersister:3855 -  Snapshot select: select movie_.id, movie_.description as descript2_0_, movie_.title as title3_0_ from Movie movie_ where movie_.id=?
2020-02-03 15:06:13 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Movie (description, title, id) values (?, ?, ?)
2020-02-03 15:06:13 DEBUG AbstractEntityPersister:394 -  Update 0: update Movie set description=?, title=? where id=?
2020-02-03 15:06:13 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Movie where id=?
2020-02-03 15:06:13 DEBUG AbstractEntityPersister:3863 -  Identity insert: insert into Movie (description, title) values (?, ?)
2020-02-03 15:06:13 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44065156]
2020-02-03 15:06:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-02-03 15:06:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-02-03 15:06:13 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-02-03 15:06:13 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-02-03 15:06:13 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-02-03 15:06:13 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [NONE]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from Movie movie0_ where movie0_.id=?
2020-02-03 15:06:13 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41dc0598]
2020-02-03 15:06:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-02-03 15:06:13 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-02-03 15:06:13 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-02-03 15:06:13 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-02-03 15:06:13 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-02-03 15:06:13 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [READ]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from Movie movie0_ where movie0_.id=?
2020-02-03 15:06:13 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from Movie movie0_ where movie0_.id=?
2020-02-03 15:06:13 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from Movie movie0_ where movie0_.id=?
2020-02-03 15:06:13 DEBUG SQL:127 - drop table if exists Movie
2020-02-03 15:06:13 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@516462cc] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-02-03 15:06:13 DEBUG SQL:127 - create table Movie (id bigint not null auto_increment, description varchar(255), title varchar(255), primary key (id)) engine=MyISAM
2020-02-03 15:06:13 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@6342ff7f] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-02-03 15:06:13 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-02-03 15:06:13 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-02-03 15:06:13 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-03 15:06:13 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-03 15:06:13 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-02-03 15:06:13 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-02-03 15:06:13 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4d1ff6b1
2020-02-03 15:06:13 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: eb99a400-b653-42b6-a074-17c61bedf75a (<unnamed>)
2020-02-03 15:06:13 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-02-03 15:06:13 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-02-03 15:06:13 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-02-03 15:06:13 DEBUG TransactionImpl:81 - begin
2020-02-03 15:06:13 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-02-03 15:06:13 DEBUG SQL:127 - insert into Movie (description, title) values (?, ?)
2020-02-03 15:06:13 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-02-03 15:06:13 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-02-03 15:06:13 DEBUG TransactionImpl:98 - committing
2020-02-03 15:06:13 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-02-03 15:06:13 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-02-03 15:06:13 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-02-03 15:06:13 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-02-03 15:06:13 DEBUG EntityPrinter:110 - Listing entities:
2020-02-03 15:06:13 DEBUG EntityPrinter:117 - com.dev.cinema.model.Movie{description=null, id=1, title=Fast and Furious}
2020-02-03 15:06:13 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-02-03 15:06:13 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-02-03 15:06:13 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-02-03 15:06:13 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@39f5b723
2020-02-03 15:06:13 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from com.dev.cinema.model.Movie as generatedAlias0
2020-02-03 15:06:13 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-02-03 15:06:13 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Movie'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-02-03 15:06:13 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-02-03 15:06:13 DEBUG FromElement:149 - FromClause{level=1} : com.dev.cinema.model.Movie (generatedAlias0) -> movie0_
2020-02-03 15:06:13 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> movie0_.id
2020-02-03 15:06:13 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-02-03 15:06:13 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} movie0_.id ) ( FromClause{level=1} Movie movie0_ ) )
2020-02-03 15:06:13 DEBUG JoinProcessor:128 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Movie): [Movie]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.dev.cinema.model.Movie)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-02-03 15:06:13 DEBUG JoinProcessor:295 - Using FROM fragment [Movie movie0_]
2020-02-03 15:06:13 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-02-03 15:06:13 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Movie)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_0_' {alias=generatedAlias0, className=com.dev.cinema.model.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.description as descript2_0_, movie0_.title as title3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[movie0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Movie,tableAlias=movie0_,origin=null,columns={,className=com.dev.cinema.model.Movie}}

2020-02-03 15:06:13 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-02-03 15:06:13 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from com.dev.cinema.model.Movie as generatedAlias0
2020-02-03 15:06:13 DEBUG QueryTranslatorImpl:255 - SQL: select movie0_.id as id1_0_, movie0_.description as descript2_0_, movie0_.title as title3_0_ from Movie movie0_
2020-02-03 15:06:13 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-02-03 15:06:13 DEBUG SQL:127 - select movie0_.id as id1_0_, movie0_.description as descript2_0_, movie0_.title as title3_0_ from Movie movie0_
2020-02-03 15:06:13 DEBUG Loader:384 - Result set row: 0
2020-02-03 15:06:13 DEBUG Loader:1586 - Result row: EntityKey[com.dev.cinema.model.Movie#1]
2020-02-03 15:06:13 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.Movie#1]
2020-02-03 15:06:13 DEBUG TwoPhaseLoad:190 - Processing attribute `description` : value = null
2020-02-03 15:06:13 DEBUG TwoPhaseLoad:221 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-02-03 15:06:13 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Fast and Furious
2020-02-03 15:06:13 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-02-03 15:06:13 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.Movie#1]
2020-02-03 15:06:13 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-02-03 15:44:49 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-02-03 15:44:49 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-02-03 15:44:49 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-02-03 15:44:49 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-02-03 15:44:49 INFO  Version:46 - HHH000412: Hibernate Core {5.4.10.Final}
2020-02-03 15:44:49 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-02-03 15:44:49 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-02-03 15:44:50 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-02-03 15:44:50 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-02-03 15:44:50 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-02-03 15:44:50 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-02-03 15:44:50 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-02-03 15:44:50 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@eda25e5
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@eda25e5
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@eda25e5
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6fe1b4fb
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@13d73fa
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@1e0f9063
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@1199fe66
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@1199fe66
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1199fe66
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@cd1d761
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@cd1d761
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@cd1d761
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@906d29b
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@906d29b
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@906d29b
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@57abad67
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@57abad67
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@57abad67
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@2dca0d64
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@2dca0d64
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2dca0d64
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@1cdc4c27
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@1cdc4c27
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1cdc4c27
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@628c4ac0
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@628c4ac0
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@628c4ac0
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@62e20a76
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@62e20a76
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@75cd8043
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@75cd8043
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@305a0c5f
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@305a0c5f
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@232a7d73
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@42721fe
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@28e8dde3
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@28e8dde3
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@17a1e4ca
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@17a1e4ca
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@59252cb6
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@59252cb6
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1d730606
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1d730606
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6b3e12b5
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6b3e12b5
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@fade1fc
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@fade1fc
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2e8e8225
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2e8e8225
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@39a8312f
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@39a8312f
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5911e990
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5911e990
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@2dd80673
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2dd80673
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@7216fb24
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7216fb24
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@6622fc65
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6622fc65
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6622fc65
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@158a3b2e
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@615091b8
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@615091b8
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@615091b8
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@19648c40
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@6f152006
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6f152006
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@4b2a01d4
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4b2a01d4
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4983159f
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4983159f
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@18bc345
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@18bc345
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@a43ce46
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@a43ce46
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2320fa6f
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@7e7b159b
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@7e7b159b
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@7e7b159b
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2dd29a59
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2dd29a59
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2dd29a59
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@2d36e77e
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@2c7b5824
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@5c08c46a
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@5c08c46a
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@5c08c46a
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@c35172e
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@c35172e
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@c35172e
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@61ce23ac
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@7f6f61c8
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@2cc3ad05
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2cc3ad05
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@c055c54
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@77d2e85
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@77d2e85
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@54e22bdd
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@54e22bdd
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2e61d218
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2e554a3b
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@704f1591
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@52d239ba
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@52d239ba
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2f05be7f
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@640f11a1
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5c10f1c3
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7ac2e39b
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@78365cfa
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@64a8c844
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3f6db3fb
2020-02-03 15:44:50 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@52de51b6
2020-02-03 15:44:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-02-03 15:44:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-02-03 15:44:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-02-03 15:44:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-02-03 15:44:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-02-03 15:44:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-02-03 15:44:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-02-03 15:44:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-02-03 15:44:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-02-03 15:44:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-02-03 15:44:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-02-03 15:44:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-02-03 15:44:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-02-03 15:44:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-02-03 15:44:50 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-02-03 15:44:50 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC]
2020-02-03 15:44:50 INFO  pooling:121 - HHH10001001: Connection properties: {password=roman, user=root}
2020-02-03 15:44:50 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-02-03 15:44:50 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-02-03 15:44:50 INFO  DriverManagerConnectionProviderImpl:249 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-02-03 15:44:51 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
2020-02-03 15:44:51 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.19 (Revision: a0ca826f5cdf51a98356fdfb1bf251eb042f80bf)
      major : 8
      minor : 0
2020-02-03 15:44:51 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-02-03 15:44:51 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-02-03 15:44:51 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-02-03 15:44:51 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-02-03 15:44:51 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-02-03 15:44:51 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29182679] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@57bd802b]
2020-02-03 15:44:51 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.Movie
2020-02-03 15:44:51 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-02-03 15:44:51 DEBUG EntityBinder:430 - Import with entity name Movie
2020-02-03 15:44:51 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.Movie on table Movie
2020-02-03 15:44:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-02-03 15:44:51 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-02-03 15:44:51 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:id]
2020-02-03 15:44:51 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-02-03 15:44:51 DEBUG PropertyBinder:266 - Building property id
2020-02-03 15:44:51 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-02-03 15:44:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-02-03 15:44:51 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-02-03 15:44:51 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:description]
2020-02-03 15:44:51 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-02-03 15:44:51 DEBUG PropertyBinder:266 - Building property description
2020-02-03 15:44:51 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Movie), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-02-03 15:44:51 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-02-03 15:44:51 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:title]
2020-02-03 15:44:51 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-02-03 15:44:51 DEBUG PropertyBinder:266 - Building property title
2020-02-03 15:44:51 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-02-03 15:44:51 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-02-03 15:44:51 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-02-03 15:44:51 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-02-03 15:44:51 DEBUG SessionFactoryImpl:207 - Building session factory
2020-02-03 15:44:51 DEBUG Settings:68 - SessionFactory name : null
2020-02-03 15:44:51 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-02-03 15:44:51 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-02-03 15:44:51 DEBUG Settings:72 - Statistics: disabled
2020-02-03 15:44:51 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-02-03 15:44:51 DEBUG Settings:75 - Default entity-mode: pojo
2020-02-03 15:44:51 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-02-03 15:44:51 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-02-03 15:44:51 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2020-02-03 15:44:51 DEBUG Settings:80 - Default batch fetch size: -1
2020-02-03 15:44:51 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-02-03 15:44:51 DEBUG Settings:82 - Default null ordering: NONE
2020-02-03 15:44:51 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-02-03 15:44:51 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-02-03 15:44:51 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-02-03 15:44:51 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-02-03 15:44:51 DEBUG Settings:90 - Query language substitutions: {}
2020-02-03 15:44:51 DEBUG Settings:91 - Named query checking : enabled
2020-02-03 15:44:51 DEBUG Settings:93 - Second-level cache: disabled
2020-02-03 15:44:51 DEBUG Settings:94 - Second-level query cache: disabled
2020-02-03 15:44:51 DEBUG Settings:95 - Second-level query cache factory: null
2020-02-03 15:44:51 DEBUG Settings:96 - Second-level cache region prefix: null
2020-02-03 15:44:51 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-02-03 15:44:51 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-02-03 15:44:51 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-02-03 15:44:51 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-02-03 15:44:51 DEBUG Settings:102 - JDBC batch size: 15
2020-02-03 15:44:51 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-02-03 15:44:51 DEBUG Settings:104 - Scrollable result sets: enabled
2020-02-03 15:44:51 DEBUG Settings:105 - Wrap result sets: disabled
2020-02-03 15:44:51 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-02-03 15:44:51 DEBUG Settings:107 - JDBC result set fetch size: null
2020-02-03 15:44:51 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-02-03 15:44:51 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-02-03 15:44:51 DEBUG Settings:111 - JPA compliance - query : disabled
2020-02-03 15:44:51 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2020-02-03 15:44:51 DEBUG Settings:113 - JPA compliance - lists : disabled
2020-02-03 15:44:51 DEBUG Settings:114 - JPA compliance - transactions : disabled
2020-02-03 15:44:51 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-02-03 15:44:51 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, dialect=org.hibernate.dialect.MySQL5Dialect, java.specification.version=11, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\admin\Desktop\HW_Mate_from_Shop\cinema_project\target\classes;C:\Users\admin\.m2\repository\org\hibernate\hibernate-core\5.4.10.Final\hibernate-core-5.4.10.Final.jar;C:\Users\admin\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\admin\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\admin\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\admin\.m2\repository\net\bytebuddy\byte-buddy\1.10.2\byte-buddy-1.10.2.jar;C:\Users\admin\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\admin\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\admin\.m2\repository\org\jboss\jandex\2.1.1.Final\jandex-2.1.1.Final.jar;C:\Users\admin\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\admin\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\admin\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\admin\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\admin\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\admin\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\admin\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\admin\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\admin\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\admin\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\admin\.m2\repository\mysql\mysql-connector-java\8.0.19\mysql-connector-java-8.0.19.jar;C:\Users\admin\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\admin\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=JetBrains s.r.o, sun.arch.data.model=64, hbm2ddl.auto=create-drop, user.variant=, java.vendor.url=https://www.jetbrains.com/, user.timezone=Europe/Helsinki, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=D:\IntelliJ IDEA 2019.3.1\jbr\bin, sun.java.command=com.dev.cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\admin, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2019-10-15, java.home=D:\IntelliJ IDEA 2019.3.1\jbr, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, user.script=, connection.password=roman, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.5+10-b520.17, user.name=admin, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://youtrack.jetbrains.com, java.io.tmpdir=C:\Users\admin\AppData\Local\Temp\, java.version=11.0.5, user.dir=C:\Users\admin\Desktop\HW_Mate_from_Shop\cinema_project, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@72d0f2b4, java.library.path=D:\IntelliJ IDEA 2019.3.1\jbr\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\admin\AppData\Local\Microsoft\WindowsApps;;D:\IntelliJ IDEA 2019.3.1\bin;;., java.vendor=JetBrains s.r.o, java.vm.info=mixed mode, sharing, java.vm.version=11.0.5+10-b520.17, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, java.class.version=55.0}
2020-02-03 15:44:51 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-02-03 15:44:51 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-02-03 15:44:51 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29182679] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@664e5dee]
2020-02-03 15:44:51 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-02-03 15:44:51 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-02-03 15:44:51 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-02-03 15:44:51 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-02-03 15:44:52 DEBUG AbstractEntityPersister:3847 - Static SQL for entity: com.dev.cinema.model.Movie
2020-02-03 15:44:52 DEBUG AbstractEntityPersister:3852 -  Version select: select id from Movie where id =?
2020-02-03 15:44:52 DEBUG AbstractEntityPersister:3855 -  Snapshot select: select movie_.id, movie_.description as descript2_0_, movie_.title as title3_0_ from Movie movie_ where movie_.id=?
2020-02-03 15:44:52 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Movie (description, title, id) values (?, ?, ?)
2020-02-03 15:44:52 DEBUG AbstractEntityPersister:394 -  Update 0: update Movie set description=?, title=? where id=?
2020-02-03 15:44:52 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Movie where id=?
2020-02-03 15:44:52 DEBUG AbstractEntityPersister:3863 -  Identity insert: insert into Movie (description, title) values (?, ?)
2020-02-03 15:44:52 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@358ab600]
2020-02-03 15:44:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-02-03 15:44:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-02-03 15:44:52 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-02-03 15:44:52 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-02-03 15:44:52 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-02-03 15:44:52 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [NONE]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from Movie movie0_ where movie0_.id=?
2020-02-03 15:44:52 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78e17a99]
2020-02-03 15:44:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-02-03 15:44:52 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-02-03 15:44:52 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-02-03 15:44:52 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-02-03 15:44:52 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-02-03 15:44:52 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [READ]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from Movie movie0_ where movie0_.id=?
2020-02-03 15:44:52 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from Movie movie0_ where movie0_.id=?
2020-02-03 15:44:52 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from Movie movie0_ where movie0_.id=?
2020-02-03 15:44:52 DEBUG SQL:127 - drop table if exists Movie
2020-02-03 15:44:52 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4d3c6593] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-02-03 15:44:52 DEBUG SQL:127 - create table Movie (id bigint not null auto_increment, description varchar(255), title varchar(255), primary key (id)) engine=MyISAM
2020-02-03 15:44:52 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@332bcab0] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-02-03 15:44:52 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-02-03 15:44:52 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-02-03 15:44:52 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-03 15:44:52 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-03 15:44:52 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-02-03 15:44:52 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-02-03 15:44:52 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3dc95b8b
2020-02-03 15:44:52 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 252ec240-f935-4556-9cd3-3c3e31c4437d (<unnamed>)
2020-02-03 15:44:52 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-02-03 15:44:52 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-02-03 15:44:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-02-03 15:44:52 DEBUG TransactionImpl:81 - begin
2020-02-03 15:44:52 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-02-03 15:44:52 DEBUG SQL:127 - insert into Movie (description, title) values (?, ?)
2020-02-03 15:44:52 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-02-03 15:44:52 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-02-03 15:44:52 DEBUG TransactionImpl:98 - committing
2020-02-03 15:44:52 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-02-03 15:44:52 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-02-03 15:44:52 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-02-03 15:44:52 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-02-03 15:44:52 DEBUG EntityPrinter:110 - Listing entities:
2020-02-03 15:44:52 DEBUG EntityPrinter:117 - com.dev.cinema.model.Movie{description=null, id=1, title=Fast and Furious}
2020-02-03 15:44:52 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-02-03 15:44:52 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-02-03 15:44:52 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-02-03 15:44:52 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3a3ed300
2020-02-03 15:44:52 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from com.dev.cinema.model.Movie as generatedAlias0
2020-02-03 15:44:52 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-02-03 15:44:52 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Movie'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-02-03 15:44:52 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-02-03 15:44:52 DEBUG FromElement:149 - FromClause{level=1} : com.dev.cinema.model.Movie (generatedAlias0) -> movie0_
2020-02-03 15:44:52 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> movie0_.id
2020-02-03 15:44:52 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-02-03 15:44:52 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} movie0_.id ) ( FromClause{level=1} Movie movie0_ ) )
2020-02-03 15:44:52 DEBUG JoinProcessor:128 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Movie): [Movie]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.dev.cinema.model.Movie)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-02-03 15:44:52 DEBUG JoinProcessor:295 - Using FROM fragment [Movie movie0_]
2020-02-03 15:44:52 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-02-03 15:44:52 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Movie)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_0_' {alias=generatedAlias0, className=com.dev.cinema.model.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.description as descript2_0_, movie0_.title as title3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[movie0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Movie,tableAlias=movie0_,origin=null,columns={,className=com.dev.cinema.model.Movie}}

2020-02-03 15:44:52 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-02-03 15:44:52 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from com.dev.cinema.model.Movie as generatedAlias0
2020-02-03 15:44:52 DEBUG QueryTranslatorImpl:255 - SQL: select movie0_.id as id1_0_, movie0_.description as descript2_0_, movie0_.title as title3_0_ from Movie movie0_
2020-02-03 15:44:52 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-02-03 15:44:52 DEBUG SQL:127 - select movie0_.id as id1_0_, movie0_.description as descript2_0_, movie0_.title as title3_0_ from Movie movie0_
2020-02-03 15:44:52 DEBUG Loader:384 - Result set row: 0
2020-02-03 15:44:52 DEBUG Loader:1586 - Result row: EntityKey[com.dev.cinema.model.Movie#1]
2020-02-03 15:44:52 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.Movie#1]
2020-02-03 15:44:52 DEBUG TwoPhaseLoad:190 - Processing attribute `description` : value = null
2020-02-03 15:44:52 DEBUG TwoPhaseLoad:221 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-02-03 15:44:52 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Fast and Furious
2020-02-03 15:44:52 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-02-03 15:44:52 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.Movie#1]
2020-02-03 15:44:52 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-02-04 14:34:25 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-02-04 14:34:25 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-02-04 14:34:25 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-02-04 14:34:25 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-02-04 14:34:25 INFO  Version:46 - HHH000412: Hibernate Core {5.4.10.Final}
2020-02-04 14:34:25 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-02-04 14:34:26 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-02-04 14:34:27 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-02-04 14:34:27 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-02-04 14:34:27 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-02-04 14:34:27 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-02-04 14:34:27 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-02-04 14:34:27 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@67304a40
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@67304a40
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@67304a40
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7642df8f
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@37c7595
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@1fdf1c5
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@6b8d96d9
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@6b8d96d9
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6b8d96d9
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@5fe1ce85
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@5fe1ce85
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5fe1ce85
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@52851b44
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@52851b44
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@52851b44
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@23aa363a
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@23aa363a
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@23aa363a
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@1e8ce150
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@1e8ce150
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1e8ce150
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@363042d7
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@363042d7
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@363042d7
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@1477089c
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@1477089c
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1477089c
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@10b9db7b
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@10b9db7b
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4372b9b6
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4372b9b6
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@1f6c9cd8
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1f6c9cd8
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7f36662c
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1817f1eb
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@4a194c39
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4a194c39
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@c4ed84
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@c4ed84
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@3016fd5e
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3016fd5e
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@42463763
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@42463763
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@613a8ee1
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@613a8ee1
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2807bdeb
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2807bdeb
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@294e5088
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@294e5088
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@24d09c1
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@24d09c1
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ff65192
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ff65192
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@50ecde95
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@50ecde95
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@23fb172e
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@23fb172e
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1d131e1b
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1d131e1b
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1d131e1b
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4aa83f4f
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@70ab2d48
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@70ab2d48
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@70ab2d48
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7cbc3762
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@2f48b3d2
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2f48b3d2
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@4c550889
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4c550889
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3724af13
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3724af13
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@37052337
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@37052337
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@616fe72b
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@616fe72b
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@60957c0f
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@40dff0b7
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@40dff0b7
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@40dff0b7
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@366c4480
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@366c4480
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@366c4480
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@5cbe877d
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@5829e4f4
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@4566d049
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@4566d049
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@4566d049
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@ccb4b1b
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@ccb4b1b
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@ccb4b1b
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@7c1e2a2d
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@2cc3ad05
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@7e276594
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7e276594
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@77d2e85
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@54e22bdd
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@54e22bdd
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@7d42c224
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7d42c224
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5e01a982
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@704f1591
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@6955cb39
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@3f6db3fb
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3f6db3fb
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@68ad99fe
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@485e36bc
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@781f10f2
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2a79d4b1
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2e9fda69
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@17cdf2d0
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1755e85b
2020-02-04 14:34:27 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@736d6a5c
2020-02-04 14:34:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-02-04 14:34:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-02-04 14:34:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-02-04 14:34:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-02-04 14:34:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-02-04 14:34:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-02-04 14:34:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-02-04 14:34:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-02-04 14:34:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-02-04 14:34:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-02-04 14:34:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-02-04 14:34:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-02-04 14:34:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-02-04 14:34:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-02-04 14:34:27 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-02-04 14:34:27 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC]
2020-02-04 14:34:27 INFO  pooling:121 - HHH10001001: Connection properties: {password=roman, user=root}
2020-02-04 14:34:27 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-02-04 14:34:27 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-02-04 14:34:27 INFO  DriverManagerConnectionProviderImpl:249 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-02-04 14:34:28 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
2020-02-04 14:34:28 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.19 (Revision: a0ca826f5cdf51a98356fdfb1bf251eb042f80bf)
      major : 8
      minor : 0
2020-02-04 14:34:28 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-02-04 14:34:28 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-02-04 14:34:28 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-02-04 14:34:28 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-02-04 14:34:28 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-02-04 14:34:28 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5328a9c1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5b78fdb1]
2020-02-04 14:34:28 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.Movie
2020-02-04 14:34:28 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-02-04 14:34:28 DEBUG EntityBinder:430 - Import with entity name Movie
2020-02-04 14:34:28 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.Movie on table movie
2020-02-04 14:34:29 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-02-04 14:34:29 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-02-04 14:34:29 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:id]
2020-02-04 14:34:29 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-02-04 14:34:29 DEBUG PropertyBinder:266 - Building property id
2020-02-04 14:34:29 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-02-04 14:34:29 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-02-04 14:34:29 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-02-04 14:34:29 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:description]
2020-02-04 14:34:29 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-02-04 14:34:29 DEBUG PropertyBinder:266 - Building property description
2020-02-04 14:34:29 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-02-04 14:34:29 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-02-04 14:34:29 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:title]
2020-02-04 14:34:29 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-02-04 14:34:29 DEBUG PropertyBinder:266 - Building property title
2020-02-04 14:34:29 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-02-04 14:34:29 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-02-04 14:34:29 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-02-04 14:34:29 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-02-04 14:34:29 DEBUG SessionFactoryImpl:207 - Building session factory
2020-02-04 14:34:29 DEBUG Settings:68 - SessionFactory name : null
2020-02-04 14:34:29 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-02-04 14:34:29 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-02-04 14:34:29 DEBUG Settings:72 - Statistics: disabled
2020-02-04 14:34:29 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-02-04 14:34:29 DEBUG Settings:75 - Default entity-mode: pojo
2020-02-04 14:34:29 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-02-04 14:34:29 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-02-04 14:34:29 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2020-02-04 14:34:29 DEBUG Settings:80 - Default batch fetch size: -1
2020-02-04 14:34:29 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-02-04 14:34:29 DEBUG Settings:82 - Default null ordering: NONE
2020-02-04 14:34:29 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-02-04 14:34:29 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-02-04 14:34:29 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-02-04 14:34:29 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-02-04 14:34:29 DEBUG Settings:90 - Query language substitutions: {}
2020-02-04 14:34:29 DEBUG Settings:91 - Named query checking : enabled
2020-02-04 14:34:29 DEBUG Settings:93 - Second-level cache: disabled
2020-02-04 14:34:29 DEBUG Settings:94 - Second-level query cache: disabled
2020-02-04 14:34:29 DEBUG Settings:95 - Second-level query cache factory: null
2020-02-04 14:34:29 DEBUG Settings:96 - Second-level cache region prefix: null
2020-02-04 14:34:29 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-02-04 14:34:29 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-02-04 14:34:29 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-02-04 14:34:29 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-02-04 14:34:29 DEBUG Settings:102 - JDBC batch size: 15
2020-02-04 14:34:29 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-02-04 14:34:29 DEBUG Settings:104 - Scrollable result sets: enabled
2020-02-04 14:34:29 DEBUG Settings:105 - Wrap result sets: disabled
2020-02-04 14:34:29 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-02-04 14:34:29 DEBUG Settings:107 - JDBC result set fetch size: null
2020-02-04 14:34:29 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-02-04 14:34:29 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-02-04 14:34:29 DEBUG Settings:111 - JPA compliance - query : disabled
2020-02-04 14:34:29 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2020-02-04 14:34:29 DEBUG Settings:113 - JPA compliance - lists : disabled
2020-02-04 14:34:29 DEBUG Settings:114 - JPA compliance - transactions : disabled
2020-02-04 14:34:29 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-02-04 14:34:29 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, dialect=org.hibernate.dialect.MySQL5Dialect, java.specification.version=11, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\admin\Desktop\HW_Mate_from_Shop\cinema_project\target\classes;C:\Users\admin\.m2\repository\org\hibernate\hibernate-core\5.4.10.Final\hibernate-core-5.4.10.Final.jar;C:\Users\admin\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\admin\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\admin\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\admin\.m2\repository\net\bytebuddy\byte-buddy\1.10.2\byte-buddy-1.10.2.jar;C:\Users\admin\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\admin\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\admin\.m2\repository\org\jboss\jandex\2.1.1.Final\jandex-2.1.1.Final.jar;C:\Users\admin\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\admin\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\admin\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\admin\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\admin\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\admin\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\admin\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\admin\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\admin\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\admin\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\admin\.m2\repository\mysql\mysql-connector-java\8.0.19\mysql-connector-java-8.0.19.jar;C:\Users\admin\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\admin\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=JetBrains s.r.o, sun.arch.data.model=64, hbm2ddl.auto=create-drop, user.variant=, java.vendor.url=https://www.jetbrains.com/, user.timezone=Europe/Helsinki, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=D:\IntelliJ IDEA 2019.3.1\jbr\bin, sun.java.command=com.dev.cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\admin, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2019-10-15, java.home=D:\IntelliJ IDEA 2019.3.1\jbr, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, user.script=, connection.password=roman, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.5+10-b520.17, user.name=admin, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://youtrack.jetbrains.com, java.io.tmpdir=C:\Users\admin\AppData\Local\Temp\, java.version=11.0.5, user.dir=C:\Users\admin\Desktop\HW_Mate_from_Shop\cinema_project, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4d6ee47, java.library.path=D:\IntelliJ IDEA 2019.3.1\jbr\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\admin\AppData\Local\Microsoft\WindowsApps;;D:\IntelliJ IDEA 2019.3.1\bin;;., java.vendor=JetBrains s.r.o, java.vm.info=mixed mode, sharing, java.vm.version=11.0.5+10-b520.17, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, java.class.version=55.0}
2020-02-04 14:34:29 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-02-04 14:34:29 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-02-04 14:34:29 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5328a9c1] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1aac188d]
2020-02-04 14:34:29 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-02-04 14:34:29 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-02-04 14:34:29 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-02-04 14:34:29 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-02-04 14:34:29 DEBUG AbstractEntityPersister:3847 - Static SQL for entity: com.dev.cinema.model.Movie
2020-02-04 14:34:29 DEBUG AbstractEntityPersister:3852 -  Version select: select id from movie where id =?
2020-02-04 14:34:29 DEBUG AbstractEntityPersister:3855 -  Snapshot select: select movie_.id, movie_.description as descript2_0_, movie_.title as title3_0_ from movie movie_ where movie_.id=?
2020-02-04 14:34:29 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, title, id) values (?, ?, ?)
2020-02-04 14:34:29 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, title=? where id=?
2020-02-04 14:34:29 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-02-04 14:34:29 DEBUG AbstractEntityPersister:3863 -  Identity insert: insert into movie (description, title) values (?, ?)
2020-02-04 14:34:29 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fdca564]
2020-02-04 14:34:29 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-02-04 14:34:29 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-02-04 14:34:29 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-02-04 14:34:29 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-02-04 14:34:29 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-02-04 14:34:29 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [NONE]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-02-04 14:34:29 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ab4ae59]
2020-02-04 14:34:29 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-02-04 14:34:29 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-02-04 14:34:29 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-02-04 14:34:29 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-02-04 14:34:29 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-02-04 14:34:29 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [READ]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-02-04 14:34:29 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-02-04 14:34:29 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-02-04 14:34:29 DEBUG SQL:127 - drop table if exists movie
2020-02-04 14:34:29 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4ee25d80] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-02-04 14:34:30 DEBUG SQL:127 - create table movie (id bigint not null auto_increment, description varchar(255), title varchar(255), primary key (id)) engine=MyISAM
2020-02-04 14:34:30 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@54755dd9] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-02-04 14:34:30 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-02-04 14:34:30 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-02-04 14:34:30 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-04 14:34:30 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-04 14:34:30 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-02-04 14:34:30 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-02-04 14:34:30 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4fdca00a
2020-02-04 14:34:30 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 0aeac53b-7b5a-4df2-a0a3-af4aea9edee8 (<unnamed>)
2020-02-04 14:34:30 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-02-04 14:34:30 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-02-04 14:34:30 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-02-04 14:34:30 DEBUG TransactionImpl:81 - begin
2020-02-04 14:34:30 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-02-04 14:34:30 DEBUG SQL:127 - insert into movie (description, title) values (?, ?)
2020-02-04 14:34:30 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-02-04 14:34:30 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-02-04 14:34:30 DEBUG TransactionImpl:98 - committing
2020-02-04 14:34:30 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-02-04 14:34:30 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-02-04 14:34:30 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-02-04 14:34:30 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-02-04 14:34:30 DEBUG EntityPrinter:110 - Listing entities:
2020-02-04 14:34:30 DEBUG EntityPrinter:117 - com.dev.cinema.model.Movie{description=null, id=1, title=Fast and Furious}
2020-02-04 14:34:30 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-02-04 14:34:30 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-02-04 14:34:30 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-02-04 14:34:30 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@46dcbeab
2020-02-04 14:34:30 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from com.dev.cinema.model.Movie as generatedAlias0
2020-02-04 14:34:30 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-02-04 14:34:30 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Movie'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-02-04 14:34:30 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-02-04 14:34:30 DEBUG FromElement:149 - FromClause{level=1} : com.dev.cinema.model.Movie (generatedAlias0) -> movie0_
2020-02-04 14:34:30 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> movie0_.id
2020-02-04 14:34:30 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-02-04 14:34:30 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} movie0_.id ) ( FromClause{level=1} movie movie0_ ) )
2020-02-04 14:34:30 DEBUG JoinProcessor:128 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Movie): [movie]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.dev.cinema.model.Movie)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-02-04 14:34:30 DEBUG JoinProcessor:295 - Using FROM fragment [movie movie0_]
2020-02-04 14:34:30 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-02-04 14:34:30 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_0_' {alias=generatedAlias0, className=com.dev.cinema.model.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.description as descript2_0_, movie0_.title as title3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[movie0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=com.dev.cinema.model.Movie}}

2020-02-04 14:34:30 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-02-04 14:34:30 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from com.dev.cinema.model.Movie as generatedAlias0
2020-02-04 14:34:30 DEBUG QueryTranslatorImpl:255 - SQL: select movie0_.id as id1_0_, movie0_.description as descript2_0_, movie0_.title as title3_0_ from movie movie0_
2020-02-04 14:34:30 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-02-04 14:34:30 DEBUG SQL:127 - select movie0_.id as id1_0_, movie0_.description as descript2_0_, movie0_.title as title3_0_ from movie movie0_
2020-02-04 14:34:30 DEBUG Loader:384 - Result set row: 0
2020-02-04 14:34:30 DEBUG Loader:1586 - Result row: EntityKey[com.dev.cinema.model.Movie#1]
2020-02-04 14:34:30 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.Movie#1]
2020-02-04 14:34:30 DEBUG TwoPhaseLoad:190 - Processing attribute `description` : value = null
2020-02-04 14:34:30 DEBUG TwoPhaseLoad:221 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-02-04 14:34:30 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Fast and Furious
2020-02-04 14:34:30 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-02-04 14:34:30 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.Movie#1]
2020-02-04 14:34:30 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-02-04 14:34:30 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-02-04 14:34:30 DEBUG TransactionImpl:81 - begin
2020-02-04 14:34:30 DEBUG TransactionImpl:139 - rolling back
2020-02-04 14:36:34 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-02-04 14:36:34 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-02-04 14:36:34 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-02-04 14:36:34 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-02-04 14:36:34 INFO  Version:46 - HHH000412: Hibernate Core {5.4.10.Final}
2020-02-04 14:36:34 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-02-04 14:36:34 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-02-04 14:36:34 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-02-04 14:36:34 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-02-04 14:36:34 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-02-04 14:36:34 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-02-04 14:36:34 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-02-04 14:36:34 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@38f57b3d
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@38f57b3d
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@38f57b3d
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2cac4385
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@34a1d21f
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4ba534b0
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@1d7f7be7
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@1d7f7be7
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1d7f7be7
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@2c7d121c
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@2c7d121c
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2c7d121c
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@f27ea3
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@f27ea3
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@f27ea3
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@59d2103b
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@59d2103b
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@59d2103b
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@768ccdc5
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@768ccdc5
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@768ccdc5
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@55787112
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@55787112
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@55787112
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@31e3250d
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@31e3250d
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@31e3250d
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@24fb6a80
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@24fb6a80
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@b40bb6e
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@b40bb6e
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@346a361
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@346a361
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2e029d61
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@297ea53a
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@3efe7086
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3efe7086
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@7651218e
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7651218e
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@6326d182
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6326d182
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@625e134e
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@625e134e
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@119f1f2a
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@119f1f2a
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@756cf158
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@756cf158
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7b139eab
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7b139eab
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@41a90fa8
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@41a90fa8
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ffab045
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ffab045
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@9635fa
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@9635fa
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@2ce86164
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2ce86164
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@60fa3495
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@60fa3495
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@60fa3495
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1849db1a
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@62679465
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@62679465
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@62679465
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2b58f754
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@3624da92
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3624da92
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@464649c
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@464649c
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@495083a0
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@495083a0
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@1e5f4170
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1e5f4170
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3af17be2
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3af17be2
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6e521c1e
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@10c8f62
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@10c8f62
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@10c8f62
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@61861a29
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@61861a29
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@61861a29
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@6a1d204a
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@6c6357f9
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@64bc21ac
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@64bc21ac
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@64bc21ac
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7c041b41
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7c041b41
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7c041b41
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@403132fc
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@669513d8
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@7876d598
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7876d598
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4985cbcb
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@2416a51
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2416a51
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@33617539
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@33617539
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@18e7143f
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4f8969b0
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@5cc69cfe
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@6ca320ab
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6ca320ab
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3a7704c
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6754ef00
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@619bd14c
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@323e8306
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@a23a01d
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4acf72b6
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7561db12
2020-02-04 14:36:35 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3301500b
2020-02-04 14:36:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-02-04 14:36:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-02-04 14:36:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-02-04 14:36:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-02-04 14:36:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-02-04 14:36:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-02-04 14:36:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-02-04 14:36:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-02-04 14:36:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-02-04 14:36:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-02-04 14:36:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-02-04 14:36:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-02-04 14:36:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-02-04 14:36:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-02-04 14:36:35 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-02-04 14:36:35 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC]
2020-02-04 14:36:35 INFO  pooling:121 - HHH10001001: Connection properties: {password=roman, user=root}
2020-02-04 14:36:35 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-02-04 14:36:35 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-02-04 14:36:35 INFO  DriverManagerConnectionProviderImpl:249 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-02-04 14:36:35 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
2020-02-04 14:36:35 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.19 (Revision: a0ca826f5cdf51a98356fdfb1bf251eb042f80bf)
      major : 8
      minor : 0
2020-02-04 14:36:35 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-02-04 14:36:35 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-02-04 14:36:35 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-02-04 14:36:35 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-02-04 14:36:35 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-02-04 14:36:35 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@497aec8c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3b9632d1]
2020-02-04 14:36:36 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.Movie
2020-02-04 14:36:36 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-02-04 14:36:36 DEBUG EntityBinder:430 - Import with entity name Movie
2020-02-04 14:36:36 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.Movie on table movie
2020-02-04 14:36:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-02-04 14:36:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-02-04 14:36:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:id]
2020-02-04 14:36:36 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-02-04 14:36:36 DEBUG PropertyBinder:266 - Building property id
2020-02-04 14:36:36 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-02-04 14:36:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-02-04 14:36:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-02-04 14:36:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:description]
2020-02-04 14:36:36 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-02-04 14:36:36 DEBUG PropertyBinder:266 - Building property description
2020-02-04 14:36:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-02-04 14:36:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-02-04 14:36:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:title]
2020-02-04 14:36:36 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-02-04 14:36:36 DEBUG PropertyBinder:266 - Building property title
2020-02-04 14:36:36 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-02-04 14:36:36 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-02-04 14:36:36 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-02-04 14:36:36 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-02-04 14:36:36 DEBUG SessionFactoryImpl:207 - Building session factory
2020-02-04 14:36:36 DEBUG Settings:68 - SessionFactory name : null
2020-02-04 14:36:36 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-02-04 14:36:36 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-02-04 14:36:36 DEBUG Settings:72 - Statistics: disabled
2020-02-04 14:36:36 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-02-04 14:36:36 DEBUG Settings:75 - Default entity-mode: pojo
2020-02-04 14:36:36 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-02-04 14:36:36 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-02-04 14:36:36 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2020-02-04 14:36:36 DEBUG Settings:80 - Default batch fetch size: -1
2020-02-04 14:36:36 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-02-04 14:36:36 DEBUG Settings:82 - Default null ordering: NONE
2020-02-04 14:36:36 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-02-04 14:36:36 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-02-04 14:36:36 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-02-04 14:36:36 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-02-04 14:36:36 DEBUG Settings:90 - Query language substitutions: {}
2020-02-04 14:36:36 DEBUG Settings:91 - Named query checking : enabled
2020-02-04 14:36:36 DEBUG Settings:93 - Second-level cache: disabled
2020-02-04 14:36:36 DEBUG Settings:94 - Second-level query cache: disabled
2020-02-04 14:36:36 DEBUG Settings:95 - Second-level query cache factory: null
2020-02-04 14:36:36 DEBUG Settings:96 - Second-level cache region prefix: null
2020-02-04 14:36:36 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-02-04 14:36:36 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-02-04 14:36:36 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-02-04 14:36:36 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-02-04 14:36:36 DEBUG Settings:102 - JDBC batch size: 15
2020-02-04 14:36:36 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-02-04 14:36:36 DEBUG Settings:104 - Scrollable result sets: enabled
2020-02-04 14:36:36 DEBUG Settings:105 - Wrap result sets: disabled
2020-02-04 14:36:36 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-02-04 14:36:36 DEBUG Settings:107 - JDBC result set fetch size: null
2020-02-04 14:36:36 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-02-04 14:36:36 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-02-04 14:36:36 DEBUG Settings:111 - JPA compliance - query : disabled
2020-02-04 14:36:36 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2020-02-04 14:36:36 DEBUG Settings:113 - JPA compliance - lists : disabled
2020-02-04 14:36:36 DEBUG Settings:114 - JPA compliance - transactions : disabled
2020-02-04 14:36:36 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-02-04 14:36:36 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, dialect=org.hibernate.dialect.MySQL5Dialect, java.specification.version=11, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\admin\Desktop\HW_Mate_from_Shop\cinema_project\target\classes;C:\Users\admin\.m2\repository\org\hibernate\hibernate-core\5.4.10.Final\hibernate-core-5.4.10.Final.jar;C:\Users\admin\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\admin\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\admin\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\admin\.m2\repository\net\bytebuddy\byte-buddy\1.10.2\byte-buddy-1.10.2.jar;C:\Users\admin\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\admin\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\admin\.m2\repository\org\jboss\jandex\2.1.1.Final\jandex-2.1.1.Final.jar;C:\Users\admin\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\admin\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\admin\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\admin\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\admin\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\admin\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\admin\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\admin\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\admin\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\admin\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\admin\.m2\repository\mysql\mysql-connector-java\8.0.19\mysql-connector-java-8.0.19.jar;C:\Users\admin\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\admin\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\IntelliJ IDEA 2019.3.1\lib\idea_rt.jar, java.vm.vendor=JetBrains s.r.o, sun.arch.data.model=64, hbm2ddl.auto=create-drop, user.variant=, java.vendor.url=https://www.jetbrains.com/, user.timezone=Europe/Helsinki, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=D:\IntelliJ IDEA 2019.3.1\jbr\bin, sun.java.command=com.dev.cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\admin, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2019-10-15, java.home=D:\IntelliJ IDEA 2019.3.1\jbr, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, intellij.debug.agent=true, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, user.script=, connection.password=roman, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.5+10-b520.17, user.name=admin, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://youtrack.jetbrains.com, java.io.tmpdir=C:\Users\admin\AppData\Local\Temp\, java.version=11.0.5, jboss.modules.system.pkgs=com.intellij.rt, user.dir=C:\Users\admin\Desktop\HW_Mate_from_Shop\cinema_project, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4d18b73a, java.library.path=D:\IntelliJ IDEA 2019.3.1\jbr\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\admin\AppData\Local\Microsoft\WindowsApps;;D:\IntelliJ IDEA 2019.3.1\bin;;., java.vendor=JetBrains s.r.o, java.vm.info=mixed mode, sharing, java.vm.version=11.0.5+10-b520.17, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, java.class.version=55.0}
2020-02-04 14:36:36 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-02-04 14:36:36 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-02-04 14:36:36 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@497aec8c] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7654f833]
2020-02-04 14:36:36 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-02-04 14:36:36 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-02-04 14:36:36 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-02-04 14:36:36 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-02-04 14:36:36 DEBUG AbstractEntityPersister:3847 - Static SQL for entity: com.dev.cinema.model.Movie
2020-02-04 14:36:36 DEBUG AbstractEntityPersister:3852 -  Version select: select id from movie where id =?
2020-02-04 14:36:36 DEBUG AbstractEntityPersister:3855 -  Snapshot select: select movie_.id, movie_.description as descript2_0_, movie_.title as title3_0_ from movie movie_ where movie_.id=?
2020-02-04 14:36:36 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, title, id) values (?, ?, ?)
2020-02-04 14:36:36 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, title=? where id=?
2020-02-04 14:36:36 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-02-04 14:36:36 DEBUG AbstractEntityPersister:3863 -  Identity insert: insert into movie (description, title) values (?, ?)
2020-02-04 14:36:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a6ea47d]
2020-02-04 14:36:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-02-04 14:36:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-02-04 14:36:36 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-02-04 14:36:36 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-02-04 14:36:36 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-02-04 14:36:36 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [NONE]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-02-04 14:36:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57efc6fd]
2020-02-04 14:36:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-02-04 14:36:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-02-04 14:36:36 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-02-04 14:36:36 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-02-04 14:36:36 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-02-04 14:36:36 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [READ]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-02-04 14:36:36 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-02-04 14:36:36 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-02-04 14:36:36 DEBUG SQL:127 - drop table if exists movie
2020-02-04 14:36:36 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@1a538ed8] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-02-04 14:36:36 DEBUG SQL:127 - create table movie (id bigint not null auto_increment, description varchar(255), title varchar(255), primary key (id)) engine=MyISAM
2020-02-04 14:36:36 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@51e754e1] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-02-04 14:36:36 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-02-04 14:36:36 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-02-04 14:36:37 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-04 14:36:37 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-04 14:36:37 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-02-04 14:36:37 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-02-04 14:36:37 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@62b09715
2020-02-04 14:36:37 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 55c0efa2-2af7-425e-83ce-eae21d8f8711 (<unnamed>)
2020-02-04 14:36:37 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-02-04 14:36:37 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-02-04 14:36:37 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-02-04 14:36:37 DEBUG TransactionImpl:81 - begin
2020-02-04 14:36:37 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-02-04 14:36:37 DEBUG SQL:127 - insert into movie (description, title) values (?, ?)
2020-02-04 14:36:37 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-02-04 14:36:37 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-02-04 14:36:37 DEBUG TransactionImpl:98 - committing
2020-02-04 14:36:37 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-02-04 14:36:37 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-02-04 14:36:37 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-02-04 14:36:37 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-02-04 14:36:37 DEBUG EntityPrinter:110 - Listing entities:
2020-02-04 14:36:37 DEBUG EntityPrinter:117 - com.dev.cinema.model.Movie{description=null, id=1, title=Fast and Furious}
2020-02-04 14:36:37 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-02-04 14:36:37 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-02-04 14:36:37 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-02-04 14:36:37 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@70b2fa10
2020-02-04 14:36:37 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from com.dev.cinema.model.Movie as generatedAlias0
2020-02-04 14:36:37 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-02-04 14:36:37 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Movie'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-02-04 14:36:37 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-02-04 14:36:37 DEBUG FromElement:149 - FromClause{level=1} : com.dev.cinema.model.Movie (generatedAlias0) -> movie0_
2020-02-04 14:36:37 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> movie0_.id
2020-02-04 14:36:37 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-02-04 14:36:37 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} movie0_.id ) ( FromClause{level=1} movie movie0_ ) )
2020-02-04 14:36:37 DEBUG JoinProcessor:128 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Movie): [movie]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.dev.cinema.model.Movie)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-02-04 14:36:37 DEBUG JoinProcessor:295 - Using FROM fragment [movie movie0_]
2020-02-04 14:36:37 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-02-04 14:36:37 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_0_' {alias=generatedAlias0, className=com.dev.cinema.model.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.description as descript2_0_, movie0_.title as title3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[movie0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=com.dev.cinema.model.Movie}}

2020-02-04 14:36:37 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-02-04 14:36:37 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from com.dev.cinema.model.Movie as generatedAlias0
2020-02-04 14:36:37 DEBUG QueryTranslatorImpl:255 - SQL: select movie0_.id as id1_0_, movie0_.description as descript2_0_, movie0_.title as title3_0_ from movie movie0_
2020-02-04 14:36:37 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-02-04 14:36:37 DEBUG SQL:127 - select movie0_.id as id1_0_, movie0_.description as descript2_0_, movie0_.title as title3_0_ from movie movie0_
2020-02-04 14:36:37 DEBUG Loader:384 - Result set row: 0
2020-02-04 14:36:37 DEBUG Loader:1586 - Result row: EntityKey[com.dev.cinema.model.Movie#1]
2020-02-04 14:36:37 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.Movie#1]
2020-02-04 14:36:37 DEBUG TwoPhaseLoad:190 - Processing attribute `description` : value = null
2020-02-04 14:36:37 DEBUG TwoPhaseLoad:221 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-02-04 14:36:37 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Fast and Furious
2020-02-04 14:36:37 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-02-04 14:36:37 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.Movie#1]
2020-02-04 14:36:37 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-02-04 14:36:43 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-02-04 14:36:43 DEBUG TransactionImpl:81 - begin
2020-02-04 14:37:02 DEBUG TransactionImpl:139 - rolling back
2020-02-04 14:37:06 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-02-04 14:37:06 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-02-04 14:37:06 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-02-04 14:37:06 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-02-04 14:37:06 INFO  Version:46 - HHH000412: Hibernate Core {5.4.10.Final}
2020-02-04 14:37:06 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-02-04 14:37:06 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-02-04 14:37:07 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-02-04 14:37:07 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-02-04 14:37:07 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-02-04 14:37:07 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-02-04 14:37:07 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-02-04 14:37:07 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@38f57b3d
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@38f57b3d
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@38f57b3d
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2cac4385
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@34a1d21f
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4ba534b0
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@1d7f7be7
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@1d7f7be7
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1d7f7be7
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@2c7d121c
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@2c7d121c
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2c7d121c
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@f27ea3
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@f27ea3
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@f27ea3
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@59d2103b
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@59d2103b
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@59d2103b
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@768ccdc5
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@768ccdc5
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@768ccdc5
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@55787112
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@55787112
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@55787112
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@31e3250d
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@31e3250d
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@31e3250d
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@24fb6a80
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@24fb6a80
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@b40bb6e
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@b40bb6e
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@346a361
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@346a361
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2e029d61
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@297ea53a
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@3efe7086
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3efe7086
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@7651218e
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7651218e
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@6326d182
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6326d182
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@625e134e
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@625e134e
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@119f1f2a
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@119f1f2a
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@756cf158
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@756cf158
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7b139eab
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7b139eab
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@41a90fa8
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@41a90fa8
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ffab045
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ffab045
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@9635fa
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@9635fa
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@2ce86164
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2ce86164
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@60fa3495
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@60fa3495
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@60fa3495
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1849db1a
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@62679465
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@62679465
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@62679465
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2b58f754
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@3624da92
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3624da92
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@464649c
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@464649c
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@495083a0
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@495083a0
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@1e5f4170
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1e5f4170
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3af17be2
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3af17be2
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6e521c1e
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@10c8f62
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@10c8f62
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@10c8f62
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@61861a29
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@61861a29
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@61861a29
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@6a1d204a
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@6c6357f9
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@64bc21ac
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@64bc21ac
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@64bc21ac
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7c041b41
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7c041b41
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7c041b41
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@403132fc
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@669513d8
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@7876d598
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7876d598
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4985cbcb
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@2416a51
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2416a51
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@33617539
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@33617539
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@18e7143f
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4f8969b0
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@5cc69cfe
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@62923ee6
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@62923ee6
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@b91d8c4
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4b6166aa
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@a77614d
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4fd4cae3
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4a067c25
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@a1217f9
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3bde62ff
2020-02-04 14:37:07 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@523424b5
2020-02-04 14:37:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-02-04 14:37:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-02-04 14:37:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-02-04 14:37:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-02-04 14:37:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-02-04 14:37:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-02-04 14:37:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-02-04 14:37:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-02-04 14:37:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-02-04 14:37:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-02-04 14:37:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-02-04 14:37:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-02-04 14:37:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-02-04 14:37:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-02-04 14:37:07 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-02-04 14:37:07 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC]
2020-02-04 14:37:07 INFO  pooling:121 - HHH10001001: Connection properties: {password=roman, user=root}
2020-02-04 14:37:07 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-02-04 14:37:07 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-02-04 14:37:07 INFO  DriverManagerConnectionProviderImpl:249 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-02-04 14:37:08 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
2020-02-04 14:37:08 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.19 (Revision: a0ca826f5cdf51a98356fdfb1bf251eb042f80bf)
      major : 8
      minor : 0
2020-02-04 14:37:08 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-02-04 14:37:08 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-02-04 14:37:08 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-02-04 14:37:08 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-02-04 14:37:08 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-02-04 14:37:08 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@497aec8c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3b9632d1]
2020-02-04 14:37:08 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.Movie
2020-02-04 14:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-02-04 14:37:08 DEBUG EntityBinder:430 - Import with entity name Movie
2020-02-04 14:37:08 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.Movie on table movie
2020-02-04 14:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-02-04 14:37:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-02-04 14:37:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:id]
2020-02-04 14:37:08 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-02-04 14:37:08 DEBUG PropertyBinder:266 - Building property id
2020-02-04 14:37:08 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-02-04 14:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-02-04 14:37:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-02-04 14:37:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:description]
2020-02-04 14:37:08 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-02-04 14:37:08 DEBUG PropertyBinder:266 - Building property description
2020-02-04 14:37:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-02-04 14:37:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-02-04 14:37:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:title]
2020-02-04 14:37:08 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-02-04 14:37:08 DEBUG PropertyBinder:266 - Building property title
2020-02-04 14:37:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-02-04 14:37:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-02-04 14:37:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-02-04 14:37:08 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-02-04 14:37:08 DEBUG SessionFactoryImpl:207 - Building session factory
2020-02-04 14:37:08 DEBUG Settings:68 - SessionFactory name : null
2020-02-04 14:37:08 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-02-04 14:37:08 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-02-04 14:37:08 DEBUG Settings:72 - Statistics: disabled
2020-02-04 14:37:08 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-02-04 14:37:08 DEBUG Settings:75 - Default entity-mode: pojo
2020-02-04 14:37:08 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-02-04 14:37:08 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-02-04 14:37:08 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2020-02-04 14:37:08 DEBUG Settings:80 - Default batch fetch size: -1
2020-02-04 14:37:08 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-02-04 14:37:08 DEBUG Settings:82 - Default null ordering: NONE
2020-02-04 14:37:08 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-02-04 14:37:08 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-02-04 14:37:08 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-02-04 14:37:08 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-02-04 14:37:08 DEBUG Settings:90 - Query language substitutions: {}
2020-02-04 14:37:08 DEBUG Settings:91 - Named query checking : enabled
2020-02-04 14:37:08 DEBUG Settings:93 - Second-level cache: disabled
2020-02-04 14:37:08 DEBUG Settings:94 - Second-level query cache: disabled
2020-02-04 14:37:08 DEBUG Settings:95 - Second-level query cache factory: null
2020-02-04 14:37:08 DEBUG Settings:96 - Second-level cache region prefix: null
2020-02-04 14:37:08 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-02-04 14:37:08 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-02-04 14:37:08 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-02-04 14:37:08 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-02-04 14:37:08 DEBUG Settings:102 - JDBC batch size: 15
2020-02-04 14:37:08 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-02-04 14:37:08 DEBUG Settings:104 - Scrollable result sets: enabled
2020-02-04 14:37:08 DEBUG Settings:105 - Wrap result sets: disabled
2020-02-04 14:37:08 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-02-04 14:37:08 DEBUG Settings:107 - JDBC result set fetch size: null
2020-02-04 14:37:08 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-02-04 14:37:08 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-02-04 14:37:08 DEBUG Settings:111 - JPA compliance - query : disabled
2020-02-04 14:37:08 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2020-02-04 14:37:08 DEBUG Settings:113 - JPA compliance - lists : disabled
2020-02-04 14:37:08 DEBUG Settings:114 - JPA compliance - transactions : disabled
2020-02-04 14:37:08 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-02-04 14:37:08 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, dialect=org.hibernate.dialect.MySQL5Dialect, java.specification.version=11, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\admin\Desktop\HW_Mate_from_Shop\cinema_project\target\classes;C:\Users\admin\.m2\repository\org\hibernate\hibernate-core\5.4.10.Final\hibernate-core-5.4.10.Final.jar;C:\Users\admin\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\admin\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\admin\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\admin\.m2\repository\net\bytebuddy\byte-buddy\1.10.2\byte-buddy-1.10.2.jar;C:\Users\admin\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\admin\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\admin\.m2\repository\org\jboss\jandex\2.1.1.Final\jandex-2.1.1.Final.jar;C:\Users\admin\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\admin\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\admin\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\admin\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\admin\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\admin\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\admin\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\admin\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\admin\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\admin\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\admin\.m2\repository\mysql\mysql-connector-java\8.0.19\mysql-connector-java-8.0.19.jar;C:\Users\admin\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\admin\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;D:\IntelliJ IDEA 2019.3.1\lib\idea_rt.jar, java.vm.vendor=JetBrains s.r.o, sun.arch.data.model=64, hbm2ddl.auto=create-drop, user.variant=, java.vendor.url=https://www.jetbrains.com/, user.timezone=Europe/Helsinki, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=D:\IntelliJ IDEA 2019.3.1\jbr\bin, sun.java.command=com.dev.cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\admin, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2019-10-15, java.home=D:\IntelliJ IDEA 2019.3.1\jbr, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, intellij.debug.agent=true, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, user.script=, connection.password=roman, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.5+10-b520.17, user.name=admin, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://youtrack.jetbrains.com, java.io.tmpdir=C:\Users\admin\AppData\Local\Temp\, java.version=11.0.5, jboss.modules.system.pkgs=com.intellij.rt, user.dir=C:\Users\admin\Desktop\HW_Mate_from_Shop\cinema_project, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4d18b73a, java.library.path=D:\IntelliJ IDEA 2019.3.1\jbr\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\admin\AppData\Local\Microsoft\WindowsApps;;D:\IntelliJ IDEA 2019.3.1\bin;;., java.vendor=JetBrains s.r.o, java.vm.info=mixed mode, sharing, java.vm.version=11.0.5+10-b520.17, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, java.class.version=55.0}
2020-02-04 14:37:08 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-02-04 14:37:08 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-02-04 14:37:08 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@497aec8c] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7654f833]
2020-02-04 14:37:08 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-02-04 14:37:08 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-02-04 14:37:08 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-02-04 14:37:08 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-02-04 14:37:09 DEBUG AbstractEntityPersister:3847 - Static SQL for entity: com.dev.cinema.model.Movie
2020-02-04 14:37:09 DEBUG AbstractEntityPersister:3852 -  Version select: select id from movie where id =?
2020-02-04 14:37:09 DEBUG AbstractEntityPersister:3855 -  Snapshot select: select movie_.id, movie_.description as descript2_0_, movie_.title as title3_0_ from movie movie_ where movie_.id=?
2020-02-04 14:37:09 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, title, id) values (?, ?, ?)
2020-02-04 14:37:09 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, title=? where id=?
2020-02-04 14:37:09 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-02-04 14:37:09 DEBUG AbstractEntityPersister:3863 -  Identity insert: insert into movie (description, title) values (?, ?)
2020-02-04 14:37:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a6ea47d]
2020-02-04 14:37:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-02-04 14:37:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-02-04 14:37:09 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-02-04 14:37:09 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-02-04 14:37:09 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-02-04 14:37:09 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [NONE]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-02-04 14:37:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57efc6fd]
2020-02-04 14:37:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-02-04 14:37:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-02-04 14:37:09 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-02-04 14:37:09 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-02-04 14:37:09 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-02-04 14:37:09 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [READ]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-02-04 14:37:09 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-02-04 14:37:09 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.title as title3_0_0_ from movie movie0_ where movie0_.id=?
2020-02-04 14:37:09 DEBUG SQL:127 - drop table if exists movie
2020-02-04 14:37:09 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@1a538ed8] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-02-04 14:37:09 DEBUG SQL:127 - create table movie (id bigint not null auto_increment, description varchar(255), title varchar(255), primary key (id)) engine=MyISAM
2020-02-04 14:37:09 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@51e754e1] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-02-04 14:37:09 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-02-04 14:37:09 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-02-04 14:37:09 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-04 14:37:09 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-04 14:37:09 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-02-04 14:37:09 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-02-04 14:37:09 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@62b09715
2020-02-04 14:37:09 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 1dfbb120-4772-4127-82ff-0dd6f06e397b (<unnamed>)
2020-02-04 14:37:09 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-02-04 14:37:09 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-02-04 14:37:09 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-02-04 14:37:09 DEBUG TransactionImpl:81 - begin
2020-02-04 14:37:09 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-02-04 14:37:09 DEBUG SQL:127 - insert into movie (description, title) values (?, ?)
2020-02-04 14:37:09 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-02-04 14:37:09 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-02-04 14:37:09 DEBUG TransactionImpl:98 - committing
2020-02-04 14:37:09 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-02-04 14:37:09 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-02-04 14:37:09 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-02-04 14:37:09 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-02-04 14:37:09 DEBUG EntityPrinter:110 - Listing entities:
2020-02-04 14:37:09 DEBUG EntityPrinter:117 - com.dev.cinema.model.Movie{description=null, id=1, title=Fast and Furious}
2020-02-04 14:37:09 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-02-04 14:37:09 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-02-04 14:37:09 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-02-04 14:37:09 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@70b2fa10
2020-02-04 14:37:09 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from com.dev.cinema.model.Movie as generatedAlias0
2020-02-04 14:37:09 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-02-04 14:37:09 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Movie'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-02-04 14:37:09 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-02-04 14:37:09 DEBUG FromElement:149 - FromClause{level=1} : com.dev.cinema.model.Movie (generatedAlias0) -> movie0_
2020-02-04 14:37:09 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> movie0_.id
2020-02-04 14:37:09 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-02-04 14:37:09 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} movie0_.id ) ( FromClause{level=1} movie movie0_ ) )
2020-02-04 14:37:09 DEBUG JoinProcessor:128 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Movie): [movie]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.dev.cinema.model.Movie)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-02-04 14:37:09 DEBUG JoinProcessor:295 - Using FROM fragment [movie movie0_]
2020-02-04 14:37:09 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-02-04 14:37:09 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_0_' {alias=generatedAlias0, className=com.dev.cinema.model.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.description as descript2_0_, movie0_.title as title3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[movie0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=com.dev.cinema.model.Movie}}

2020-02-04 14:37:09 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-02-04 14:37:09 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from com.dev.cinema.model.Movie as generatedAlias0
2020-02-04 14:37:09 DEBUG QueryTranslatorImpl:255 - SQL: select movie0_.id as id1_0_, movie0_.description as descript2_0_, movie0_.title as title3_0_ from movie movie0_
2020-02-04 14:37:09 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-02-04 14:37:09 DEBUG SQL:127 - select movie0_.id as id1_0_, movie0_.description as descript2_0_, movie0_.title as title3_0_ from movie movie0_
2020-02-04 14:37:09 DEBUG Loader:384 - Result set row: 0
2020-02-04 14:37:09 DEBUG Loader:1586 - Result row: EntityKey[com.dev.cinema.model.Movie#1]
2020-02-04 14:37:09 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.Movie#1]
2020-02-04 14:37:09 DEBUG TwoPhaseLoad:190 - Processing attribute `description` : value = null
2020-02-04 14:37:09 DEBUG TwoPhaseLoad:221 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-02-04 14:37:09 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Fast and Furious
2020-02-04 14:37:09 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-02-04 14:37:09 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.Movie#1]
2020-02-04 14:37:09 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-02-04 14:37:59 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-02-04 14:37:59 DEBUG DriverManagerConnectionProviderImpl:259 - Connection pool now considered primed; min-size will be maintained
2020-02-04 14:37:59 DEBUG TransactionImpl:81 - begin
2020-02-04 14:40:45 DEBUG DriverManagerConnectionProviderImpl:384 - Adding 1 Connections to the pool
2020-02-04 14:42:48 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-02-04 14:42:48 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-02-04 14:42:48 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-02-04 14:42:48 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-02-04 14:42:49 INFO  Version:46 - HHH000412: Hibernate Core {5.4.10.Final}
2020-02-04 14:42:49 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-02-04 14:42:49 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-02-04 14:42:49 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-02-04 14:42:49 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-02-04 14:42:49 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-02-04 14:42:49 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-02-04 14:42:49 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-02-04 14:42:49 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@67304a40
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@67304a40
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@67304a40
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7642df8f
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@37c7595
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@1fdf1c5
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@6b8d96d9
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@6b8d96d9
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6b8d96d9
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@5fe1ce85
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@5fe1ce85
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5fe1ce85
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@52851b44
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@52851b44
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@52851b44
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@23aa363a
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@23aa363a
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@23aa363a
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@1e8ce150
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@1e8ce150
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1e8ce150
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@363042d7
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@363042d7
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@363042d7
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@1477089c
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@1477089c
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1477089c
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@10b9db7b
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@10b9db7b
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4372b9b6
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4372b9b6
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@1f6c9cd8
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1f6c9cd8
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7f36662c
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1817f1eb
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@4a194c39
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4a194c39
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@c4ed84
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@c4ed84
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@3016fd5e
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3016fd5e
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@42463763
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@42463763
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@613a8ee1
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@613a8ee1
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2807bdeb
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2807bdeb
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@294e5088
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@294e5088
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@24d09c1
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@24d09c1
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ff65192
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ff65192
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@50ecde95
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@50ecde95
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@23fb172e
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@23fb172e
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1d131e1b
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1d131e1b
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1d131e1b
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4aa83f4f
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@70ab2d48
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@70ab2d48
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@70ab2d48
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7cbc3762
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@2f48b3d2
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2f48b3d2
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@4c550889
2020-02-04 14:42:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4c550889
2020-02-04 14:42:50 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3724af13
2020-02-04 14:42:50 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3724af13
2020-02-04 14:42:50 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@37052337
2020-02-04 14:42:50 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@37052337
2020-02-04 14:42:50 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@616fe72b
2020-02-04 14:42:50 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@616fe72b
2020-02-04 14:42:50 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@60957c0f
2020-02-04 14:42:50 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@40dff0b7
2020-02-04 14:42:50 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@40dff0b7
2020-02-04 14:42:50 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@40dff0b7
2020-02-04 14:42:50 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@366c4480
2020-02-04 14:42:50 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@366c4480
2020-02-04 14:42:50 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@366c4480
2020-02-04 14:42:50 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@5cbe877d
2020-02-04 14:42:50 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@5829e4f4
2020-02-04 14:42:50 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@4566d049
2020-02-04 14:42:50 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@4566d049
2020-02-04 14:42:50 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@4566d049
2020-02-04 14:42:50 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@ccb4b1b
2020-02-04 14:42:50 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@ccb4b1b
2020-02-04 14:42:50 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@ccb4b1b
2020-02-04 14:42:50 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@7c1e2a2d
2020-02-04 14:42:50 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@2cc3ad05
2020-02-04 14:42:50 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@7e276594
2020-02-04 14:42:50 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7e276594
2020-02-04 14:42:50 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@77d2e85
2020-02-04 14:42:50 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@54e22bdd
2020-02-04 14:42:50 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@54e22bdd
2020-02-04 14:42:50 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@7d42c224
2020-02-04 14:42:50 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7d42c224
2020-02-04 14:42:50 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5e01a982
2020-02-04 14:42:50 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@704f1591
2020-02-04 14:42:50 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@6955cb39
2020-02-04 14:42:50 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@3f6db3fb
2020-02-04 14:42:50 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3f6db3fb
2020-02-04 14:42:50 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@68ad99fe
2020-02-04 14:42:50 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@485e36bc
2020-02-04 14:42:50 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@781f10f2
2020-02-04 14:42:50 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2a79d4b1
2020-02-04 14:42:50 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2e9fda69
2020-02-04 14:42:50 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@17cdf2d0
2020-02-04 14:42:50 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1755e85b
2020-02-04 14:42:50 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@736d6a5c
2020-02-04 14:42:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-02-04 14:42:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-02-04 14:42:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-02-04 14:42:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-02-04 14:42:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-02-04 14:42:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-02-04 14:42:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-02-04 14:42:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-02-04 14:42:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-02-04 14:42:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-02-04 14:42:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-02-04 14:42:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-02-04 14:42:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-02-04 14:42:50 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-02-04 14:42:50 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-02-04 14:42:50 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC]
2020-02-04 14:42:50 INFO  pooling:121 - HHH10001001: Connection properties: {password=roman, user=root}
2020-02-04 14:42:50 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-02-04 14:42:50 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-02-04 14:42:50 INFO  DriverManagerConnectionProviderImpl:249 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-02-04 14:42:50 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
2020-02-04 14:42:50 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.19 (Revision: a0ca826f5cdf51a98356fdfb1bf251eb042f80bf)
      major : 8
      minor : 0
2020-02-04 14:42:50 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-02-04 14:42:50 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-02-04 14:42:50 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-02-04 14:42:50 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-02-04 14:42:50 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-02-04 14:42:50 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5328a9c1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5b78fdb1]
2020-02-04 14:42:50 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.Movie
2020-02-04 14:42:50 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-02-04 14:42:50 DEBUG EntityBinder:430 - Import with entity name Movie
2020-02-04 14:42:50 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.Movie on table movie
2020-02-04 14:42:50 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-02-04 14:42:50 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-02-04 14:42:50 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:id]
2020-02-04 14:42:50 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-02-04 14:42:50 DEBUG PropertyBinder:266 - Building property id
2020-02-04 14:42:50 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-02-04 14:42:50 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-02-04 14:42:50 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-02-04 14:42:50 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:description]
2020-02-04 14:42:50 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-02-04 14:42:50 DEBUG PropertyBinder:266 - Building property description
2020-02-04 14:42:50 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-02-04 14:42:50 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-02-04 14:42:50 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:title]
2020-02-04 14:42:50 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-02-04 14:42:50 DEBUG PropertyBinder:266 - Building property title
2020-02-04 14:42:50 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.MovieSession
2020-02-04 14:42:50 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-02-04 14:42:50 DEBUG EntityBinder:430 - Import with entity name MovieSession
2020-02-04 14:42:50 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.MovieSession on table movie_session
2020-02-04 14:42:50 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-02-04 14:42:50 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-02-04 14:42:50 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.MovieSession:id]
2020-02-04 14:42:50 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-02-04 14:42:50 DEBUG PropertyBinder:266 - Building property id
2020-02-04 14:42:50 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-02-04 14:42:50 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2020-02-04 14:42:50 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=cinemaHall, insertable=true, updatable=true, unique=false}
2020-02-04 14:42:50 DEBUG PropertyBinder:266 - Building property cinemaHall
2020-02-04 14:42:50 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2020-02-04 14:42:50 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=movie, insertable=true, updatable=true, unique=false}
2020-02-04 14:42:50 DEBUG PropertyBinder:266 - Building property movie
2020-02-04 14:42:50 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=showTime, insertable=true, updatable=true, unique=false}
2020-02-04 14:42:50 DEBUG PropertyBinder:175 - MetadataSourceProcessor property showTime with lazy=false
2020-02-04 14:42:50 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.MovieSession:showTime]
2020-02-04 14:42:50 DEBUG SimpleValueBinder:411 - building SimpleValue for showTime
2020-02-04 14:42:50 DEBUG PropertyBinder:266 - Building property showTime
2020-02-04 14:42:50 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.CinemaHall
2020-02-04 14:42:50 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-02-04 14:42:50 DEBUG EntityBinder:430 - Import with entity name CinemaHall
2020-02-04 14:42:50 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.CinemaHall on table cinema_hall
2020-02-04 14:42:50 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-02-04 14:42:50 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-02-04 14:42:50 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:id]
2020-02-04 14:42:50 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-02-04 14:42:50 DEBUG PropertyBinder:266 - Building property id
2020-02-04 14:42:50 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-02-04 14:42:50 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=capacity, insertable=true, updatable=true, unique=false}
2020-02-04 14:42:50 DEBUG PropertyBinder:175 - MetadataSourceProcessor property capacity with lazy=false
2020-02-04 14:42:50 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:capacity]
2020-02-04 14:42:50 DEBUG SimpleValueBinder:411 - building SimpleValue for capacity
2020-02-04 14:42:50 DEBUG PropertyBinder:266 - Building property capacity
2020-02-04 14:42:50 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-02-04 14:42:50 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-02-04 14:42:50 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:description]
2020-02-04 14:42:50 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-02-04 14:42:50 DEBUG PropertyBinder:266 - Building property description
2020-02-04 14:42:50 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-02-04 14:42:50 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-02-04 14:42:50 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-02-04 14:42:50 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-02-04 14:42:50 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for showTime
2020-02-04 14:42:50 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-02-04 14:42:50 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for capacity
2020-02-04 14:42:50 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-02-04 14:42:50 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-02-04 14:42:50 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie_session]
2020-02-04 14:42:50 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [cinema_hall]
2020-02-04 14:42:50 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.CinemaHall
2020-02-04 14:42:50 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.Movie
2020-02-04 14:42:50 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.CinemaHall
2020-02-04 14:42:50 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.Movie
2020-02-04 14:42:50 DEBUG SessionFactoryImpl:207 - Building session factory
2020-02-04 14:42:50 DEBUG Settings:68 - SessionFactory name : null
2020-02-04 14:42:50 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-02-04 14:42:50 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-02-04 14:42:50 DEBUG Settings:72 - Statistics: disabled
2020-02-04 14:42:50 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-02-04 14:42:50 DEBUG Settings:75 - Default entity-mode: pojo
2020-02-04 14:42:50 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-02-04 14:42:50 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-02-04 14:42:50 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2020-02-04 14:42:50 DEBUG Settings:80 - Default batch fetch size: -1
2020-02-04 14:42:50 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-02-04 14:42:50 DEBUG Settings:82 - Default null ordering: NONE
2020-02-04 14:42:50 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-02-04 14:42:50 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-02-04 14:42:50 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-02-04 14:42:50 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-02-04 14:42:50 DEBUG Settings:90 - Query language substitutions: {}
2020-02-04 14:42:50 DEBUG Settings:91 - Named query checking : enabled
2020-02-04 14:42:50 DEBUG Settings:93 - Second-level cache: disabled
2020-02-04 14:42:50 DEBUG Settings:94 - Second-level query cache: disabled
2020-02-04 14:42:50 DEBUG Settings:95 - Second-level query cache factory: null
2020-02-04 14:42:50 DEBUG Settings:96 - Second-level cache region prefix: null
2020-02-04 14:42:50 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-02-04 14:42:50 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-02-04 14:42:50 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-02-04 14:42:50 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-02-04 14:42:50 DEBUG Settings:102 - JDBC batch size: 15
2020-02-04 14:42:50 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-02-04 14:42:50 DEBUG Settings:104 - Scrollable result sets: enabled
2020-02-04 14:42:50 DEBUG Settings:105 - Wrap result sets: disabled
2020-02-04 14:42:50 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-02-04 14:42:50 DEBUG Settings:107 - JDBC result set fetch size: null
2020-02-04 14:42:50 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-02-04 14:42:50 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-02-04 14:42:50 DEBUG Settings:111 - JPA compliance - query : disabled
2020-02-04 14:42:50 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2020-02-04 14:42:50 DEBUG Settings:113 - JPA compliance - lists : disabled
2020-02-04 14:42:50 DEBUG Settings:114 - JPA compliance - transactions : disabled
2020-02-04 14:42:50 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-02-04 14:42:50 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, dialect=org.hibernate.dialect.MySQL5Dialect, java.specification.version=11, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\admin\Desktop\HW_Mate_from_Shop\cinema_project\target\classes;C:\Users\admin\.m2\repository\org\hibernate\hibernate-core\5.4.10.Final\hibernate-core-5.4.10.Final.jar;C:\Users\admin\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\admin\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\admin\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\admin\.m2\repository\net\bytebuddy\byte-buddy\1.10.2\byte-buddy-1.10.2.jar;C:\Users\admin\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\admin\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\admin\.m2\repository\org\jboss\jandex\2.1.1.Final\jandex-2.1.1.Final.jar;C:\Users\admin\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\admin\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\admin\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\admin\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\admin\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\admin\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\admin\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\admin\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\admin\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\admin\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\admin\.m2\repository\mysql\mysql-connector-java\8.0.19\mysql-connector-java-8.0.19.jar;C:\Users\admin\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\admin\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=JetBrains s.r.o, sun.arch.data.model=64, hbm2ddl.auto=create-drop, user.variant=, java.vendor.url=https://www.jetbrains.com/, user.timezone=Europe/Helsinki, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=D:\IntelliJ IDEA 2019.3.1\jbr\bin, sun.java.command=com.dev.cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\admin, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2019-10-15, java.home=D:\IntelliJ IDEA 2019.3.1\jbr, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, user.script=, connection.password=roman, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.5+10-b520.17, user.name=admin, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://youtrack.jetbrains.com, java.io.tmpdir=C:\Users\admin\AppData\Local\Temp\, java.version=11.0.5, user.dir=C:\Users\admin\Desktop\HW_Mate_from_Shop\cinema_project, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4fad6218, java.library.path=D:\IntelliJ IDEA 2019.3.1\jbr\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\admin\AppData\Local\Microsoft\WindowsApps;;D:\IntelliJ IDEA 2019.3.1\bin;;., java.vendor=JetBrains s.r.o, java.vm.info=mixed mode, sharing, java.vm.version=11.0.5+10-b520.17, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, java.class.version=55.0}
2020-02-04 14:42:50 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-02-04 14:42:50 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-02-04 14:42:50 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5328a9c1] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@213bd3d5]
2020-02-04 14:42:50 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.CinemaHall] is safe
2020-02-04 14:42:50 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.CinemaHall
2020-02-04 14:42:50 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.CinemaHall] is safe
2020-02-04 14:42:50 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.CinemaHall
2020-02-04 14:42:51 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-02-04 14:42:51 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-02-04 14:42:51 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-02-04 14:42:51 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-02-04 14:42:51 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.MovieSession] is safe
2020-02-04 14:42:51 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.MovieSession
2020-02-04 14:42:51 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.MovieSession] is safe
2020-02-04 14:42:51 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.MovieSession
2020-02-04 14:42:51 DEBUG AbstractEntityPersister:3847 - Static SQL for entity: com.dev.cinema.model.CinemaHall
2020-02-04 14:42:51 DEBUG AbstractEntityPersister:3852 -  Version select: select id from cinema_hall where id =?
2020-02-04 14:42:51 DEBUG AbstractEntityPersister:3855 -  Snapshot select: select cinemahall_.id, cinemahall_.capacity as capacity2_0_, cinemahall_.description as descript3_0_ from cinema_hall cinemahall_ where cinemahall_.id=?
2020-02-04 14:42:51 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into cinema_hall (capacity, description, id) values (?, ?, ?)
2020-02-04 14:42:51 DEBUG AbstractEntityPersister:394 -  Update 0: update cinema_hall set capacity=?, description=? where id=?
2020-02-04 14:42:51 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from cinema_hall where id=?
2020-02-04 14:42:51 DEBUG AbstractEntityPersister:3863 -  Identity insert: insert into cinema_hall (capacity, description) values (?, ?)
2020-02-04 14:42:51 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43a09ce2]
2020-02-04 14:42:51 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-02-04 14:42:51 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-02-04 14:42:51 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-02-04 14:42:51 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-02-04 14:42:51 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=com.dev.cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-02-04 14:42:51 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.CinemaHall [NONE]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-02-04 14:42:51 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@439e3cb4]
2020-02-04 14:42:51 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-02-04 14:42:51 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-02-04 14:42:51 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-02-04 14:42:51 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-02-04 14:42:51 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=com.dev.cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-02-04 14:42:51 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.CinemaHall [READ]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-02-04 14:42:51 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-02-04 14:42:51 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-02-04 14:42:51 DEBUG AbstractEntityPersister:3847 - Static SQL for entity: com.dev.cinema.model.Movie
2020-02-04 14:42:51 DEBUG AbstractEntityPersister:3852 -  Version select: select id from movie where id =?
2020-02-04 14:42:51 DEBUG AbstractEntityPersister:3855 -  Snapshot select: select movie_.id, movie_.description as descript2_1_, movie_.title as title3_1_ from movie movie_ where movie_.id=?
2020-02-04 14:42:51 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, title, id) values (?, ?, ?)
2020-02-04 14:42:51 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, title=? where id=?
2020-02-04 14:42:51 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-02-04 14:42:51 DEBUG AbstractEntityPersister:3863 -  Identity insert: insert into movie (description, title) values (?, ?)
2020-02-04 14:42:51 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@462e1e64]
2020-02-04 14:42:51 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-02-04 14:42:51 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-02-04 14:42:51 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-02-04 14:42:51 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-02-04 14:42:51 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-02-04 14:42:51 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [NONE]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-02-04 14:42:51 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49f40c00]
2020-02-04 14:42:51 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-02-04 14:42:51 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-02-04 14:42:51 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-02-04 14:42:51 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-02-04 14:42:51 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-02-04 14:42:51 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [READ]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-02-04 14:42:51 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-02-04 14:42:51 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-02-04 14:42:51 DEBUG AbstractEntityPersister:3847 - Static SQL for entity: com.dev.cinema.model.MovieSession
2020-02-04 14:42:51 DEBUG AbstractEntityPersister:3852 -  Version select: select id from movie_session where id =?
2020-02-04 14:42:51 DEBUG AbstractEntityPersister:3855 -  Snapshot select: select moviesessi_.id, moviesessi_.cinemaHall_id as cinemaHa3_2_, moviesessi_.movie_id as movie_id4_2_, moviesessi_.showTime as showTime2_2_ from movie_session moviesessi_ where moviesessi_.id=?
2020-02-04 14:42:51 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie_session (cinemaHall_id, movie_id, showTime, id) values (?, ?, ?, ?)
2020-02-04 14:42:51 DEBUG AbstractEntityPersister:394 -  Update 0: update movie_session set cinemaHall_id=?, movie_id=?, showTime=? where id=?
2020-02-04 14:42:51 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie_session where id=?
2020-02-04 14:42:51 DEBUG AbstractEntityPersister:3863 -  Identity insert: insert into movie_session (cinemaHall_id, movie_id, showTime) values (?, ?, ?)
2020-02-04 14:42:51 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52d6d273]
2020-02-04 14:42:51 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall
2020-02-04 14:42:51 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a8e6e89]
2020-02-04 14:42:51 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.capacity
2020-02-04 14:42:51 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.description
2020-02-04 14:42:51 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie
2020-02-04 14:42:51 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b6924cb]
2020-02-04 14:42:51 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.description
2020-02-04 14:42:51 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.title
2020-02-04 14:42:51 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : showTime
2020-02-04 14:42:51 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-02-04 14:42:51 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-02-04 14:42:51 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.MovieSession)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.MovieSession, querySpaceUid=<gen:0>, path=com.dev.cinema.model.MovieSession)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:1>, path=com.dev.cinema.model.MovieSession.cinemaHall)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:2>, path=com.dev.cinema.model.MovieSession.movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.MovieSession)
          - SQL table alias mapping - moviesessi0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(cinemaHall)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.dev.cinema.model.CinemaHall)
                - SQL table alias mapping - cinemahall1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(movie)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.dev.cinema.model.Movie)
                - SQL table alias mapping - movie2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}

2020-02-04 14:42:51 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.MovieSession [NONE]: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_, cinemahall1_.id as id1_0_1_, cinemahall1_.capacity as capacity2_0_1_, cinemahall1_.description as descript3_0_1_, movie2_.id as id1_1_2_, movie2_.description as descript2_1_2_, movie2_.title as title3_1_2_ from movie_session moviesessi0_ left outer join cinema_hall cinemahall1_ on moviesessi0_.cinemaHall_id=cinemahall1_.id left outer join movie movie2_ on moviesessi0_.movie_id=movie2_.id where moviesessi0_.id=?
2020-02-04 14:42:51 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ed043d3]
2020-02-04 14:42:51 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall
2020-02-04 14:42:51 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6419a0e1]
2020-02-04 14:42:51 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.capacity
2020-02-04 14:42:51 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.description
2020-02-04 14:42:51 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie
2020-02-04 14:42:51 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44af588b]
2020-02-04 14:42:51 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.description
2020-02-04 14:42:51 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.title
2020-02-04 14:42:51 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : showTime
2020-02-04 14:42:51 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-02-04 14:42:51 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-02-04 14:42:51 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.MovieSession)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.MovieSession, querySpaceUid=<gen:0>, path=com.dev.cinema.model.MovieSession)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:1>, path=com.dev.cinema.model.MovieSession.cinemaHall)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:2>, path=com.dev.cinema.model.MovieSession.movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.MovieSession)
          - SQL table alias mapping - moviesessi0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(cinemaHall)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.dev.cinema.model.CinemaHall)
                - SQL table alias mapping - cinemahall1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(movie)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.dev.cinema.model.Movie)
                - SQL table alias mapping - movie2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}

2020-02-04 14:42:51 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.MovieSession [READ]: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_, cinemahall1_.id as id1_0_1_, cinemahall1_.capacity as capacity2_0_1_, cinemahall1_.description as descript3_0_1_, movie2_.id as id1_1_2_, movie2_.description as descript2_1_2_, movie2_.title as title3_1_2_ from movie_session moviesessi0_ left outer join cinema_hall cinemahall1_ on moviesessi0_.cinemaHall_id=cinemahall1_.id left outer join movie movie2_ on moviesessi0_.movie_id=movie2_.id where moviesessi0_.id=?
2020-02-04 14:42:51 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.MovieSession: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_ from movie_session moviesessi0_ where moviesessi0_.id=?
2020-02-04 14:42:51 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.MovieSession: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_ from movie_session moviesessi0_ where moviesessi0_.id=?
2020-02-04 14:42:51 DEBUG SQL:127 - drop table if exists cinema_hall
2020-02-04 14:42:51 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@316acbb5] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-02-04 14:42:51 DEBUG SQL:127 - drop table if exists movie
2020-02-04 14:42:51 DEBUG SQL:127 - drop table if exists movie_session
2020-02-04 14:42:51 DEBUG SQL:127 - create table cinema_hall (id bigint not null auto_increment, capacity integer not null, description varchar(255), primary key (id)) engine=MyISAM
2020-02-04 14:42:51 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@2b2954e1] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-02-04 14:42:51 DEBUG SQL:127 - create table movie (id bigint not null auto_increment, description varchar(255), title varchar(255), primary key (id)) engine=MyISAM
2020-02-04 14:42:51 DEBUG SQL:127 - create table movie_session (id bigint not null auto_increment, showTime datetime, cinemaHall_id bigint, movie_id bigint, primary key (id)) engine=MyISAM
2020-02-04 14:42:51 DEBUG SQL:127 - alter table movie_session add constraint FK6jauch8jou1nsodork3heqqsr foreign key (cinemaHall_id) references cinema_hall (id)
2020-02-04 14:42:51 DEBUG SQL:127 - alter table movie_session add constraint FKer8dsjajcvlud03f5165ajl39 foreign key (movie_id) references movie (id)
2020-02-04 14:42:52 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-02-04 14:42:52 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-02-04 14:42:52 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-04 14:42:52 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-04 14:42:52 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-02-04 14:42:52 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-02-04 14:42:52 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3e4e8fdf
2020-02-04 14:42:52 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 6a7f5ce2-0ebf-420a-8c86-8a6412228d18 (<unnamed>)
2020-02-04 14:42:52 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-02-04 14:42:52 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-02-04 14:42:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-02-04 14:42:52 DEBUG TransactionImpl:81 - begin
2020-02-04 14:42:52 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-02-04 14:42:52 DEBUG SQL:127 - insert into movie (description, title) values (?, ?)
2020-02-04 14:42:52 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-02-04 14:42:52 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-02-04 14:42:52 DEBUG TransactionImpl:98 - committing
2020-02-04 14:42:52 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-02-04 14:42:52 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-02-04 14:42:52 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-02-04 14:42:52 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-02-04 14:42:52 DEBUG EntityPrinter:110 - Listing entities:
2020-02-04 14:42:52 DEBUG EntityPrinter:117 - com.dev.cinema.model.Movie{description=null, id=1, title=Fast and Furious}
2020-02-04 14:42:52 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-02-04 14:42:52 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-02-04 14:42:52 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-02-04 14:42:52 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@d499c13
2020-02-04 14:42:52 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from com.dev.cinema.model.Movie as generatedAlias0
2020-02-04 14:42:52 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-02-04 14:42:52 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Movie'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-02-04 14:42:52 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-02-04 14:42:52 DEBUG FromElement:149 - FromClause{level=1} : com.dev.cinema.model.Movie (generatedAlias0) -> movie0_
2020-02-04 14:42:52 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> movie0_.id
2020-02-04 14:42:52 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-02-04 14:42:52 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} movie0_.id ) ( FromClause{level=1} movie movie0_ ) )
2020-02-04 14:42:52 DEBUG JoinProcessor:128 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Movie): [movie]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.dev.cinema.model.Movie)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-02-04 14:42:52 DEBUG JoinProcessor:295 - Using FROM fragment [movie movie0_]
2020-02-04 14:42:52 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-02-04 14:42:52 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_1_' {alias=generatedAlias0, className=com.dev.cinema.model.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.description as descript2_1_, movie0_.title as title3_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[movie0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=com.dev.cinema.model.Movie}}

2020-02-04 14:42:52 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-02-04 14:42:52 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from com.dev.cinema.model.Movie as generatedAlias0
2020-02-04 14:42:52 DEBUG QueryTranslatorImpl:255 - SQL: select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.title as title3_1_ from movie movie0_
2020-02-04 14:42:52 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-02-04 14:42:52 DEBUG SQL:127 - select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.title as title3_1_ from movie movie0_
2020-02-04 14:42:52 DEBUG Loader:384 - Result set row: 0
2020-02-04 14:42:52 DEBUG Loader:1586 - Result row: EntityKey[com.dev.cinema.model.Movie#1]
2020-02-04 14:42:52 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.Movie#1]
2020-02-04 14:42:52 DEBUG TwoPhaseLoad:190 - Processing attribute `description` : value = null
2020-02-04 14:42:52 DEBUG TwoPhaseLoad:221 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-02-04 14:42:52 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Fast and Furious
2020-02-04 14:42:52 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-02-04 14:42:52 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.Movie#1]
2020-02-04 14:42:52 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-02-04 14:42:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-02-04 14:42:52 DEBUG TransactionImpl:81 - begin
2020-02-04 14:42:52 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-02-04 14:42:52 DEBUG SQL:127 - insert into cinema_hall (capacity, description) values (?, ?)
2020-02-04 14:42:52 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-02-04 14:42:52 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-02-04 14:42:52 DEBUG TransactionImpl:98 - committing
2020-02-04 14:42:52 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-02-04 14:42:52 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-02-04 14:42:52 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-02-04 14:42:52 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-02-04 14:42:52 DEBUG EntityPrinter:110 - Listing entities:
2020-02-04 14:42:52 DEBUG EntityPrinter:117 - com.dev.cinema.model.CinemaHall{description=Premium Hall, id=1, capacity=100}
2020-02-04 14:42:52 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-02-04 14:42:52 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-02-04 14:42:52 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from CinemaHall as generatedAlias0
2020-02-04 14:42:52 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from com.dev.cinema.model.CinemaHall as generatedAlias0
2020-02-04 14:42:52 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-02-04 14:42:52 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'CinemaHall'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-02-04 14:42:52 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-02-04 14:42:52 DEBUG FromElement:149 - FromClause{level=1} : com.dev.cinema.model.CinemaHall (generatedAlias0) -> cinemahall0_
2020-02-04 14:42:52 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> cinemahall0_.id
2020-02-04 14:42:52 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-02-04 14:42:52 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} cinemahall0_.id ) ( FromClause{level=1} cinema_hall cinemahall0_ ) )
2020-02-04 14:42:52 DEBUG JoinProcessor:128 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity CinemaHall): [cinema_hall]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.dev.cinema.model.CinemaHall)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-02-04 14:42:52 DEBUG JoinProcessor:295 - Using FROM fragment [cinema_hall cinemahall0_]
2020-02-04 14:42:52 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-02-04 14:42:52 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (cinema_hall)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'cinemahall0_.id as id1_0_' {alias=generatedAlias0, className=com.dev.cinema.model.CinemaHall, tableAlias=cinemahall0_}
    |  \-[SQL_TOKEN] SqlFragment: 'cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[cinemahall0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'cinema_hall cinemahall0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=cinema_hall,tableAlias=cinemahall0_,origin=null,columns={,className=com.dev.cinema.model.CinemaHall}}

2020-02-04 14:42:52 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-02-04 14:42:52 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from com.dev.cinema.model.CinemaHall as generatedAlias0
2020-02-04 14:42:52 DEBUG QueryTranslatorImpl:255 - SQL: select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-02-04 14:42:52 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-02-04 14:42:52 DEBUG SQL:127 - select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-02-04 14:42:52 DEBUG Loader:384 - Result set row: 0
2020-02-04 14:42:52 DEBUG Loader:1586 - Result row: EntityKey[com.dev.cinema.model.CinemaHall#1]
2020-02-04 14:42:52 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.CinemaHall#1]
2020-02-04 14:42:52 DEBUG TwoPhaseLoad:190 - Processing attribute `capacity` : value = 100
2020-02-04 14:42:52 DEBUG TwoPhaseLoad:221 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-02-04 14:42:52 DEBUG TwoPhaseLoad:190 - Processing attribute `description` : value = Premium Hall
2020-02-04 14:42:52 DEBUG TwoPhaseLoad:221 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-02-04 14:42:52 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.CinemaHall#1]
2020-02-04 14:42:52 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-02-04 14:42:52 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-02-04 14:42:52 DEBUG TransactionImpl:81 - begin
2020-02-04 14:42:52 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-02-04 14:42:52 DEBUG SQL:127 - insert into movie_session (cinemaHall_id, movie_id, showTime) values (?, ?, ?)
2020-02-04 14:42:52 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-02-04 14:42:52 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-02-04 14:42:52 DEBUG TransactionImpl:98 - committing
2020-02-04 14:42:52 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-02-04 14:42:52 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-02-04 14:42:52 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-02-04 14:42:52 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-02-04 14:42:52 DEBUG EntityPrinter:110 - Listing entities:
2020-02-04 14:42:52 DEBUG EntityPrinter:117 - com.dev.cinema.model.MovieSession{cinemaHall=com.dev.cinema.model.CinemaHall#1, movie=com.dev.cinema.model.Movie#1, showTime=2020-02-04T14:42:52.415617900, id=1}
2020-02-04 14:42:52 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-02-04 14:42:52 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-02-04 14:42:52 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from MovieSession as generatedAlias0
2020-02-04 14:42:52 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from com.dev.cinema.model.MovieSession as generatedAlias0
2020-02-04 14:42:52 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-02-04 14:42:52 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'MovieSession'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-02-04 14:42:52 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-02-04 14:42:52 DEBUG FromElement:149 - FromClause{level=1} : com.dev.cinema.model.MovieSession (generatedAlias0) -> moviesessi0_
2020-02-04 14:42:52 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> moviesessi0_.id
2020-02-04 14:42:52 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-02-04 14:42:52 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} moviesessi0_.id ) ( FromClause{level=1} movie_session moviesessi0_ ) )
2020-02-04 14:42:52 DEBUG JoinProcessor:128 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity MovieSession): [movie_session]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.dev.cinema.model.MovieSession)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-02-04 14:42:52 DEBUG JoinProcessor:295 - Using FROM fragment [movie_session moviesessi0_]
2020-02-04 14:42:52 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-02-04 14:42:52 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie_session)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'moviesessi0_.id as id1_2_' {alias=generatedAlias0, className=com.dev.cinema.model.MovieSession, tableAlias=moviesessi0_}
    |  \-[SQL_TOKEN] SqlFragment: 'moviesessi0_.cinemaHall_id as cinemaHa3_2_, moviesessi0_.movie_id as movie_id4_2_, moviesessi0_.showTime as showTime2_2_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[moviesessi0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'movie_session moviesessi0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie_session,tableAlias=moviesessi0_,origin=null,columns={,className=com.dev.cinema.model.MovieSession}}

2020-02-04 14:42:52 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-02-04 14:42:52 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from com.dev.cinema.model.MovieSession as generatedAlias0
2020-02-04 14:42:52 DEBUG QueryTranslatorImpl:255 - SQL: select moviesessi0_.id as id1_2_, moviesessi0_.cinemaHall_id as cinemaHa3_2_, moviesessi0_.movie_id as movie_id4_2_, moviesessi0_.showTime as showTime2_2_ from movie_session moviesessi0_
2020-02-04 14:42:52 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-02-04 14:42:52 DEBUG SQL:127 - select moviesessi0_.id as id1_2_, moviesessi0_.cinemaHall_id as cinemaHa3_2_, moviesessi0_.movie_id as movie_id4_2_, moviesessi0_.showTime as showTime2_2_ from movie_session moviesessi0_
2020-02-04 14:42:52 DEBUG Loader:384 - Result set row: 0
2020-02-04 14:42:52 DEBUG Loader:1586 - Result row: EntityKey[com.dev.cinema.model.MovieSession#1]
2020-02-04 14:42:52 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.MovieSession#1]
2020-02-04 14:42:52 DEBUG TwoPhaseLoad:190 - Processing attribute `cinemaHall` : value = 1
2020-02-04 14:42:52 DEBUG TwoPhaseLoad:221 - Attribute (`cinemaHall`)  - enhanced for lazy-loading? - false
2020-02-04 14:42:52 DEBUG SQL:127 - select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-02-04 14:42:52 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-02-04 14:42:52 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.CinemaHall#1]
2020-02-04 14:42:52 DEBUG TwoPhaseLoad:190 - Processing attribute `capacity` : value = 100
2020-02-04 14:42:52 DEBUG TwoPhaseLoad:221 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-02-04 14:42:52 DEBUG TwoPhaseLoad:190 - Processing attribute `description` : value = Premium Hall
2020-02-04 14:42:52 DEBUG TwoPhaseLoad:221 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-02-04 14:42:52 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.CinemaHall#1]
2020-02-04 14:42:52 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : com.dev.cinema.model.CinemaHall#1
2020-02-04 14:42:52 DEBUG TwoPhaseLoad:190 - Processing attribute `movie` : value = 1
2020-02-04 14:42:52 DEBUG TwoPhaseLoad:221 - Attribute (`movie`)  - enhanced for lazy-loading? - false
2020-02-04 14:42:52 DEBUG SQL:127 - select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-02-04 14:42:52 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-02-04 14:42:52 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.Movie#1]
2020-02-04 14:42:52 DEBUG TwoPhaseLoad:190 - Processing attribute `description` : value = null
2020-02-04 14:42:52 DEBUG TwoPhaseLoad:221 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-02-04 14:42:52 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Fast and Furious
2020-02-04 14:42:52 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-02-04 14:42:52 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.Movie#1]
2020-02-04 14:42:52 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : com.dev.cinema.model.Movie#1
2020-02-04 14:42:52 DEBUG TwoPhaseLoad:190 - Processing attribute `showTime` : value = 2020-02-04T14:42:52
2020-02-04 14:42:52 DEBUG TwoPhaseLoad:221 - Attribute (`showTime`)  - enhanced for lazy-loading? - false
2020-02-04 14:42:52 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.MovieSession#1]
2020-02-04 14:42:52 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-02-04 14:44:09 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-02-04 14:44:09 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-02-04 14:44:09 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-02-04 14:44:09 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-02-04 14:44:09 INFO  Version:46 - HHH000412: Hibernate Core {5.4.10.Final}
2020-02-04 14:44:09 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-02-04 14:44:10 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-02-04 14:44:10 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-02-04 14:44:10 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-02-04 14:44:10 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-02-04 14:44:10 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-02-04 14:44:10 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-02-04 14:44:10 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@67304a40
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@67304a40
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@67304a40
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7642df8f
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@37c7595
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@1fdf1c5
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@6b8d96d9
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@6b8d96d9
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6b8d96d9
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@5fe1ce85
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@5fe1ce85
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5fe1ce85
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@52851b44
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@52851b44
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@52851b44
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@23aa363a
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@23aa363a
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@23aa363a
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@1e8ce150
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@1e8ce150
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1e8ce150
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@363042d7
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@363042d7
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@363042d7
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@1477089c
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@1477089c
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1477089c
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@10b9db7b
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@10b9db7b
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4372b9b6
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4372b9b6
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@1f6c9cd8
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1f6c9cd8
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7f36662c
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1817f1eb
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@4a194c39
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4a194c39
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@c4ed84
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@c4ed84
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@3016fd5e
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3016fd5e
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@42463763
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@42463763
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@613a8ee1
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@613a8ee1
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2807bdeb
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2807bdeb
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@294e5088
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@294e5088
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@24d09c1
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@24d09c1
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ff65192
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ff65192
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@50ecde95
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@50ecde95
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@23fb172e
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@23fb172e
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1d131e1b
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1d131e1b
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1d131e1b
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4aa83f4f
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@70ab2d48
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@70ab2d48
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@70ab2d48
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7cbc3762
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@2f48b3d2
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2f48b3d2
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@4c550889
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4c550889
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3724af13
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3724af13
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@37052337
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@37052337
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@616fe72b
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@616fe72b
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@60957c0f
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@40dff0b7
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@40dff0b7
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@40dff0b7
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@366c4480
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@366c4480
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@366c4480
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@5cbe877d
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@5829e4f4
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@4566d049
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@4566d049
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@4566d049
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@ccb4b1b
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@ccb4b1b
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@ccb4b1b
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@7c1e2a2d
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@2cc3ad05
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@7e276594
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7e276594
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@77d2e85
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@54e22bdd
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@54e22bdd
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@7d42c224
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7d42c224
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5e01a982
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@704f1591
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@6955cb39
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@3f6db3fb
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3f6db3fb
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@68ad99fe
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@485e36bc
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@781f10f2
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2a79d4b1
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2e9fda69
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@17cdf2d0
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1755e85b
2020-02-04 14:44:10 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@736d6a5c
2020-02-04 14:44:10 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-02-04 14:44:10 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-02-04 14:44:10 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-02-04 14:44:10 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-02-04 14:44:10 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-02-04 14:44:10 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-02-04 14:44:10 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-02-04 14:44:10 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-02-04 14:44:10 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-02-04 14:44:10 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-02-04 14:44:10 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-02-04 14:44:10 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-02-04 14:44:10 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-02-04 14:44:10 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-02-04 14:44:10 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-02-04 14:44:10 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC]
2020-02-04 14:44:10 INFO  pooling:121 - HHH10001001: Connection properties: {password=roman, user=root}
2020-02-04 14:44:10 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-02-04 14:44:10 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-02-04 14:44:10 INFO  DriverManagerConnectionProviderImpl:249 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-02-04 14:44:11 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
2020-02-04 14:44:11 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.19 (Revision: a0ca826f5cdf51a98356fdfb1bf251eb042f80bf)
      major : 8
      minor : 0
2020-02-04 14:44:11 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-02-04 14:44:11 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-02-04 14:44:11 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-02-04 14:44:11 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-02-04 14:44:11 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-02-04 14:44:11 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5328a9c1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5b78fdb1]
2020-02-04 14:44:11 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.Movie
2020-02-04 14:44:11 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-02-04 14:44:11 DEBUG EntityBinder:430 - Import with entity name Movie
2020-02-04 14:44:11 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.Movie on table movie
2020-02-04 14:44:11 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-02-04 14:44:11 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-02-04 14:44:11 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:id]
2020-02-04 14:44:11 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-02-04 14:44:11 DEBUG PropertyBinder:266 - Building property id
2020-02-04 14:44:11 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-02-04 14:44:11 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-02-04 14:44:11 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-02-04 14:44:11 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:description]
2020-02-04 14:44:11 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-02-04 14:44:11 DEBUG PropertyBinder:266 - Building property description
2020-02-04 14:44:11 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-02-04 14:44:11 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-02-04 14:44:11 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:title]
2020-02-04 14:44:11 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-02-04 14:44:11 DEBUG PropertyBinder:266 - Building property title
2020-02-04 14:44:11 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.MovieSession
2020-02-04 14:44:11 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-02-04 14:44:11 DEBUG EntityBinder:430 - Import with entity name MovieSession
2020-02-04 14:44:11 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.MovieSession on table movie_session
2020-02-04 14:44:11 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-02-04 14:44:11 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-02-04 14:44:11 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.MovieSession:id]
2020-02-04 14:44:11 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-02-04 14:44:11 DEBUG PropertyBinder:266 - Building property id
2020-02-04 14:44:11 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-02-04 14:44:11 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2020-02-04 14:44:11 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=cinemaHall, insertable=true, updatable=true, unique=false}
2020-02-04 14:44:11 DEBUG PropertyBinder:266 - Building property cinemaHall
2020-02-04 14:44:11 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2020-02-04 14:44:11 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=movie, insertable=true, updatable=true, unique=false}
2020-02-04 14:44:11 DEBUG PropertyBinder:266 - Building property movie
2020-02-04 14:44:11 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=showTime, insertable=true, updatable=true, unique=false}
2020-02-04 14:44:11 DEBUG PropertyBinder:175 - MetadataSourceProcessor property showTime with lazy=false
2020-02-04 14:44:11 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.MovieSession:showTime]
2020-02-04 14:44:11 DEBUG SimpleValueBinder:411 - building SimpleValue for showTime
2020-02-04 14:44:11 DEBUG PropertyBinder:266 - Building property showTime
2020-02-04 14:44:11 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.CinemaHall
2020-02-04 14:44:11 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-02-04 14:44:11 DEBUG EntityBinder:430 - Import with entity name CinemaHall
2020-02-04 14:44:11 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.CinemaHall on table cinema_hall
2020-02-04 14:44:11 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-02-04 14:44:11 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-02-04 14:44:11 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:id]
2020-02-04 14:44:11 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-02-04 14:44:11 DEBUG PropertyBinder:266 - Building property id
2020-02-04 14:44:11 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-02-04 14:44:11 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=capacity, insertable=true, updatable=true, unique=false}
2020-02-04 14:44:11 DEBUG PropertyBinder:175 - MetadataSourceProcessor property capacity with lazy=false
2020-02-04 14:44:11 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:capacity]
2020-02-04 14:44:11 DEBUG SimpleValueBinder:411 - building SimpleValue for capacity
2020-02-04 14:44:11 DEBUG PropertyBinder:266 - Building property capacity
2020-02-04 14:44:11 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-02-04 14:44:11 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-02-04 14:44:11 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:description]
2020-02-04 14:44:11 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-02-04 14:44:11 DEBUG PropertyBinder:266 - Building property description
2020-02-04 14:44:11 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-02-04 14:44:11 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-02-04 14:44:11 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-02-04 14:44:11 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-02-04 14:44:11 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for showTime
2020-02-04 14:44:11 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-02-04 14:44:11 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for capacity
2020-02-04 14:44:11 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-02-04 14:44:11 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-02-04 14:44:11 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie_session]
2020-02-04 14:44:11 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [cinema_hall]
2020-02-04 14:44:11 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.CinemaHall
2020-02-04 14:44:11 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.Movie
2020-02-04 14:44:11 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.CinemaHall
2020-02-04 14:44:11 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.Movie
2020-02-04 14:44:11 DEBUG SessionFactoryImpl:207 - Building session factory
2020-02-04 14:44:11 DEBUG Settings:68 - SessionFactory name : null
2020-02-04 14:44:11 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-02-04 14:44:11 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-02-04 14:44:11 DEBUG Settings:72 - Statistics: disabled
2020-02-04 14:44:11 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-02-04 14:44:11 DEBUG Settings:75 - Default entity-mode: pojo
2020-02-04 14:44:11 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-02-04 14:44:11 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-02-04 14:44:11 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2020-02-04 14:44:11 DEBUG Settings:80 - Default batch fetch size: -1
2020-02-04 14:44:11 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-02-04 14:44:11 DEBUG Settings:82 - Default null ordering: NONE
2020-02-04 14:44:11 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-02-04 14:44:11 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-02-04 14:44:11 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-02-04 14:44:11 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-02-04 14:44:11 DEBUG Settings:90 - Query language substitutions: {}
2020-02-04 14:44:11 DEBUG Settings:91 - Named query checking : enabled
2020-02-04 14:44:11 DEBUG Settings:93 - Second-level cache: disabled
2020-02-04 14:44:11 DEBUG Settings:94 - Second-level query cache: disabled
2020-02-04 14:44:11 DEBUG Settings:95 - Second-level query cache factory: null
2020-02-04 14:44:11 DEBUG Settings:96 - Second-level cache region prefix: null
2020-02-04 14:44:11 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-02-04 14:44:11 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-02-04 14:44:11 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-02-04 14:44:11 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-02-04 14:44:11 DEBUG Settings:102 - JDBC batch size: 15
2020-02-04 14:44:11 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-02-04 14:44:11 DEBUG Settings:104 - Scrollable result sets: enabled
2020-02-04 14:44:11 DEBUG Settings:105 - Wrap result sets: disabled
2020-02-04 14:44:11 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-02-04 14:44:11 DEBUG Settings:107 - JDBC result set fetch size: null
2020-02-04 14:44:11 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-02-04 14:44:11 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-02-04 14:44:11 DEBUG Settings:111 - JPA compliance - query : disabled
2020-02-04 14:44:11 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2020-02-04 14:44:11 DEBUG Settings:113 - JPA compliance - lists : disabled
2020-02-04 14:44:11 DEBUG Settings:114 - JPA compliance - transactions : disabled
2020-02-04 14:44:11 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-02-04 14:44:11 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, dialect=org.hibernate.dialect.MySQL5Dialect, java.specification.version=11, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\admin\Desktop\HW_Mate_from_Shop\cinema_project\target\classes;C:\Users\admin\.m2\repository\org\hibernate\hibernate-core\5.4.10.Final\hibernate-core-5.4.10.Final.jar;C:\Users\admin\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\admin\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\admin\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\admin\.m2\repository\net\bytebuddy\byte-buddy\1.10.2\byte-buddy-1.10.2.jar;C:\Users\admin\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\admin\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\admin\.m2\repository\org\jboss\jandex\2.1.1.Final\jandex-2.1.1.Final.jar;C:\Users\admin\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\admin\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\admin\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\admin\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\admin\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\admin\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\admin\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\admin\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\admin\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\admin\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\admin\.m2\repository\mysql\mysql-connector-java\8.0.19\mysql-connector-java-8.0.19.jar;C:\Users\admin\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\admin\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=JetBrains s.r.o, sun.arch.data.model=64, hbm2ddl.auto=create-drop, user.variant=, java.vendor.url=https://www.jetbrains.com/, user.timezone=Europe/Helsinki, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=D:\IntelliJ IDEA 2019.3.1\jbr\bin, sun.java.command=com.dev.cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\admin, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2019-10-15, java.home=D:\IntelliJ IDEA 2019.3.1\jbr, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, user.script=, connection.password=roman, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.5+10-b520.17, user.name=admin, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://youtrack.jetbrains.com, java.io.tmpdir=C:\Users\admin\AppData\Local\Temp\, java.version=11.0.5, user.dir=C:\Users\admin\Desktop\HW_Mate_from_Shop\cinema_project, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4fad6218, java.library.path=D:\IntelliJ IDEA 2019.3.1\jbr\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\admin\AppData\Local\Microsoft\WindowsApps;;D:\IntelliJ IDEA 2019.3.1\bin;;., java.vendor=JetBrains s.r.o, java.vm.info=mixed mode, sharing, java.vm.version=11.0.5+10-b520.17, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, java.class.version=55.0}
2020-02-04 14:44:11 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-02-04 14:44:11 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-02-04 14:44:11 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5328a9c1] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@213bd3d5]
2020-02-04 14:44:11 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.CinemaHall] is safe
2020-02-04 14:44:11 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.CinemaHall
2020-02-04 14:44:11 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.CinemaHall] is safe
2020-02-04 14:44:11 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.CinemaHall
2020-02-04 14:44:12 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-02-04 14:44:12 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-02-04 14:44:12 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-02-04 14:44:12 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-02-04 14:44:12 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.MovieSession] is safe
2020-02-04 14:44:12 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.MovieSession
2020-02-04 14:44:12 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.MovieSession] is safe
2020-02-04 14:44:12 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.MovieSession
2020-02-04 14:44:12 DEBUG AbstractEntityPersister:3847 - Static SQL for entity: com.dev.cinema.model.CinemaHall
2020-02-04 14:44:12 DEBUG AbstractEntityPersister:3852 -  Version select: select id from cinema_hall where id =?
2020-02-04 14:44:12 DEBUG AbstractEntityPersister:3855 -  Snapshot select: select cinemahall_.id, cinemahall_.capacity as capacity2_0_, cinemahall_.description as descript3_0_ from cinema_hall cinemahall_ where cinemahall_.id=?
2020-02-04 14:44:12 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into cinema_hall (capacity, description, id) values (?, ?, ?)
2020-02-04 14:44:12 DEBUG AbstractEntityPersister:394 -  Update 0: update cinema_hall set capacity=?, description=? where id=?
2020-02-04 14:44:12 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from cinema_hall where id=?
2020-02-04 14:44:12 DEBUG AbstractEntityPersister:3863 -  Identity insert: insert into cinema_hall (capacity, description) values (?, ?)
2020-02-04 14:44:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43a09ce2]
2020-02-04 14:44:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-02-04 14:44:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-02-04 14:44:12 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-02-04 14:44:12 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-02-04 14:44:12 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=com.dev.cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-02-04 14:44:12 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.CinemaHall [NONE]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-02-04 14:44:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@439e3cb4]
2020-02-04 14:44:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-02-04 14:44:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-02-04 14:44:12 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-02-04 14:44:12 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-02-04 14:44:12 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=com.dev.cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-02-04 14:44:12 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.CinemaHall [READ]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-02-04 14:44:12 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-02-04 14:44:12 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-02-04 14:44:12 DEBUG AbstractEntityPersister:3847 - Static SQL for entity: com.dev.cinema.model.Movie
2020-02-04 14:44:12 DEBUG AbstractEntityPersister:3852 -  Version select: select id from movie where id =?
2020-02-04 14:44:12 DEBUG AbstractEntityPersister:3855 -  Snapshot select: select movie_.id, movie_.description as descript2_1_, movie_.title as title3_1_ from movie movie_ where movie_.id=?
2020-02-04 14:44:12 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, title, id) values (?, ?, ?)
2020-02-04 14:44:12 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, title=? where id=?
2020-02-04 14:44:12 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-02-04 14:44:12 DEBUG AbstractEntityPersister:3863 -  Identity insert: insert into movie (description, title) values (?, ?)
2020-02-04 14:44:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@462e1e64]
2020-02-04 14:44:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-02-04 14:44:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-02-04 14:44:12 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-02-04 14:44:12 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-02-04 14:44:12 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-02-04 14:44:12 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [NONE]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-02-04 14:44:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49f40c00]
2020-02-04 14:44:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-02-04 14:44:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-02-04 14:44:12 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-02-04 14:44:12 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-02-04 14:44:12 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-02-04 14:44:12 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [READ]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-02-04 14:44:12 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-02-04 14:44:12 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-02-04 14:44:12 DEBUG AbstractEntityPersister:3847 - Static SQL for entity: com.dev.cinema.model.MovieSession
2020-02-04 14:44:12 DEBUG AbstractEntityPersister:3852 -  Version select: select id from movie_session where id =?
2020-02-04 14:44:12 DEBUG AbstractEntityPersister:3855 -  Snapshot select: select moviesessi_.id, moviesessi_.cinemaHall_id as cinemaHa3_2_, moviesessi_.movie_id as movie_id4_2_, moviesessi_.showTime as showTime2_2_ from movie_session moviesessi_ where moviesessi_.id=?
2020-02-04 14:44:12 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie_session (cinemaHall_id, movie_id, showTime, id) values (?, ?, ?, ?)
2020-02-04 14:44:12 DEBUG AbstractEntityPersister:394 -  Update 0: update movie_session set cinemaHall_id=?, movie_id=?, showTime=? where id=?
2020-02-04 14:44:12 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie_session where id=?
2020-02-04 14:44:12 DEBUG AbstractEntityPersister:3863 -  Identity insert: insert into movie_session (cinemaHall_id, movie_id, showTime) values (?, ?, ?)
2020-02-04 14:44:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52d6d273]
2020-02-04 14:44:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall
2020-02-04 14:44:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a8e6e89]
2020-02-04 14:44:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.capacity
2020-02-04 14:44:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.description
2020-02-04 14:44:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie
2020-02-04 14:44:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b6924cb]
2020-02-04 14:44:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.description
2020-02-04 14:44:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.title
2020-02-04 14:44:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : showTime
2020-02-04 14:44:12 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-02-04 14:44:12 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-02-04 14:44:12 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.MovieSession)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.MovieSession, querySpaceUid=<gen:0>, path=com.dev.cinema.model.MovieSession)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:1>, path=com.dev.cinema.model.MovieSession.cinemaHall)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:2>, path=com.dev.cinema.model.MovieSession.movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.MovieSession)
          - SQL table alias mapping - moviesessi0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(cinemaHall)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.dev.cinema.model.CinemaHall)
                - SQL table alias mapping - cinemahall1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(movie)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.dev.cinema.model.Movie)
                - SQL table alias mapping - movie2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}

2020-02-04 14:44:12 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.MovieSession [NONE]: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_, cinemahall1_.id as id1_0_1_, cinemahall1_.capacity as capacity2_0_1_, cinemahall1_.description as descript3_0_1_, movie2_.id as id1_1_2_, movie2_.description as descript2_1_2_, movie2_.title as title3_1_2_ from movie_session moviesessi0_ left outer join cinema_hall cinemahall1_ on moviesessi0_.cinemaHall_id=cinemahall1_.id left outer join movie movie2_ on moviesessi0_.movie_id=movie2_.id where moviesessi0_.id=?
2020-02-04 14:44:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ed043d3]
2020-02-04 14:44:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall
2020-02-04 14:44:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6419a0e1]
2020-02-04 14:44:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.capacity
2020-02-04 14:44:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.description
2020-02-04 14:44:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie
2020-02-04 14:44:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44af588b]
2020-02-04 14:44:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.description
2020-02-04 14:44:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.title
2020-02-04 14:44:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : showTime
2020-02-04 14:44:12 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-02-04 14:44:12 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-02-04 14:44:12 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.MovieSession)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.MovieSession, querySpaceUid=<gen:0>, path=com.dev.cinema.model.MovieSession)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:1>, path=com.dev.cinema.model.MovieSession.cinemaHall)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:2>, path=com.dev.cinema.model.MovieSession.movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.MovieSession)
          - SQL table alias mapping - moviesessi0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(cinemaHall)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.dev.cinema.model.CinemaHall)
                - SQL table alias mapping - cinemahall1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(movie)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.dev.cinema.model.Movie)
                - SQL table alias mapping - movie2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}

2020-02-04 14:44:12 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.MovieSession [READ]: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_, cinemahall1_.id as id1_0_1_, cinemahall1_.capacity as capacity2_0_1_, cinemahall1_.description as descript3_0_1_, movie2_.id as id1_1_2_, movie2_.description as descript2_1_2_, movie2_.title as title3_1_2_ from movie_session moviesessi0_ left outer join cinema_hall cinemahall1_ on moviesessi0_.cinemaHall_id=cinemahall1_.id left outer join movie movie2_ on moviesessi0_.movie_id=movie2_.id where moviesessi0_.id=?
2020-02-04 14:44:12 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.MovieSession: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_ from movie_session moviesessi0_ where moviesessi0_.id=?
2020-02-04 14:44:12 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.MovieSession: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_ from movie_session moviesessi0_ where moviesessi0_.id=?
2020-02-04 14:44:12 DEBUG SQL:127 - drop table if exists cinema_hall
2020-02-04 14:44:12 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@316acbb5] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-02-04 14:44:12 DEBUG SQL:127 - drop table if exists movie
2020-02-04 14:44:12 DEBUG SQL:127 - drop table if exists movie_session
2020-02-04 14:44:12 DEBUG SQL:127 - create table cinema_hall (id bigint not null auto_increment, capacity integer not null, description varchar(255), primary key (id)) engine=MyISAM
2020-02-04 14:44:12 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4e642ee1] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-02-04 14:44:12 DEBUG SQL:127 - create table movie (id bigint not null auto_increment, description varchar(255), title varchar(255), primary key (id)) engine=MyISAM
2020-02-04 14:44:12 DEBUG SQL:127 - create table movie_session (id bigint not null auto_increment, showTime datetime, cinemaHall_id bigint, movie_id bigint, primary key (id)) engine=MyISAM
2020-02-04 14:44:12 DEBUG SQL:127 - alter table movie_session add constraint FK6jauch8jou1nsodork3heqqsr foreign key (cinemaHall_id) references cinema_hall (id)
2020-02-04 14:44:12 DEBUG SQL:127 - alter table movie_session add constraint FKer8dsjajcvlud03f5165ajl39 foreign key (movie_id) references movie (id)
2020-02-04 14:44:13 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-02-04 14:44:13 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-02-04 14:44:13 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-04 14:44:13 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-04 14:44:13 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-02-04 14:44:13 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-02-04 14:44:13 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3382cf68
2020-02-04 14:44:13 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: c51b7baa-bf34-4304-b04e-4e87eaf627ff (<unnamed>)
2020-02-04 14:44:13 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-02-04 14:44:13 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-02-04 14:44:13 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-02-04 14:44:13 DEBUG TransactionImpl:81 - begin
2020-02-04 14:44:13 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-02-04 14:44:13 DEBUG SQL:127 - insert into movie (description, title) values (?, ?)
2020-02-04 14:44:13 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-02-04 14:44:13 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-02-04 14:44:13 DEBUG TransactionImpl:98 - committing
2020-02-04 14:44:13 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-02-04 14:44:13 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-02-04 14:44:13 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-02-04 14:44:13 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-02-04 14:44:13 DEBUG EntityPrinter:110 - Listing entities:
2020-02-04 14:44:13 DEBUG EntityPrinter:117 - com.dev.cinema.model.Movie{description=null, id=1, title=Fast and Furious}
2020-02-04 14:44:13 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-02-04 14:44:13 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-02-04 14:44:13 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-02-04 14:44:13 DEBUG TransactionImpl:81 - begin
2020-02-04 14:44:13 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-02-04 14:44:13 DEBUG SQL:127 - insert into cinema_hall (capacity, description) values (?, ?)
2020-02-04 14:44:13 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-02-04 14:44:13 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-02-04 14:44:13 DEBUG TransactionImpl:98 - committing
2020-02-04 14:44:13 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-02-04 14:44:13 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-02-04 14:44:13 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-02-04 14:44:13 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-02-04 14:44:13 DEBUG EntityPrinter:110 - Listing entities:
2020-02-04 14:44:13 DEBUG EntityPrinter:117 - com.dev.cinema.model.CinemaHall{description=Premium Hall, id=1, capacity=100}
2020-02-04 14:44:13 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-02-04 14:44:13 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-02-04 14:44:13 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-02-04 14:44:13 DEBUG TransactionImpl:81 - begin
2020-02-04 14:44:13 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-02-04 14:44:13 DEBUG SQL:127 - insert into movie_session (cinemaHall_id, movie_id, showTime) values (?, ?, ?)
2020-02-04 14:44:13 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-02-04 14:44:13 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-02-04 14:44:13 DEBUG TransactionImpl:98 - committing
2020-02-04 14:44:13 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-02-04 14:44:13 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-02-04 14:44:13 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-02-04 14:44:13 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-02-04 14:44:13 DEBUG EntityPrinter:110 - Listing entities:
2020-02-04 14:44:13 DEBUG EntityPrinter:117 - com.dev.cinema.model.MovieSession{cinemaHall=com.dev.cinema.model.CinemaHall#1, movie=com.dev.cinema.model.Movie#1, showTime=2020-02-04T14:44:13.306795500, id=1}
2020-02-04 14:44:13 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-02-04 14:44:13 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-02-04 14:44:13 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from MovieSession as generatedAlias0
2020-02-04 14:44:13 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@f1266c6
2020-02-04 14:44:13 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from com.dev.cinema.model.MovieSession as generatedAlias0
2020-02-04 14:44:13 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-02-04 14:44:13 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'MovieSession'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-02-04 14:44:13 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-02-04 14:44:13 DEBUG FromElement:149 - FromClause{level=1} : com.dev.cinema.model.MovieSession (generatedAlias0) -> moviesessi0_
2020-02-04 14:44:13 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> moviesessi0_.id
2020-02-04 14:44:13 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-02-04 14:44:13 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} moviesessi0_.id ) ( FromClause{level=1} movie_session moviesessi0_ ) )
2020-02-04 14:44:13 DEBUG JoinProcessor:128 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity MovieSession): [movie_session]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.dev.cinema.model.MovieSession)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-02-04 14:44:13 DEBUG JoinProcessor:295 - Using FROM fragment [movie_session moviesessi0_]
2020-02-04 14:44:13 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-02-04 14:44:13 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie_session)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'moviesessi0_.id as id1_2_' {alias=generatedAlias0, className=com.dev.cinema.model.MovieSession, tableAlias=moviesessi0_}
    |  \-[SQL_TOKEN] SqlFragment: 'moviesessi0_.cinemaHall_id as cinemaHa3_2_, moviesessi0_.movie_id as movie_id4_2_, moviesessi0_.showTime as showTime2_2_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[moviesessi0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'movie_session moviesessi0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie_session,tableAlias=moviesessi0_,origin=null,columns={,className=com.dev.cinema.model.MovieSession}}

2020-02-04 14:44:13 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-02-04 14:44:13 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from com.dev.cinema.model.MovieSession as generatedAlias0
2020-02-04 14:44:13 DEBUG QueryTranslatorImpl:255 - SQL: select moviesessi0_.id as id1_2_, moviesessi0_.cinemaHall_id as cinemaHa3_2_, moviesessi0_.movie_id as movie_id4_2_, moviesessi0_.showTime as showTime2_2_ from movie_session moviesessi0_
2020-02-04 14:44:13 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-02-04 14:44:13 DEBUG SQL:127 - select moviesessi0_.id as id1_2_, moviesessi0_.cinemaHall_id as cinemaHa3_2_, moviesessi0_.movie_id as movie_id4_2_, moviesessi0_.showTime as showTime2_2_ from movie_session moviesessi0_
2020-02-04 14:44:13 DEBUG Loader:384 - Result set row: 0
2020-02-04 14:44:13 DEBUG Loader:1586 - Result row: EntityKey[com.dev.cinema.model.MovieSession#1]
2020-02-04 14:44:13 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.MovieSession#1]
2020-02-04 14:44:13 DEBUG TwoPhaseLoad:190 - Processing attribute `cinemaHall` : value = 1
2020-02-04 14:44:13 DEBUG TwoPhaseLoad:221 - Attribute (`cinemaHall`)  - enhanced for lazy-loading? - false
2020-02-04 14:44:13 DEBUG SQL:127 - select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-02-04 14:44:13 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-02-04 14:44:13 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.CinemaHall#1]
2020-02-04 14:44:13 DEBUG TwoPhaseLoad:190 - Processing attribute `capacity` : value = 100
2020-02-04 14:44:13 DEBUG TwoPhaseLoad:221 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-02-04 14:44:13 DEBUG TwoPhaseLoad:190 - Processing attribute `description` : value = Premium Hall
2020-02-04 14:44:13 DEBUG TwoPhaseLoad:221 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-02-04 14:44:13 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.CinemaHall#1]
2020-02-04 14:44:13 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : com.dev.cinema.model.CinemaHall#1
2020-02-04 14:44:13 DEBUG TwoPhaseLoad:190 - Processing attribute `movie` : value = 1
2020-02-04 14:44:13 DEBUG TwoPhaseLoad:221 - Attribute (`movie`)  - enhanced for lazy-loading? - false
2020-02-04 14:44:13 DEBUG SQL:127 - select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-02-04 14:44:13 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-02-04 14:44:13 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.Movie#1]
2020-02-04 14:44:13 DEBUG TwoPhaseLoad:190 - Processing attribute `description` : value = null
2020-02-04 14:44:13 DEBUG TwoPhaseLoad:221 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-02-04 14:44:13 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Fast and Furious
2020-02-04 14:44:13 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-02-04 14:44:13 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.Movie#1]
2020-02-04 14:44:13 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : com.dev.cinema.model.Movie#1
2020-02-04 14:44:13 DEBUG TwoPhaseLoad:190 - Processing attribute `showTime` : value = 2020-02-04T14:44:13
2020-02-04 14:44:13 DEBUG TwoPhaseLoad:221 - Attribute (`showTime`)  - enhanced for lazy-loading? - false
2020-02-04 14:44:13 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.MovieSession#1]
2020-02-04 14:44:13 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-02-04 14:45:12 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-02-04 14:45:12 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-02-04 14:45:12 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-02-04 14:45:12 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-02-04 14:45:12 INFO  Version:46 - HHH000412: Hibernate Core {5.4.10.Final}
2020-02-04 14:45:12 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-02-04 14:45:12 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-02-04 14:45:13 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-02-04 14:45:13 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-02-04 14:45:13 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-02-04 14:45:13 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-02-04 14:45:13 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-02-04 14:45:13 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@67304a40
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@67304a40
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@67304a40
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7642df8f
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@37c7595
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@1fdf1c5
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@6b8d96d9
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@6b8d96d9
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6b8d96d9
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@5fe1ce85
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@5fe1ce85
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5fe1ce85
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@52851b44
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@52851b44
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@52851b44
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@23aa363a
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@23aa363a
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@23aa363a
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@1e8ce150
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@1e8ce150
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1e8ce150
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@363042d7
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@363042d7
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@363042d7
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@1477089c
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@1477089c
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1477089c
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@10b9db7b
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@10b9db7b
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4372b9b6
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4372b9b6
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@1f6c9cd8
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1f6c9cd8
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7f36662c
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1817f1eb
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@4a194c39
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4a194c39
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@c4ed84
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@c4ed84
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@3016fd5e
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3016fd5e
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@42463763
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@42463763
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@613a8ee1
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@613a8ee1
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2807bdeb
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2807bdeb
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@294e5088
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@294e5088
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@24d09c1
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@24d09c1
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ff65192
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ff65192
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@50ecde95
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@50ecde95
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@23fb172e
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@23fb172e
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1d131e1b
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1d131e1b
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1d131e1b
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4aa83f4f
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@70ab2d48
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@70ab2d48
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@70ab2d48
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7cbc3762
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@2f48b3d2
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2f48b3d2
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@4c550889
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4c550889
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3724af13
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3724af13
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@37052337
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@37052337
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@616fe72b
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@616fe72b
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@60957c0f
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@40dff0b7
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@40dff0b7
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@40dff0b7
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@366c4480
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@366c4480
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@366c4480
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@5cbe877d
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@5829e4f4
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@4566d049
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@4566d049
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@4566d049
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@ccb4b1b
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@ccb4b1b
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@ccb4b1b
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@7c1e2a2d
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@2cc3ad05
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@7e276594
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7e276594
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@77d2e85
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@54e22bdd
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@54e22bdd
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@7d42c224
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7d42c224
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5e01a982
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@704f1591
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@6955cb39
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@3f6db3fb
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3f6db3fb
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@68ad99fe
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@485e36bc
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@781f10f2
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2a79d4b1
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2e9fda69
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@17cdf2d0
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1755e85b
2020-02-04 14:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@736d6a5c
2020-02-04 14:45:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-02-04 14:45:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-02-04 14:45:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-02-04 14:45:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-02-04 14:45:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-02-04 14:45:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-02-04 14:45:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-02-04 14:45:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-02-04 14:45:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-02-04 14:45:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-02-04 14:45:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-02-04 14:45:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-02-04 14:45:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-02-04 14:45:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-02-04 14:45:13 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-02-04 14:45:13 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC]
2020-02-04 14:45:13 INFO  pooling:121 - HHH10001001: Connection properties: {password=roman, user=root}
2020-02-04 14:45:13 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-02-04 14:45:13 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-02-04 14:45:13 INFO  DriverManagerConnectionProviderImpl:249 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-02-04 14:45:14 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 8.0.19
      major : 8
      minor : 0
2020-02-04 14:45:14 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.19 (Revision: a0ca826f5cdf51a98356fdfb1bf251eb042f80bf)
      major : 8
      minor : 0
2020-02-04 14:45:14 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-02-04 14:45:14 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-02-04 14:45:14 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-02-04 14:45:14 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-02-04 14:45:14 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-02-04 14:45:14 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5328a9c1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5b78fdb1]
2020-02-04 14:45:14 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.Movie
2020-02-04 14:45:14 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-02-04 14:45:14 DEBUG EntityBinder:430 - Import with entity name Movie
2020-02-04 14:45:14 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.Movie on table movie
2020-02-04 14:45:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-02-04 14:45:14 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-02-04 14:45:14 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:id]
2020-02-04 14:45:14 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-02-04 14:45:14 DEBUG PropertyBinder:266 - Building property id
2020-02-04 14:45:14 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-02-04 14:45:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-02-04 14:45:14 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-02-04 14:45:14 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:description]
2020-02-04 14:45:14 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-02-04 14:45:14 DEBUG PropertyBinder:266 - Building property description
2020-02-04 14:45:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-02-04 14:45:14 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-02-04 14:45:14 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:title]
2020-02-04 14:45:14 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-02-04 14:45:14 DEBUG PropertyBinder:266 - Building property title
2020-02-04 14:45:14 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.MovieSession
2020-02-04 14:45:14 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-02-04 14:45:14 DEBUG EntityBinder:430 - Import with entity name MovieSession
2020-02-04 14:45:14 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.MovieSession on table movie_session
2020-02-04 14:45:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-02-04 14:45:14 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-02-04 14:45:14 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.MovieSession:id]
2020-02-04 14:45:14 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-02-04 14:45:14 DEBUG PropertyBinder:266 - Building property id
2020-02-04 14:45:14 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-02-04 14:45:14 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2020-02-04 14:45:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=cinemaHall, insertable=true, updatable=true, unique=false}
2020-02-04 14:45:14 DEBUG PropertyBinder:266 - Building property cinemaHall
2020-02-04 14:45:14 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2020-02-04 14:45:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=movie, insertable=true, updatable=true, unique=false}
2020-02-04 14:45:14 DEBUG PropertyBinder:266 - Building property movie
2020-02-04 14:45:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=showTime, insertable=true, updatable=true, unique=false}
2020-02-04 14:45:14 DEBUG PropertyBinder:175 - MetadataSourceProcessor property showTime with lazy=false
2020-02-04 14:45:14 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.MovieSession:showTime]
2020-02-04 14:45:14 DEBUG SimpleValueBinder:411 - building SimpleValue for showTime
2020-02-04 14:45:14 DEBUG PropertyBinder:266 - Building property showTime
2020-02-04 14:45:14 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.CinemaHall
2020-02-04 14:45:14 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-02-04 14:45:14 DEBUG EntityBinder:430 - Import with entity name CinemaHall
2020-02-04 14:45:14 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.CinemaHall on table cinema_hall
2020-02-04 14:45:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-02-04 14:45:14 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-02-04 14:45:14 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:id]
2020-02-04 14:45:14 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-02-04 14:45:14 DEBUG PropertyBinder:266 - Building property id
2020-02-04 14:45:14 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-02-04 14:45:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=capacity, insertable=true, updatable=true, unique=false}
2020-02-04 14:45:14 DEBUG PropertyBinder:175 - MetadataSourceProcessor property capacity with lazy=false
2020-02-04 14:45:14 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:capacity]
2020-02-04 14:45:14 DEBUG SimpleValueBinder:411 - building SimpleValue for capacity
2020-02-04 14:45:14 DEBUG PropertyBinder:266 - Building property capacity
2020-02-04 14:45:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-02-04 14:45:14 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-02-04 14:45:14 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:description]
2020-02-04 14:45:14 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-02-04 14:45:14 DEBUG PropertyBinder:266 - Building property description
2020-02-04 14:45:14 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-02-04 14:45:14 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-02-04 14:45:14 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-02-04 14:45:14 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-02-04 14:45:14 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for showTime
2020-02-04 14:45:14 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-02-04 14:45:14 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for capacity
2020-02-04 14:45:14 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-02-04 14:45:14 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-02-04 14:45:14 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie_session]
2020-02-04 14:45:14 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [cinema_hall]
2020-02-04 14:45:14 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.CinemaHall
2020-02-04 14:45:14 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.Movie
2020-02-04 14:45:14 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.CinemaHall
2020-02-04 14:45:14 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.Movie
2020-02-04 14:45:14 DEBUG SessionFactoryImpl:207 - Building session factory
2020-02-04 14:45:14 DEBUG Settings:68 - SessionFactory name : null
2020-02-04 14:45:14 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-02-04 14:45:14 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-02-04 14:45:14 DEBUG Settings:72 - Statistics: disabled
2020-02-04 14:45:14 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-02-04 14:45:14 DEBUG Settings:75 - Default entity-mode: pojo
2020-02-04 14:45:14 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-02-04 14:45:14 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-02-04 14:45:14 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2020-02-04 14:45:14 DEBUG Settings:80 - Default batch fetch size: -1
2020-02-04 14:45:14 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-02-04 14:45:14 DEBUG Settings:82 - Default null ordering: NONE
2020-02-04 14:45:14 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-02-04 14:45:14 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-02-04 14:45:14 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-02-04 14:45:14 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-02-04 14:45:14 DEBUG Settings:90 - Query language substitutions: {}
2020-02-04 14:45:14 DEBUG Settings:91 - Named query checking : enabled
2020-02-04 14:45:14 DEBUG Settings:93 - Second-level cache: disabled
2020-02-04 14:45:14 DEBUG Settings:94 - Second-level query cache: disabled
2020-02-04 14:45:14 DEBUG Settings:95 - Second-level query cache factory: null
2020-02-04 14:45:14 DEBUG Settings:96 - Second-level cache region prefix: null
2020-02-04 14:45:14 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-02-04 14:45:14 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-02-04 14:45:14 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-02-04 14:45:14 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-02-04 14:45:14 DEBUG Settings:102 - JDBC batch size: 15
2020-02-04 14:45:14 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-02-04 14:45:14 DEBUG Settings:104 - Scrollable result sets: enabled
2020-02-04 14:45:14 DEBUG Settings:105 - Wrap result sets: disabled
2020-02-04 14:45:14 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-02-04 14:45:14 DEBUG Settings:107 - JDBC result set fetch size: null
2020-02-04 14:45:14 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-02-04 14:45:14 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-02-04 14:45:14 DEBUG Settings:111 - JPA compliance - query : disabled
2020-02-04 14:45:14 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2020-02-04 14:45:14 DEBUG Settings:113 - JPA compliance - lists : disabled
2020-02-04 14:45:14 DEBUG Settings:114 - JPA compliance - transactions : disabled
2020-02-04 14:45:14 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-02-04 14:45:14 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, dialect=org.hibernate.dialect.MySQL5Dialect, java.specification.version=11, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\admin\Desktop\HW_Mate_from_Shop\cinema_project\target\classes;C:\Users\admin\.m2\repository\org\hibernate\hibernate-core\5.4.10.Final\hibernate-core-5.4.10.Final.jar;C:\Users\admin\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\admin\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\admin\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\admin\.m2\repository\net\bytebuddy\byte-buddy\1.10.2\byte-buddy-1.10.2.jar;C:\Users\admin\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\admin\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\admin\.m2\repository\org\jboss\jandex\2.1.1.Final\jandex-2.1.1.Final.jar;C:\Users\admin\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\admin\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\admin\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\admin\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\admin\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\admin\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\admin\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\admin\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\admin\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\admin\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\admin\.m2\repository\mysql\mysql-connector-java\8.0.19\mysql-connector-java-8.0.19.jar;C:\Users\admin\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\admin\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=JetBrains s.r.o, sun.arch.data.model=64, hbm2ddl.auto=create-drop, user.variant=, java.vendor.url=https://www.jetbrains.com/, user.timezone=Europe/Helsinki, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=D:\IntelliJ IDEA 2019.3.1\jbr\bin, sun.java.command=com.dev.cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\admin, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2019-10-15, java.home=D:\IntelliJ IDEA 2019.3.1\jbr, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, user.script=, connection.password=roman, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.5+10-b520.17, user.name=admin, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://youtrack.jetbrains.com, java.io.tmpdir=C:\Users\admin\AppData\Local\Temp\, java.version=11.0.5, user.dir=C:\Users\admin\Desktop\HW_Mate_from_Shop\cinema_project, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4fad6218, java.library.path=D:\IntelliJ IDEA 2019.3.1\jbr\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\Git\cmd;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\admin\AppData\Local\Microsoft\WindowsApps;;D:\IntelliJ IDEA 2019.3.1\bin;;., java.vendor=JetBrains s.r.o, java.vm.info=mixed mode, sharing, java.vm.version=11.0.5+10-b520.17, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, java.class.version=55.0}
2020-02-04 14:45:14 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-02-04 14:45:14 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-02-04 14:45:14 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5328a9c1] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@213bd3d5]
2020-02-04 14:45:14 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.CinemaHall] is safe
2020-02-04 14:45:14 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.CinemaHall
2020-02-04 14:45:14 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.CinemaHall] is safe
2020-02-04 14:45:14 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.CinemaHall
2020-02-04 14:45:15 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-02-04 14:45:15 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-02-04 14:45:15 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-02-04 14:45:15 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-02-04 14:45:15 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.MovieSession] is safe
2020-02-04 14:45:15 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.MovieSession
2020-02-04 14:45:15 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.MovieSession] is safe
2020-02-04 14:45:15 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.MovieSession
2020-02-04 14:45:15 DEBUG AbstractEntityPersister:3847 - Static SQL for entity: com.dev.cinema.model.CinemaHall
2020-02-04 14:45:15 DEBUG AbstractEntityPersister:3852 -  Version select: select id from cinema_hall where id =?
2020-02-04 14:45:15 DEBUG AbstractEntityPersister:3855 -  Snapshot select: select cinemahall_.id, cinemahall_.capacity as capacity2_0_, cinemahall_.description as descript3_0_ from cinema_hall cinemahall_ where cinemahall_.id=?
2020-02-04 14:45:15 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into cinema_hall (capacity, description, id) values (?, ?, ?)
2020-02-04 14:45:15 DEBUG AbstractEntityPersister:394 -  Update 0: update cinema_hall set capacity=?, description=? where id=?
2020-02-04 14:45:15 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from cinema_hall where id=?
2020-02-04 14:45:15 DEBUG AbstractEntityPersister:3863 -  Identity insert: insert into cinema_hall (capacity, description) values (?, ?)
2020-02-04 14:45:15 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43a09ce2]
2020-02-04 14:45:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-02-04 14:45:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-02-04 14:45:15 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-02-04 14:45:15 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-02-04 14:45:15 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=com.dev.cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-02-04 14:45:15 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.CinemaHall [NONE]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-02-04 14:45:15 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@439e3cb4]
2020-02-04 14:45:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-02-04 14:45:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-02-04 14:45:15 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-02-04 14:45:15 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-02-04 14:45:15 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=com.dev.cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-02-04 14:45:15 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.CinemaHall [READ]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-02-04 14:45:15 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-02-04 14:45:15 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-02-04 14:45:15 DEBUG AbstractEntityPersister:3847 - Static SQL for entity: com.dev.cinema.model.Movie
2020-02-04 14:45:15 DEBUG AbstractEntityPersister:3852 -  Version select: select id from movie where id =?
2020-02-04 14:45:15 DEBUG AbstractEntityPersister:3855 -  Snapshot select: select movie_.id, movie_.description as descript2_1_, movie_.title as title3_1_ from movie movie_ where movie_.id=?
2020-02-04 14:45:15 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, title, id) values (?, ?, ?)
2020-02-04 14:45:15 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, title=? where id=?
2020-02-04 14:45:15 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-02-04 14:45:15 DEBUG AbstractEntityPersister:3863 -  Identity insert: insert into movie (description, title) values (?, ?)
2020-02-04 14:45:15 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@462e1e64]
2020-02-04 14:45:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-02-04 14:45:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-02-04 14:45:15 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-02-04 14:45:15 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-02-04 14:45:15 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-02-04 14:45:15 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [NONE]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-02-04 14:45:15 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49f40c00]
2020-02-04 14:45:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-02-04 14:45:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-02-04 14:45:15 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-02-04 14:45:15 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-02-04 14:45:15 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-02-04 14:45:15 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [READ]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-02-04 14:45:15 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-02-04 14:45:15 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-02-04 14:45:15 DEBUG AbstractEntityPersister:3847 - Static SQL for entity: com.dev.cinema.model.MovieSession
2020-02-04 14:45:15 DEBUG AbstractEntityPersister:3852 -  Version select: select id from movie_session where id =?
2020-02-04 14:45:15 DEBUG AbstractEntityPersister:3855 -  Snapshot select: select moviesessi_.id, moviesessi_.cinemaHall_id as cinemaHa3_2_, moviesessi_.movie_id as movie_id4_2_, moviesessi_.showTime as showTime2_2_ from movie_session moviesessi_ where moviesessi_.id=?
2020-02-04 14:45:15 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie_session (cinemaHall_id, movie_id, showTime, id) values (?, ?, ?, ?)
2020-02-04 14:45:15 DEBUG AbstractEntityPersister:394 -  Update 0: update movie_session set cinemaHall_id=?, movie_id=?, showTime=? where id=?
2020-02-04 14:45:15 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie_session where id=?
2020-02-04 14:45:15 DEBUG AbstractEntityPersister:3863 -  Identity insert: insert into movie_session (cinemaHall_id, movie_id, showTime) values (?, ?, ?)
2020-02-04 14:45:15 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52d6d273]
2020-02-04 14:45:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall
2020-02-04 14:45:15 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a8e6e89]
2020-02-04 14:45:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.capacity
2020-02-04 14:45:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.description
2020-02-04 14:45:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie
2020-02-04 14:45:15 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b6924cb]
2020-02-04 14:45:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.description
2020-02-04 14:45:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.title
2020-02-04 14:45:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : showTime
2020-02-04 14:45:15 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-02-04 14:45:15 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-02-04 14:45:15 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.MovieSession)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.MovieSession, querySpaceUid=<gen:0>, path=com.dev.cinema.model.MovieSession)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:1>, path=com.dev.cinema.model.MovieSession.cinemaHall)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:2>, path=com.dev.cinema.model.MovieSession.movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.MovieSession)
          - SQL table alias mapping - moviesessi0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(cinemaHall)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.dev.cinema.model.CinemaHall)
                - SQL table alias mapping - cinemahall1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(movie)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.dev.cinema.model.Movie)
                - SQL table alias mapping - movie2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}

2020-02-04 14:45:15 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.MovieSession [NONE]: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_, cinemahall1_.id as id1_0_1_, cinemahall1_.capacity as capacity2_0_1_, cinemahall1_.description as descript3_0_1_, movie2_.id as id1_1_2_, movie2_.description as descript2_1_2_, movie2_.title as title3_1_2_ from movie_session moviesessi0_ left outer join cinema_hall cinemahall1_ on moviesessi0_.cinemaHall_id=cinemahall1_.id left outer join movie movie2_ on moviesessi0_.movie_id=movie2_.id where moviesessi0_.id=?
2020-02-04 14:45:15 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ed043d3]
2020-02-04 14:45:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall
2020-02-04 14:45:15 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6419a0e1]
2020-02-04 14:45:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.capacity
2020-02-04 14:45:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.description
2020-02-04 14:45:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie
2020-02-04 14:45:15 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44af588b]
2020-02-04 14:45:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.description
2020-02-04 14:45:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.title
2020-02-04 14:45:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : showTime
2020-02-04 14:45:15 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-02-04 14:45:15 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-02-04 14:45:15 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.MovieSession)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.MovieSession, querySpaceUid=<gen:0>, path=com.dev.cinema.model.MovieSession)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:1>, path=com.dev.cinema.model.MovieSession.cinemaHall)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:2>, path=com.dev.cinema.model.MovieSession.movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.MovieSession)
          - SQL table alias mapping - moviesessi0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(cinemaHall)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.dev.cinema.model.CinemaHall)
                - SQL table alias mapping - cinemahall1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(movie)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.dev.cinema.model.Movie)
                - SQL table alias mapping - movie2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}

2020-02-04 14:45:15 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.MovieSession [READ]: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_, cinemahall1_.id as id1_0_1_, cinemahall1_.capacity as capacity2_0_1_, cinemahall1_.description as descript3_0_1_, movie2_.id as id1_1_2_, movie2_.description as descript2_1_2_, movie2_.title as title3_1_2_ from movie_session moviesessi0_ left outer join cinema_hall cinemahall1_ on moviesessi0_.cinemaHall_id=cinemahall1_.id left outer join movie movie2_ on moviesessi0_.movie_id=movie2_.id where moviesessi0_.id=?
2020-02-04 14:45:15 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.MovieSession: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_ from movie_session moviesessi0_ where moviesessi0_.id=?
2020-02-04 14:45:15 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.MovieSession: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_ from movie_session moviesessi0_ where moviesessi0_.id=?
2020-02-04 14:45:15 DEBUG SQL:127 - drop table if exists cinema_hall
2020-02-04 14:45:15 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@316acbb5] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-02-04 14:45:15 DEBUG SQL:127 - drop table if exists movie
2020-02-04 14:45:15 DEBUG SQL:127 - drop table if exists movie_session
2020-02-04 14:45:15 DEBUG SQL:127 - create table cinema_hall (id bigint not null auto_increment, capacity integer not null, description varchar(255), primary key (id)) engine=MyISAM
2020-02-04 14:45:15 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4e642ee1] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-02-04 14:45:15 DEBUG SQL:127 - create table movie (id bigint not null auto_increment, description varchar(255), title varchar(255), primary key (id)) engine=MyISAM
2020-02-04 14:45:15 DEBUG SQL:127 - create table movie_session (id bigint not null auto_increment, showTime datetime, cinemaHall_id bigint, movie_id bigint, primary key (id)) engine=MyISAM
2020-02-04 14:45:15 DEBUG SQL:127 - alter table movie_session add constraint FK6jauch8jou1nsodork3heqqsr foreign key (cinemaHall_id) references cinema_hall (id)
2020-02-04 14:45:15 DEBUG SQL:127 - alter table movie_session add constraint FKer8dsjajcvlud03f5165ajl39 foreign key (movie_id) references movie (id)
2020-02-04 14:45:15 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-02-04 14:45:15 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-02-04 14:45:15 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-04 14:45:15 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-04 14:45:15 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-02-04 14:45:15 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-02-04 14:45:15 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3382cf68
2020-02-04 14:45:15 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 605e8e6d-b876-4db8-8190-0b5e6f8e3549 (<unnamed>)
2020-02-04 14:45:15 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-02-04 14:45:15 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-02-04 14:45:15 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-02-04 14:45:15 DEBUG TransactionImpl:81 - begin
2020-02-04 14:45:15 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-02-04 14:45:15 DEBUG SQL:127 - insert into movie (description, title) values (?, ?)
2020-02-04 14:45:15 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-02-04 14:45:15 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-02-04 14:45:15 DEBUG TransactionImpl:98 - committing
2020-02-04 14:45:15 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-02-04 14:45:15 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-02-04 14:45:15 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-02-04 14:45:15 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-02-04 14:45:15 DEBUG EntityPrinter:110 - Listing entities:
2020-02-04 14:45:15 DEBUG EntityPrinter:117 - com.dev.cinema.model.Movie{description=null, id=1, title=Fast and Furious}
2020-02-04 14:45:15 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-02-04 14:45:15 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-02-04 14:45:15 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-02-04 14:45:15 DEBUG TransactionImpl:81 - begin
2020-02-04 14:45:15 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-02-04 14:45:15 DEBUG SQL:127 - insert into cinema_hall (capacity, description) values (?, ?)
2020-02-04 14:45:15 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-02-04 14:45:15 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-02-04 14:45:15 DEBUG TransactionImpl:98 - committing
2020-02-04 14:45:15 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-02-04 14:45:15 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-02-04 14:45:15 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-02-04 14:45:15 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-02-04 14:45:15 DEBUG EntityPrinter:110 - Listing entities:
2020-02-04 14:45:15 DEBUG EntityPrinter:117 - com.dev.cinema.model.CinemaHall{description=Premium Hall, id=1, capacity=100}
2020-02-04 14:45:15 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-02-04 14:45:15 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-02-04 14:45:15 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-02-04 14:45:15 DEBUG TransactionImpl:81 - begin
2020-02-04 14:45:15 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-02-04 14:45:15 DEBUG SQL:127 - insert into movie_session (cinemaHall_id, movie_id, showTime) values (?, ?, ?)
2020-02-04 14:45:16 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-02-04 14:45:16 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-02-04 14:45:16 DEBUG TransactionImpl:98 - committing
2020-02-04 14:45:16 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2020-02-04 14:45:16 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2020-02-04 14:45:16 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-02-04 14:45:16 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-02-04 14:45:16 DEBUG EntityPrinter:110 - Listing entities:
2020-02-04 14:45:16 DEBUG EntityPrinter:117 - com.dev.cinema.model.MovieSession{cinemaHall=com.dev.cinema.model.CinemaHall#1, movie=com.dev.cinema.model.Movie#1, showTime=2020-02-04T14:45:15.967723600, id=1}
2020-02-04 14:45:16 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-02-04 14:45:16 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-02-04 14:45:16 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from MovieSession as generatedAlias0
2020-02-04 14:45:16 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@f1266c6
2020-02-04 14:45:16 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from com.dev.cinema.model.MovieSession as generatedAlias0
2020-02-04 14:45:16 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-02-04 14:45:16 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'MovieSession'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-02-04 14:45:16 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-02-04 14:45:16 DEBUG FromElement:149 - FromClause{level=1} : com.dev.cinema.model.MovieSession (generatedAlias0) -> moviesessi0_
2020-02-04 14:45:16 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> moviesessi0_.id
2020-02-04 14:45:16 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-02-04 14:45:16 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} moviesessi0_.id ) ( FromClause{level=1} movie_session moviesessi0_ ) )
2020-02-04 14:45:16 DEBUG JoinProcessor:128 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity MovieSession): [movie_session]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.dev.cinema.model.MovieSession)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-02-04 14:45:16 DEBUG JoinProcessor:295 - Using FROM fragment [movie_session moviesessi0_]
2020-02-04 14:45:16 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-02-04 14:45:16 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie_session)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'moviesessi0_.id as id1_2_' {alias=generatedAlias0, className=com.dev.cinema.model.MovieSession, tableAlias=moviesessi0_}
    |  \-[SQL_TOKEN] SqlFragment: 'moviesessi0_.cinemaHall_id as cinemaHa3_2_, moviesessi0_.movie_id as movie_id4_2_, moviesessi0_.showTime as showTime2_2_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[moviesessi0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'movie_session moviesessi0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie_session,tableAlias=moviesessi0_,origin=null,columns={,className=com.dev.cinema.model.MovieSession}}

2020-02-04 14:45:16 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-02-04 14:45:16 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from com.dev.cinema.model.MovieSession as generatedAlias0
2020-02-04 14:45:16 DEBUG QueryTranslatorImpl:255 - SQL: select moviesessi0_.id as id1_2_, moviesessi0_.cinemaHall_id as cinemaHa3_2_, moviesessi0_.movie_id as movie_id4_2_, moviesessi0_.showTime as showTime2_2_ from movie_session moviesessi0_
2020-02-04 14:45:16 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-02-04 14:45:16 DEBUG SQL:127 - select moviesessi0_.id as id1_2_, moviesessi0_.cinemaHall_id as cinemaHa3_2_, moviesessi0_.movie_id as movie_id4_2_, moviesessi0_.showTime as showTime2_2_ from movie_session moviesessi0_
2020-02-04 14:45:16 DEBUG Loader:384 - Result set row: 0
2020-02-04 14:45:16 DEBUG Loader:1586 - Result row: EntityKey[com.dev.cinema.model.MovieSession#1]
2020-02-04 14:45:16 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.MovieSession#1]
2020-02-04 14:45:16 DEBUG TwoPhaseLoad:190 - Processing attribute `cinemaHall` : value = 1
2020-02-04 14:45:16 DEBUG TwoPhaseLoad:221 - Attribute (`cinemaHall`)  - enhanced for lazy-loading? - false
2020-02-04 14:45:16 DEBUG SQL:127 - select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-02-04 14:45:16 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-02-04 14:45:16 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.CinemaHall#1]
2020-02-04 14:45:16 DEBUG TwoPhaseLoad:190 - Processing attribute `capacity` : value = 100
2020-02-04 14:45:16 DEBUG TwoPhaseLoad:221 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-02-04 14:45:16 DEBUG TwoPhaseLoad:190 - Processing attribute `description` : value = Premium Hall
2020-02-04 14:45:16 DEBUG TwoPhaseLoad:221 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-02-04 14:45:16 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.CinemaHall#1]
2020-02-04 14:45:16 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : com.dev.cinema.model.CinemaHall#1
2020-02-04 14:45:16 DEBUG TwoPhaseLoad:190 - Processing attribute `movie` : value = 1
2020-02-04 14:45:16 DEBUG TwoPhaseLoad:221 - Attribute (`movie`)  - enhanced for lazy-loading? - false
2020-02-04 14:45:16 DEBUG SQL:127 - select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.title as title3_1_0_ from movie movie0_ where movie0_.id=?
2020-02-04 14:45:16 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-02-04 14:45:16 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.Movie#1]
2020-02-04 14:45:16 DEBUG TwoPhaseLoad:190 - Processing attribute `description` : value = null
2020-02-04 14:45:16 DEBUG TwoPhaseLoad:221 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-02-04 14:45:16 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Fast and Furious
2020-02-04 14:45:16 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-02-04 14:45:16 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.Movie#1]
2020-02-04 14:45:16 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : com.dev.cinema.model.Movie#1
2020-02-04 14:45:16 DEBUG TwoPhaseLoad:190 - Processing attribute `showTime` : value = 2020-02-04T14:45:16
2020-02-04 14:45:16 DEBUG TwoPhaseLoad:221 - Attribute (`showTime`)  - enhanced for lazy-loading? - false
2020-02-04 14:45:16 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.MovieSession#1]
2020-02-04 14:45:16 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
